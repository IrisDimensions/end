{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "https://volmit.com/iris-schema/irismodobjectplacementbiomeinjector.json",
    "anyOf": [
        {
            "description": "An object placement injector",
            "type": "object",
            "properties": {
                "biome": {
                    "type": "string",
                    "$ref": "#/definitions/erzbiomes",
                    "description": "biome\nThe biome to find\n   \nIris Biome\n\n    \n* Default Value is \nMust be a valid biomes (use ctrl+space for auto complete!)"
                },
                "place": {
                    "type": "array",
                    "minItems": 1,
                    "items": {"$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisobjectplacement"},
                    "description": "place\nA biome to inject into the region\n   \nList of ObjectPlacements (Objects)\n\n    \n* Default Value is an empty list\n* At least one entry must be defined, or just remove this list."
                }
            }
        },
        {"type": "string"}
    ],
    "definitions": {
        "enum-block-type": {"enum": [
            "minecraft:air",
            "minecraft:stone",
            "minecraft:granite",
            "minecraft:polished_granite",
            "minecraft:diorite",
            "minecraft:polished_diorite",
            "minecraft:andesite",
            "minecraft:polished_andesite",
            "minecraft:deepslate",
            "minecraft:cobbled_deepslate",
            "minecraft:polished_deepslate",
            "minecraft:calcite",
            "minecraft:tuff",
            "minecraft:dripstone_block",
            "minecraft:grass_block",
            "minecraft:dirt",
            "minecraft:coarse_dirt",
            "minecraft:podzol",
            "minecraft:rooted_dirt",
            "minecraft:mud",
            "minecraft:crimson_nylium",
            "minecraft:warped_nylium",
            "minecraft:cobblestone",
            "minecraft:oak_planks",
            "minecraft:spruce_planks",
            "minecraft:birch_planks",
            "minecraft:jungle_planks",
            "minecraft:acacia_planks",
            "minecraft:dark_oak_planks",
            "minecraft:mangrove_planks",
            "minecraft:crimson_planks",
            "minecraft:warped_planks",
            "minecraft:oak_sapling",
            "minecraft:spruce_sapling",
            "minecraft:birch_sapling",
            "minecraft:jungle_sapling",
            "minecraft:acacia_sapling",
            "minecraft:dark_oak_sapling",
            "minecraft:mangrove_propagule",
            "minecraft:bedrock",
            "minecraft:sand",
            "minecraft:red_sand",
            "minecraft:gravel",
            "minecraft:coal_ore",
            "minecraft:deepslate_coal_ore",
            "minecraft:iron_ore",
            "minecraft:deepslate_iron_ore",
            "minecraft:copper_ore",
            "minecraft:deepslate_copper_ore",
            "minecraft:gold_ore",
            "minecraft:deepslate_gold_ore",
            "minecraft:redstone_ore",
            "minecraft:deepslate_redstone_ore",
            "minecraft:emerald_ore",
            "minecraft:deepslate_emerald_ore",
            "minecraft:lapis_ore",
            "minecraft:deepslate_lapis_ore",
            "minecraft:diamond_ore",
            "minecraft:deepslate_diamond_ore",
            "minecraft:nether_gold_ore",
            "minecraft:nether_quartz_ore",
            "minecraft:ancient_debris",
            "minecraft:coal_block",
            "minecraft:raw_iron_block",
            "minecraft:raw_copper_block",
            "minecraft:raw_gold_block",
            "minecraft:amethyst_block",
            "minecraft:budding_amethyst",
            "minecraft:iron_block",
            "minecraft:copper_block",
            "minecraft:gold_block",
            "minecraft:diamond_block",
            "minecraft:netherite_block",
            "minecraft:exposed_copper",
            "minecraft:weathered_copper",
            "minecraft:oxidized_copper",
            "minecraft:cut_copper",
            "minecraft:exposed_cut_copper",
            "minecraft:weathered_cut_copper",
            "minecraft:oxidized_cut_copper",
            "minecraft:cut_copper_stairs",
            "minecraft:exposed_cut_copper_stairs",
            "minecraft:weathered_cut_copper_stairs",
            "minecraft:oxidized_cut_copper_stairs",
            "minecraft:cut_copper_slab",
            "minecraft:exposed_cut_copper_slab",
            "minecraft:weathered_cut_copper_slab",
            "minecraft:oxidized_cut_copper_slab",
            "minecraft:waxed_copper_block",
            "minecraft:waxed_exposed_copper",
            "minecraft:waxed_weathered_copper",
            "minecraft:waxed_oxidized_copper",
            "minecraft:waxed_cut_copper",
            "minecraft:waxed_exposed_cut_copper",
            "minecraft:waxed_weathered_cut_copper",
            "minecraft:waxed_oxidized_cut_copper",
            "minecraft:waxed_cut_copper_stairs",
            "minecraft:waxed_exposed_cut_copper_stairs",
            "minecraft:waxed_weathered_cut_copper_stairs",
            "minecraft:waxed_oxidized_cut_copper_stairs",
            "minecraft:waxed_cut_copper_slab",
            "minecraft:waxed_exposed_cut_copper_slab",
            "minecraft:waxed_weathered_cut_copper_slab",
            "minecraft:waxed_oxidized_cut_copper_slab",
            "minecraft:oak_log",
            "minecraft:spruce_log",
            "minecraft:birch_log",
            "minecraft:jungle_log",
            "minecraft:acacia_log",
            "minecraft:dark_oak_log",
            "minecraft:mangrove_log",
            "minecraft:mangrove_roots",
            "minecraft:muddy_mangrove_roots",
            "minecraft:crimson_stem",
            "minecraft:warped_stem",
            "minecraft:stripped_oak_log",
            "minecraft:stripped_spruce_log",
            "minecraft:stripped_birch_log",
            "minecraft:stripped_jungle_log",
            "minecraft:stripped_acacia_log",
            "minecraft:stripped_dark_oak_log",
            "minecraft:stripped_mangrove_log",
            "minecraft:stripped_crimson_stem",
            "minecraft:stripped_warped_stem",
            "minecraft:stripped_oak_wood",
            "minecraft:stripped_spruce_wood",
            "minecraft:stripped_birch_wood",
            "minecraft:stripped_jungle_wood",
            "minecraft:stripped_acacia_wood",
            "minecraft:stripped_dark_oak_wood",
            "minecraft:stripped_mangrove_wood",
            "minecraft:stripped_crimson_hyphae",
            "minecraft:stripped_warped_hyphae",
            "minecraft:oak_wood",
            "minecraft:spruce_wood",
            "minecraft:birch_wood",
            "minecraft:jungle_wood",
            "minecraft:acacia_wood",
            "minecraft:dark_oak_wood",
            "minecraft:mangrove_wood",
            "minecraft:crimson_hyphae",
            "minecraft:warped_hyphae",
            "minecraft:oak_leaves",
            "minecraft:spruce_leaves",
            "minecraft:birch_leaves",
            "minecraft:jungle_leaves",
            "minecraft:acacia_leaves",
            "minecraft:dark_oak_leaves",
            "minecraft:mangrove_leaves",
            "minecraft:azalea_leaves",
            "minecraft:flowering_azalea_leaves",
            "minecraft:sponge",
            "minecraft:wet_sponge",
            "minecraft:glass",
            "minecraft:tinted_glass",
            "minecraft:lapis_block",
            "minecraft:sandstone",
            "minecraft:chiseled_sandstone",
            "minecraft:cut_sandstone",
            "minecraft:cobweb",
            "minecraft:grass",
            "minecraft:fern",
            "minecraft:azalea",
            "minecraft:flowering_azalea",
            "minecraft:dead_bush",
            "minecraft:seagrass",
            "minecraft:sea_pickle",
            "minecraft:white_wool",
            "minecraft:orange_wool",
            "minecraft:magenta_wool",
            "minecraft:light_blue_wool",
            "minecraft:yellow_wool",
            "minecraft:lime_wool",
            "minecraft:pink_wool",
            "minecraft:gray_wool",
            "minecraft:light_gray_wool",
            "minecraft:cyan_wool",
            "minecraft:purple_wool",
            "minecraft:blue_wool",
            "minecraft:brown_wool",
            "minecraft:green_wool",
            "minecraft:red_wool",
            "minecraft:black_wool",
            "minecraft:dandelion",
            "minecraft:poppy",
            "minecraft:blue_orchid",
            "minecraft:allium",
            "minecraft:azure_bluet",
            "minecraft:red_tulip",
            "minecraft:orange_tulip",
            "minecraft:white_tulip",
            "minecraft:pink_tulip",
            "minecraft:oxeye_daisy",
            "minecraft:cornflower",
            "minecraft:lily_of_the_valley",
            "minecraft:wither_rose",
            "minecraft:spore_blossom",
            "minecraft:brown_mushroom",
            "minecraft:red_mushroom",
            "minecraft:crimson_fungus",
            "minecraft:warped_fungus",
            "minecraft:crimson_roots",
            "minecraft:warped_roots",
            "minecraft:nether_sprouts",
            "minecraft:weeping_vines",
            "minecraft:twisting_vines",
            "minecraft:sugar_cane",
            "minecraft:kelp",
            "minecraft:moss_carpet",
            "minecraft:moss_block",
            "minecraft:hanging_roots",
            "minecraft:big_dripleaf",
            "minecraft:small_dripleaf",
            "minecraft:bamboo",
            "minecraft:oak_slab",
            "minecraft:spruce_slab",
            "minecraft:birch_slab",
            "minecraft:jungle_slab",
            "minecraft:acacia_slab",
            "minecraft:dark_oak_slab",
            "minecraft:mangrove_slab",
            "minecraft:crimson_slab",
            "minecraft:warped_slab",
            "minecraft:stone_slab",
            "minecraft:smooth_stone_slab",
            "minecraft:sandstone_slab",
            "minecraft:cut_sandstone_slab",
            "minecraft:petrified_oak_slab",
            "minecraft:cobblestone_slab",
            "minecraft:brick_slab",
            "minecraft:stone_brick_slab",
            "minecraft:mud_brick_slab",
            "minecraft:nether_brick_slab",
            "minecraft:quartz_slab",
            "minecraft:red_sandstone_slab",
            "minecraft:cut_red_sandstone_slab",
            "minecraft:purpur_slab",
            "minecraft:prismarine_slab",
            "minecraft:prismarine_brick_slab",
            "minecraft:dark_prismarine_slab",
            "minecraft:smooth_quartz",
            "minecraft:smooth_red_sandstone",
            "minecraft:smooth_sandstone",
            "minecraft:smooth_stone",
            "minecraft:bricks",
            "minecraft:bookshelf",
            "minecraft:mossy_cobblestone",
            "minecraft:obsidian",
            "minecraft:torch",
            "minecraft:end_rod",
            "minecraft:chorus_plant",
            "minecraft:chorus_flower",
            "minecraft:purpur_block",
            "minecraft:purpur_pillar",
            "minecraft:purpur_stairs",
            "minecraft:spawner",
            "minecraft:chest",
            "minecraft:crafting_table",
            "minecraft:farmland",
            "minecraft:furnace",
            "minecraft:ladder",
            "minecraft:cobblestone_stairs",
            "minecraft:snow",
            "minecraft:ice",
            "minecraft:snow_block",
            "minecraft:cactus",
            "minecraft:clay",
            "minecraft:jukebox",
            "minecraft:oak_fence",
            "minecraft:spruce_fence",
            "minecraft:birch_fence",
            "minecraft:jungle_fence",
            "minecraft:acacia_fence",
            "minecraft:dark_oak_fence",
            "minecraft:mangrove_fence",
            "minecraft:crimson_fence",
            "minecraft:warped_fence",
            "minecraft:pumpkin",
            "minecraft:carved_pumpkin",
            "minecraft:jack_o_lantern",
            "minecraft:netherrack",
            "minecraft:soul_sand",
            "minecraft:soul_soil",
            "minecraft:basalt",
            "minecraft:polished_basalt",
            "minecraft:smooth_basalt",
            "minecraft:soul_torch",
            "minecraft:glowstone",
            "minecraft:infested_stone",
            "minecraft:infested_cobblestone",
            "minecraft:infested_stone_bricks",
            "minecraft:infested_mossy_stone_bricks",
            "minecraft:infested_cracked_stone_bricks",
            "minecraft:infested_chiseled_stone_bricks",
            "minecraft:infested_deepslate",
            "minecraft:stone_bricks",
            "minecraft:mossy_stone_bricks",
            "minecraft:cracked_stone_bricks",
            "minecraft:chiseled_stone_bricks",
            "minecraft:packed_mud",
            "minecraft:mud_bricks",
            "minecraft:deepslate_bricks",
            "minecraft:cracked_deepslate_bricks",
            "minecraft:deepslate_tiles",
            "minecraft:cracked_deepslate_tiles",
            "minecraft:chiseled_deepslate",
            "minecraft:reinforced_deepslate",
            "minecraft:brown_mushroom_block",
            "minecraft:red_mushroom_block",
            "minecraft:mushroom_stem",
            "minecraft:iron_bars",
            "minecraft:chain",
            "minecraft:glass_pane",
            "minecraft:melon",
            "minecraft:vine",
            "minecraft:glow_lichen",
            "minecraft:brick_stairs",
            "minecraft:stone_brick_stairs",
            "minecraft:mud_brick_stairs",
            "minecraft:mycelium",
            "minecraft:lily_pad",
            "minecraft:nether_bricks",
            "minecraft:cracked_nether_bricks",
            "minecraft:chiseled_nether_bricks",
            "minecraft:nether_brick_fence",
            "minecraft:nether_brick_stairs",
            "minecraft:sculk",
            "minecraft:sculk_vein",
            "minecraft:sculk_catalyst",
            "minecraft:sculk_shrieker",
            "minecraft:enchanting_table",
            "minecraft:end_portal_frame",
            "minecraft:end_stone",
            "minecraft:end_stone_bricks",
            "minecraft:dragon_egg",
            "minecraft:sandstone_stairs",
            "minecraft:ender_chest",
            "minecraft:emerald_block",
            "minecraft:oak_stairs",
            "minecraft:spruce_stairs",
            "minecraft:birch_stairs",
            "minecraft:jungle_stairs",
            "minecraft:acacia_stairs",
            "minecraft:dark_oak_stairs",
            "minecraft:mangrove_stairs",
            "minecraft:crimson_stairs",
            "minecraft:warped_stairs",
            "minecraft:command_block",
            "minecraft:beacon",
            "minecraft:cobblestone_wall",
            "minecraft:mossy_cobblestone_wall",
            "minecraft:brick_wall",
            "minecraft:prismarine_wall",
            "minecraft:red_sandstone_wall",
            "minecraft:mossy_stone_brick_wall",
            "minecraft:granite_wall",
            "minecraft:stone_brick_wall",
            "minecraft:mud_brick_wall",
            "minecraft:nether_brick_wall",
            "minecraft:andesite_wall",
            "minecraft:red_nether_brick_wall",
            "minecraft:sandstone_wall",
            "minecraft:end_stone_brick_wall",
            "minecraft:diorite_wall",
            "minecraft:blackstone_wall",
            "minecraft:polished_blackstone_wall",
            "minecraft:polished_blackstone_brick_wall",
            "minecraft:cobbled_deepslate_wall",
            "minecraft:polished_deepslate_wall",
            "minecraft:deepslate_brick_wall",
            "minecraft:deepslate_tile_wall",
            "minecraft:anvil",
            "minecraft:chipped_anvil",
            "minecraft:damaged_anvil",
            "minecraft:chiseled_quartz_block",
            "minecraft:quartz_block",
            "minecraft:quartz_bricks",
            "minecraft:quartz_pillar",
            "minecraft:quartz_stairs",
            "minecraft:white_terracotta",
            "minecraft:orange_terracotta",
            "minecraft:magenta_terracotta",
            "minecraft:light_blue_terracotta",
            "minecraft:yellow_terracotta",
            "minecraft:lime_terracotta",
            "minecraft:pink_terracotta",
            "minecraft:gray_terracotta",
            "minecraft:light_gray_terracotta",
            "minecraft:cyan_terracotta",
            "minecraft:purple_terracotta",
            "minecraft:blue_terracotta",
            "minecraft:brown_terracotta",
            "minecraft:green_terracotta",
            "minecraft:red_terracotta",
            "minecraft:black_terracotta",
            "minecraft:barrier",
            "minecraft:light",
            "minecraft:hay_block",
            "minecraft:white_carpet",
            "minecraft:orange_carpet",
            "minecraft:magenta_carpet",
            "minecraft:light_blue_carpet",
            "minecraft:yellow_carpet",
            "minecraft:lime_carpet",
            "minecraft:pink_carpet",
            "minecraft:gray_carpet",
            "minecraft:light_gray_carpet",
            "minecraft:cyan_carpet",
            "minecraft:purple_carpet",
            "minecraft:blue_carpet",
            "minecraft:brown_carpet",
            "minecraft:green_carpet",
            "minecraft:red_carpet",
            "minecraft:black_carpet",
            "minecraft:terracotta",
            "minecraft:packed_ice",
            "minecraft:dirt_path",
            "minecraft:sunflower",
            "minecraft:lilac",
            "minecraft:rose_bush",
            "minecraft:peony",
            "minecraft:tall_grass",
            "minecraft:large_fern",
            "minecraft:white_stained_glass",
            "minecraft:orange_stained_glass",
            "minecraft:magenta_stained_glass",
            "minecraft:light_blue_stained_glass",
            "minecraft:yellow_stained_glass",
            "minecraft:lime_stained_glass",
            "minecraft:pink_stained_glass",
            "minecraft:gray_stained_glass",
            "minecraft:light_gray_stained_glass",
            "minecraft:cyan_stained_glass",
            "minecraft:purple_stained_glass",
            "minecraft:blue_stained_glass",
            "minecraft:brown_stained_glass",
            "minecraft:green_stained_glass",
            "minecraft:red_stained_glass",
            "minecraft:black_stained_glass",
            "minecraft:white_stained_glass_pane",
            "minecraft:orange_stained_glass_pane",
            "minecraft:magenta_stained_glass_pane",
            "minecraft:light_blue_stained_glass_pane",
            "minecraft:yellow_stained_glass_pane",
            "minecraft:lime_stained_glass_pane",
            "minecraft:pink_stained_glass_pane",
            "minecraft:gray_stained_glass_pane",
            "minecraft:light_gray_stained_glass_pane",
            "minecraft:cyan_stained_glass_pane",
            "minecraft:purple_stained_glass_pane",
            "minecraft:blue_stained_glass_pane",
            "minecraft:brown_stained_glass_pane",
            "minecraft:green_stained_glass_pane",
            "minecraft:red_stained_glass_pane",
            "minecraft:black_stained_glass_pane",
            "minecraft:prismarine",
            "minecraft:prismarine_bricks",
            "minecraft:dark_prismarine",
            "minecraft:prismarine_stairs",
            "minecraft:prismarine_brick_stairs",
            "minecraft:dark_prismarine_stairs",
            "minecraft:sea_lantern",
            "minecraft:red_sandstone",
            "minecraft:chiseled_red_sandstone",
            "minecraft:cut_red_sandstone",
            "minecraft:red_sandstone_stairs",
            "minecraft:repeating_command_block",
            "minecraft:chain_command_block",
            "minecraft:magma_block",
            "minecraft:nether_wart_block",
            "minecraft:warped_wart_block",
            "minecraft:red_nether_bricks",
            "minecraft:bone_block",
            "minecraft:structure_void",
            "minecraft:shulker_box",
            "minecraft:white_shulker_box",
            "minecraft:orange_shulker_box",
            "minecraft:magenta_shulker_box",
            "minecraft:light_blue_shulker_box",
            "minecraft:yellow_shulker_box",
            "minecraft:lime_shulker_box",
            "minecraft:pink_shulker_box",
            "minecraft:gray_shulker_box",
            "minecraft:light_gray_shulker_box",
            "minecraft:cyan_shulker_box",
            "minecraft:purple_shulker_box",
            "minecraft:blue_shulker_box",
            "minecraft:brown_shulker_box",
            "minecraft:green_shulker_box",
            "minecraft:red_shulker_box",
            "minecraft:black_shulker_box",
            "minecraft:white_glazed_terracotta",
            "minecraft:orange_glazed_terracotta",
            "minecraft:magenta_glazed_terracotta",
            "minecraft:light_blue_glazed_terracotta",
            "minecraft:yellow_glazed_terracotta",
            "minecraft:lime_glazed_terracotta",
            "minecraft:pink_glazed_terracotta",
            "minecraft:gray_glazed_terracotta",
            "minecraft:light_gray_glazed_terracotta",
            "minecraft:cyan_glazed_terracotta",
            "minecraft:purple_glazed_terracotta",
            "minecraft:blue_glazed_terracotta",
            "minecraft:brown_glazed_terracotta",
            "minecraft:green_glazed_terracotta",
            "minecraft:red_glazed_terracotta",
            "minecraft:black_glazed_terracotta",
            "minecraft:white_concrete",
            "minecraft:orange_concrete",
            "minecraft:magenta_concrete",
            "minecraft:light_blue_concrete",
            "minecraft:yellow_concrete",
            "minecraft:lime_concrete",
            "minecraft:pink_concrete",
            "minecraft:gray_concrete",
            "minecraft:light_gray_concrete",
            "minecraft:cyan_concrete",
            "minecraft:purple_concrete",
            "minecraft:blue_concrete",
            "minecraft:brown_concrete",
            "minecraft:green_concrete",
            "minecraft:red_concrete",
            "minecraft:black_concrete",
            "minecraft:white_concrete_powder",
            "minecraft:orange_concrete_powder",
            "minecraft:magenta_concrete_powder",
            "minecraft:light_blue_concrete_powder",
            "minecraft:yellow_concrete_powder",
            "minecraft:lime_concrete_powder",
            "minecraft:pink_concrete_powder",
            "minecraft:gray_concrete_powder",
            "minecraft:light_gray_concrete_powder",
            "minecraft:cyan_concrete_powder",
            "minecraft:purple_concrete_powder",
            "minecraft:blue_concrete_powder",
            "minecraft:brown_concrete_powder",
            "minecraft:green_concrete_powder",
            "minecraft:red_concrete_powder",
            "minecraft:black_concrete_powder",
            "minecraft:turtle_egg",
            "minecraft:dead_tube_coral_block",
            "minecraft:dead_brain_coral_block",
            "minecraft:dead_bubble_coral_block",
            "minecraft:dead_fire_coral_block",
            "minecraft:dead_horn_coral_block",
            "minecraft:tube_coral_block",
            "minecraft:brain_coral_block",
            "minecraft:bubble_coral_block",
            "minecraft:fire_coral_block",
            "minecraft:horn_coral_block",
            "minecraft:tube_coral",
            "minecraft:brain_coral",
            "minecraft:bubble_coral",
            "minecraft:fire_coral",
            "minecraft:horn_coral",
            "minecraft:dead_brain_coral",
            "minecraft:dead_bubble_coral",
            "minecraft:dead_fire_coral",
            "minecraft:dead_horn_coral",
            "minecraft:dead_tube_coral",
            "minecraft:tube_coral_fan",
            "minecraft:brain_coral_fan",
            "minecraft:bubble_coral_fan",
            "minecraft:fire_coral_fan",
            "minecraft:horn_coral_fan",
            "minecraft:dead_tube_coral_fan",
            "minecraft:dead_brain_coral_fan",
            "minecraft:dead_bubble_coral_fan",
            "minecraft:dead_fire_coral_fan",
            "minecraft:dead_horn_coral_fan",
            "minecraft:blue_ice",
            "minecraft:conduit",
            "minecraft:polished_granite_stairs",
            "minecraft:smooth_red_sandstone_stairs",
            "minecraft:mossy_stone_brick_stairs",
            "minecraft:polished_diorite_stairs",
            "minecraft:mossy_cobblestone_stairs",
            "minecraft:end_stone_brick_stairs",
            "minecraft:stone_stairs",
            "minecraft:smooth_sandstone_stairs",
            "minecraft:smooth_quartz_stairs",
            "minecraft:granite_stairs",
            "minecraft:andesite_stairs",
            "minecraft:red_nether_brick_stairs",
            "minecraft:polished_andesite_stairs",
            "minecraft:diorite_stairs",
            "minecraft:cobbled_deepslate_stairs",
            "minecraft:polished_deepslate_stairs",
            "minecraft:deepslate_brick_stairs",
            "minecraft:deepslate_tile_stairs",
            "minecraft:polished_granite_slab",
            "minecraft:smooth_red_sandstone_slab",
            "minecraft:mossy_stone_brick_slab",
            "minecraft:polished_diorite_slab",
            "minecraft:mossy_cobblestone_slab",
            "minecraft:end_stone_brick_slab",
            "minecraft:smooth_sandstone_slab",
            "minecraft:smooth_quartz_slab",
            "minecraft:granite_slab",
            "minecraft:andesite_slab",
            "minecraft:red_nether_brick_slab",
            "minecraft:polished_andesite_slab",
            "minecraft:diorite_slab",
            "minecraft:cobbled_deepslate_slab",
            "minecraft:polished_deepslate_slab",
            "minecraft:deepslate_brick_slab",
            "minecraft:deepslate_tile_slab",
            "minecraft:scaffolding",
            "minecraft:redstone_torch",
            "minecraft:redstone_block",
            "minecraft:repeater",
            "minecraft:comparator",
            "minecraft:piston",
            "minecraft:sticky_piston",
            "minecraft:slime_block",
            "minecraft:honey_block",
            "minecraft:observer",
            "minecraft:hopper",
            "minecraft:dispenser",
            "minecraft:dropper",
            "minecraft:lectern",
            "minecraft:target",
            "minecraft:lever",
            "minecraft:lightning_rod",
            "minecraft:daylight_detector",
            "minecraft:sculk_sensor",
            "minecraft:tripwire_hook",
            "minecraft:trapped_chest",
            "minecraft:tnt",
            "minecraft:redstone_lamp",
            "minecraft:note_block",
            "minecraft:stone_button",
            "minecraft:polished_blackstone_button",
            "minecraft:oak_button",
            "minecraft:spruce_button",
            "minecraft:birch_button",
            "minecraft:jungle_button",
            "minecraft:acacia_button",
            "minecraft:dark_oak_button",
            "minecraft:mangrove_button",
            "minecraft:crimson_button",
            "minecraft:warped_button",
            "minecraft:stone_pressure_plate",
            "minecraft:polished_blackstone_pressure_plate",
            "minecraft:light_weighted_pressure_plate",
            "minecraft:heavy_weighted_pressure_plate",
            "minecraft:oak_pressure_plate",
            "minecraft:spruce_pressure_plate",
            "minecraft:birch_pressure_plate",
            "minecraft:jungle_pressure_plate",
            "minecraft:acacia_pressure_plate",
            "minecraft:dark_oak_pressure_plate",
            "minecraft:mangrove_pressure_plate",
            "minecraft:crimson_pressure_plate",
            "minecraft:warped_pressure_plate",
            "minecraft:iron_door",
            "minecraft:oak_door",
            "minecraft:spruce_door",
            "minecraft:birch_door",
            "minecraft:jungle_door",
            "minecraft:acacia_door",
            "minecraft:dark_oak_door",
            "minecraft:mangrove_door",
            "minecraft:crimson_door",
            "minecraft:warped_door",
            "minecraft:iron_trapdoor",
            "minecraft:oak_trapdoor",
            "minecraft:spruce_trapdoor",
            "minecraft:birch_trapdoor",
            "minecraft:jungle_trapdoor",
            "minecraft:acacia_trapdoor",
            "minecraft:dark_oak_trapdoor",
            "minecraft:mangrove_trapdoor",
            "minecraft:crimson_trapdoor",
            "minecraft:warped_trapdoor",
            "minecraft:oak_fence_gate",
            "minecraft:spruce_fence_gate",
            "minecraft:birch_fence_gate",
            "minecraft:jungle_fence_gate",
            "minecraft:acacia_fence_gate",
            "minecraft:dark_oak_fence_gate",
            "minecraft:mangrove_fence_gate",
            "minecraft:crimson_fence_gate",
            "minecraft:warped_fence_gate",
            "minecraft:powered_rail",
            "minecraft:detector_rail",
            "minecraft:rail",
            "minecraft:activator_rail",
            "minecraft:structure_block",
            "minecraft:jigsaw",
            "minecraft:wheat",
            "minecraft:oak_sign",
            "minecraft:spruce_sign",
            "minecraft:birch_sign",
            "minecraft:jungle_sign",
            "minecraft:acacia_sign",
            "minecraft:dark_oak_sign",
            "minecraft:mangrove_sign",
            "minecraft:crimson_sign",
            "minecraft:warped_sign",
            "minecraft:dried_kelp_block",
            "minecraft:cake",
            "minecraft:white_bed",
            "minecraft:orange_bed",
            "minecraft:magenta_bed",
            "minecraft:light_blue_bed",
            "minecraft:yellow_bed",
            "minecraft:lime_bed",
            "minecraft:pink_bed",
            "minecraft:gray_bed",
            "minecraft:light_gray_bed",
            "minecraft:cyan_bed",
            "minecraft:purple_bed",
            "minecraft:blue_bed",
            "minecraft:brown_bed",
            "minecraft:green_bed",
            "minecraft:red_bed",
            "minecraft:black_bed",
            "minecraft:nether_wart",
            "minecraft:brewing_stand",
            "minecraft:cauldron",
            "minecraft:flower_pot",
            "minecraft:skeleton_skull",
            "minecraft:wither_skeleton_skull",
            "minecraft:player_head",
            "minecraft:zombie_head",
            "minecraft:creeper_head",
            "minecraft:dragon_head",
            "minecraft:white_banner",
            "minecraft:orange_banner",
            "minecraft:magenta_banner",
            "minecraft:light_blue_banner",
            "minecraft:yellow_banner",
            "minecraft:lime_banner",
            "minecraft:pink_banner",
            "minecraft:gray_banner",
            "minecraft:light_gray_banner",
            "minecraft:cyan_banner",
            "minecraft:purple_banner",
            "minecraft:blue_banner",
            "minecraft:brown_banner",
            "minecraft:green_banner",
            "minecraft:red_banner",
            "minecraft:black_banner",
            "minecraft:loom",
            "minecraft:composter",
            "minecraft:barrel",
            "minecraft:smoker",
            "minecraft:blast_furnace",
            "minecraft:cartography_table",
            "minecraft:fletching_table",
            "minecraft:grindstone",
            "minecraft:smithing_table",
            "minecraft:stonecutter",
            "minecraft:bell",
            "minecraft:lantern",
            "minecraft:soul_lantern",
            "minecraft:campfire",
            "minecraft:soul_campfire",
            "minecraft:shroomlight",
            "minecraft:bee_nest",
            "minecraft:beehive",
            "minecraft:honeycomb_block",
            "minecraft:lodestone",
            "minecraft:crying_obsidian",
            "minecraft:blackstone",
            "minecraft:blackstone_slab",
            "minecraft:blackstone_stairs",
            "minecraft:gilded_blackstone",
            "minecraft:polished_blackstone",
            "minecraft:polished_blackstone_slab",
            "minecraft:polished_blackstone_stairs",
            "minecraft:chiseled_polished_blackstone",
            "minecraft:polished_blackstone_bricks",
            "minecraft:polished_blackstone_brick_slab",
            "minecraft:polished_blackstone_brick_stairs",
            "minecraft:cracked_polished_blackstone_bricks",
            "minecraft:respawn_anchor",
            "minecraft:candle",
            "minecraft:white_candle",
            "minecraft:orange_candle",
            "minecraft:magenta_candle",
            "minecraft:light_blue_candle",
            "minecraft:yellow_candle",
            "minecraft:lime_candle",
            "minecraft:pink_candle",
            "minecraft:gray_candle",
            "minecraft:light_gray_candle",
            "minecraft:cyan_candle",
            "minecraft:purple_candle",
            "minecraft:blue_candle",
            "minecraft:brown_candle",
            "minecraft:green_candle",
            "minecraft:red_candle",
            "minecraft:black_candle",
            "minecraft:small_amethyst_bud",
            "minecraft:medium_amethyst_bud",
            "minecraft:large_amethyst_bud",
            "minecraft:amethyst_cluster",
            "minecraft:pointed_dripstone",
            "minecraft:ochre_froglight",
            "minecraft:verdant_froglight",
            "minecraft:pearlescent_froglight",
            "minecraft:frogspawn",
            "minecraft:water",
            "minecraft:lava",
            "minecraft:tall_seagrass",
            "minecraft:piston_head",
            "minecraft:moving_piston",
            "minecraft:wall_torch",
            "minecraft:fire",
            "minecraft:soul_fire",
            "minecraft:redstone_wire",
            "minecraft:oak_wall_sign",
            "minecraft:spruce_wall_sign",
            "minecraft:birch_wall_sign",
            "minecraft:acacia_wall_sign",
            "minecraft:jungle_wall_sign",
            "minecraft:dark_oak_wall_sign",
            "minecraft:mangrove_wall_sign",
            "minecraft:redstone_wall_torch",
            "minecraft:soul_wall_torch",
            "minecraft:nether_portal",
            "minecraft:attached_pumpkin_stem",
            "minecraft:attached_melon_stem",
            "minecraft:pumpkin_stem",
            "minecraft:melon_stem",
            "minecraft:water_cauldron",
            "minecraft:lava_cauldron",
            "minecraft:powder_snow_cauldron",
            "minecraft:end_portal",
            "minecraft:cocoa",
            "minecraft:tripwire",
            "minecraft:potted_oak_sapling",
            "minecraft:potted_spruce_sapling",
            "minecraft:potted_birch_sapling",
            "minecraft:potted_jungle_sapling",
            "minecraft:potted_acacia_sapling",
            "minecraft:potted_dark_oak_sapling",
            "minecraft:potted_mangrove_propagule",
            "minecraft:potted_fern",
            "minecraft:potted_dandelion",
            "minecraft:potted_poppy",
            "minecraft:potted_blue_orchid",
            "minecraft:potted_allium",
            "minecraft:potted_azure_bluet",
            "minecraft:potted_red_tulip",
            "minecraft:potted_orange_tulip",
            "minecraft:potted_white_tulip",
            "minecraft:potted_pink_tulip",
            "minecraft:potted_oxeye_daisy",
            "minecraft:potted_cornflower",
            "minecraft:potted_lily_of_the_valley",
            "minecraft:potted_wither_rose",
            "minecraft:potted_red_mushroom",
            "minecraft:potted_brown_mushroom",
            "minecraft:potted_dead_bush",
            "minecraft:potted_cactus",
            "minecraft:carrots",
            "minecraft:potatoes",
            "minecraft:skeleton_wall_skull",
            "minecraft:wither_skeleton_wall_skull",
            "minecraft:zombie_wall_head",
            "minecraft:player_wall_head",
            "minecraft:creeper_wall_head",
            "minecraft:dragon_wall_head",
            "minecraft:white_wall_banner",
            "minecraft:orange_wall_banner",
            "minecraft:magenta_wall_banner",
            "minecraft:light_blue_wall_banner",
            "minecraft:yellow_wall_banner",
            "minecraft:lime_wall_banner",
            "minecraft:pink_wall_banner",
            "minecraft:gray_wall_banner",
            "minecraft:light_gray_wall_banner",
            "minecraft:cyan_wall_banner",
            "minecraft:purple_wall_banner",
            "minecraft:blue_wall_banner",
            "minecraft:brown_wall_banner",
            "minecraft:green_wall_banner",
            "minecraft:red_wall_banner",
            "minecraft:black_wall_banner",
            "minecraft:beetroots",
            "minecraft:end_gateway",
            "minecraft:frosted_ice",
            "minecraft:kelp_plant",
            "minecraft:dead_tube_coral_wall_fan",
            "minecraft:dead_brain_coral_wall_fan",
            "minecraft:dead_bubble_coral_wall_fan",
            "minecraft:dead_fire_coral_wall_fan",
            "minecraft:dead_horn_coral_wall_fan",
            "minecraft:tube_coral_wall_fan",
            "minecraft:brain_coral_wall_fan",
            "minecraft:bubble_coral_wall_fan",
            "minecraft:fire_coral_wall_fan",
            "minecraft:horn_coral_wall_fan",
            "minecraft:bamboo_sapling",
            "minecraft:potted_bamboo",
            "minecraft:void_air",
            "minecraft:cave_air",
            "minecraft:bubble_column",
            "minecraft:sweet_berry_bush",
            "minecraft:weeping_vines_plant",
            "minecraft:twisting_vines_plant",
            "minecraft:crimson_wall_sign",
            "minecraft:warped_wall_sign",
            "minecraft:potted_crimson_fungus",
            "minecraft:potted_warped_fungus",
            "minecraft:potted_crimson_roots",
            "minecraft:potted_warped_roots",
            "minecraft:candle_cake",
            "minecraft:white_candle_cake",
            "minecraft:orange_candle_cake",
            "minecraft:magenta_candle_cake",
            "minecraft:light_blue_candle_cake",
            "minecraft:yellow_candle_cake",
            "minecraft:lime_candle_cake",
            "minecraft:pink_candle_cake",
            "minecraft:gray_candle_cake",
            "minecraft:light_gray_candle_cake",
            "minecraft:cyan_candle_cake",
            "minecraft:purple_candle_cake",
            "minecraft:blue_candle_cake",
            "minecraft:brown_candle_cake",
            "minecraft:green_candle_cake",
            "minecraft:red_candle_cake",
            "minecraft:black_candle_cake",
            "minecraft:powder_snow",
            "minecraft:cave_vines",
            "minecraft:cave_vines_plant",
            "minecraft:big_dripleaf_stem",
            "minecraft:potted_azalea_bush",
            "minecraft:potted_flowering_azalea_bush"
        ]},
        "obj-com-volmit-iris-engine-object-irisimagemap": {"anyOf": [
            {
                "description": "Represents an image map",
                "type": "object",
                "properties": {
                    "image": {
                        "type": "string",
                        "$ref": "#/definitions/erzimages",
                        "description": "image\nDefine the png image to read in this noise map\n   \nIris Image\n\n    \n* Default Value is \nMust be a valid images (use ctrl+space for auto complete!)"
                    },
                    "coordinateScale": {
                        "type": "number",
                        "minimum": 1,
                        "description": "coordinateScale\nThe amount of distance a single pixel is when reading this map, reading x=13, would still read pixel 0 if the scale is 32. You can zoom this externally through noise styles for zooming out.\n   \nNumber\n\n    \n* Default Value is 32.0\n* Minimum allowed is 1.0"
                    },
                    "interpolationMethod": {
                        "type": "string",
                        "$ref": "#/definitions/oneof-enum-com-volmit-iris-util-interpolation-interpolationmethod",
                        "description": "interpolationMethod\nThe interpolation method if the coordinateScale is greater than 1. This blends the image into noise. For nearest neighbor, use NONE.\n   \nInterpolationMethod\nAn interpolation method (or function) is simply a method of smoothing a position based on surrounding points on a grid. Bicubic for example is smoother, but has 4 times the checks than Bilinear for example. Try using BILINEAR_STARCAST_9 for beautiful results.\n    \n* Default Value is a default object (create this object to see default properties)\nMust be a valid InterpolationMethod (use ctrl+space for auto complete!)"
                    },
                    "channel": {
                        "type": "string",
                        "$ref": "#/definitions/oneof-enum-com-volmit-iris-engine-object-irisimagechannel",
                        "description": "channel\nThe channel of the image to read from. This basically converts image data into a number betwen 0 to 1 per pixel using a certain 'channel/filter'\n   \nImageChannel\nDetermines a derived channel of an image to read\n    \n* Default Value is a default object (create this object to see default properties)\nMust be a valid ImageChannel (use ctrl+space for auto complete!)"
                    },
                    "inverted": {
                        "type": "boolean",
                        "description": "inverted\nInvert the channel input\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "tiled": {
                        "type": "boolean",
                        "description": "tiled\nTile the image coordinates\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "centered": {
                        "type": "boolean",
                        "description": "centered\nCenter 0,0 to the center of the image instead of the top left.\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
                    }
                }
            },
            {"type": "string"}
        ]},
        "enum-snippet-axis-rotation": {"enum": []},
        "obj-com-volmit-iris-engine-object-irismaterialpalette": {"anyOf": [
            {
                "description": "A palette of materials",
                "type": "object",
                "properties": {
                    "style": {
                        "anyOf": [
                            {
                                "!required": false,
                                "type": "object",
                                "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisgeneratorstyle",
                                "description": "style\nThe style of noise\n   \nGeneratorStyle (Object)\nA gen style\n    \nYou can instead specify \"snippet/style/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            },
                            {
                                "type": "string",
                                "$ref": "#/definitions/enum-snippet-style",
                                "description": "style\nThe style of noise\n   \nGeneratorStyle (Object)\nA gen style\n    \nYou can instead specify \"snippet/style/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            }
                        ],
                        "description": "style\nThe style of noise\n   \nGeneratorStyle (Object)\nA gen style\n    \nYou can instead specify \"snippet/style/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "zoom": {
                        "type": "number",
                        "minimum": 1.0E-4,
                        "description": "zoom\nThe terrain zoom mostly for zooming in on a wispy palette\n   \nNumber\n\n    \n* Default Value is 5.0\n* Minimum allowed is 1.0E-4"
                    },
                    "palette": {
                        "type": "array",
                        "minItems": 1,
                        "items": {"$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisblockdata"},
                        "description": "palette\nThe palette of blocks to be used in this layer\n   \nList of BlockDatas (Objects)\n\n    \n* Default Value is an empty list\n* At least one entry must be defined, or just remove this list."
                    }
                }
            },
            {"type": "string"}
        ]},
        "obj-com-volmit-iris-engine-object-irisobjectscale": {"anyOf": [
            {
                "description": "Scale objects",
                "type": "object",
                "properties": {
                    "variations": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 32,
                        "description": "variations\nIris Objects are scaled and cached to speed up placements. Because of this extra memory is used, so we evenly distribute variations across the defined scale range, then pick one randomly. If the differences is small, use a lower number. For more possibilities on the scale spectrum, increase this at the cost of memory.\n   \nInteger\n\n    \n* Default Value is 7\n* Minimum allowed is 1\n* Maximum allowed is 32"
                    },
                    "minimumScale": {
                        "type": "number",
                        "minimum": 0.01,
                        "maximum": 50,
                        "description": "minimumScale\nThe minimum scale\n   \nNumber\n\n    \n* Default Value is 1.0\n* Minimum allowed is 0.01\n* Maximum allowed is 50.0"
                    },
                    "maximumScale": {
                        "type": "number",
                        "minimum": 0.01,
                        "maximum": 50,
                        "description": "maximumScale\nThe maximum height for placement (top of object)\n   \nNumber\n\n    \n* Default Value is 1.0\n* Minimum allowed is 0.01\n* Maximum allowed is 50.0"
                    },
                    "interpolation": {
                        "type": "string",
                        "$ref": "#/definitions/oneof-enum-com-volmit-iris-engine-object-irisobjectplacementscaleinterpolator",
                        "description": "interpolation\nIf this object is scaled up beyond its origin size, specify a 3D interpolator\n   \nObjectPlacementScaleInterpolator\nUse 3D Interpolation on scaled objects if they are larger than the origin.\n    \n* Default Value is a default object (create this object to see default properties)\nMust be a valid ObjectPlacementScaleInterpolator (use ctrl+space for auto complete!)"
                    }
                }
            },
            {"type": "string"}
        ]},
        "obj-com-volmit-iris-engine-object-irisobjectreplace": {"anyOf": [
            {
                "description": "Find and replace object materials",
                "type": "object",
                "properties": {
                    "find": {
                        "type": "array",
                        "minItems": 1,
                        "items": {"$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisblockdata"},
                        "description": "find\nFind this block\n   \nList of BlockDatas (Objects)\n\n    \n* Default Value is an empty list\n* At least one entry must be defined, or just remove this list."
                    },
                    "replace": {
                        "anyOf": [
                            {
                                "!required": true,
                                "type": "object",
                                "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irismaterialpalette",
                                "description": "replace\nReplace it with this block palette\n   \nMaterialPalette (Object)\nA palette of materials\n    \nYou can instead specify \"snippet/palette/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            },
                            {
                                "type": "string",
                                "$ref": "#/definitions/enum-snippet-palette",
                                "description": "replace\nReplace it with this block palette\n   \nMaterialPalette (Object)\nA palette of materials\n    \nYou can instead specify \"snippet/palette/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            }
                        ],
                        "description": "replace\nReplace it with this block palette\n   \nMaterialPalette (Object)\nA palette of materials\n    \nYou can instead specify \"snippet/palette/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "exact": {
                        "type": "boolean",
                        "description": "exact\nExactly match the block data or not\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "chance": {
                        "type": "number",
                        "minimum": 0,
                        "maximum": 1,
                        "description": "chance\nModifies the chance the block is replaced\n   \nNumber\n\n    \n* Default Value is 1.0\n* Minimum allowed is 0.0\n* Maximum allowed is 1.0"
                    }
                }
            },
            {"type": "string"}
        ]},
        "erzobjects": {"enum": [
            "jigsaw/fossil/skull_3_coal",
            "structures/portal3",
            "jigsaw/fossil/spine_1_coal",
            "structures/portal4",
            "trees/oak/oakFancy10",
            "structures/portal5",
            "structures/portal6",
            "structures/portal7",
            "structures/portal8",
            "structures/portal9",
            "trees/birch/variantforest4",
            "trees/birch/variantforest3",
            "trees/birch/variantforest2",
            "trees/birch/variantforest1",
            "trees/birch/variantforest8",
            "trees/birch/variantforest7",
            "structures/portal1",
            "trees/birch/variantforest6",
            "structures/portal2",
            "trees/birch/variantforest5",
            "structures/oakspindle2",
            "structures/oakspindle1",
            "structures/oakspindle4",
            "structures/oakspindle3",
            "trees/birch/variantforest9",
            "jigsaw/nether_fossils/fossil_1",
            "structures/oakspindle6",
            "structures/oakspindle5",
            "jigsaw/pyramid/pyramid1",
            "structures/oakspindle7",
            "trees/mushroom/lumo10",
            "structures/kship4",
            "structures/kship2",
            "structures/kship3",
            "structures/kship1",
            "trees/spruce/unfrostedmed3",
            "trees/spruce/unfrostedmed4",
            "trees/spruce/unfrostedmed1",
            "trees/spruce/unfrostedmed2",
            "trees/acacia/savana5",
            "trees/mixed/honey9",
            "trees/mixed/honey5",
            "trees/mixed/honey6",
            "trees/mixed/honey7",
            "trees/mixed/honey8",
            "trees/mixed/honey1",
            "trees/mixed/honey2",
            "trees/mixed/honey3",
            "trees/mixed/honey4",
            "trees/acacia/savannaF11",
            "trees/acacia/savannaF10",
            "trees/birch/forest1",
            "trees/birch/forest2",
            "trees/birch/forest3",
            "trees/birch/forest4",
            "trees/spruce/unfrostedmed7",
            "trees/spruce/unfrostedmed8",
            "trees/acacia/savannaF17",
            "trees/spruce/unfrostedmed5",
            "trees/acacia/savannaF16",
            "trees/spruce/unfrostedmed6",
            "trees/acacia/savana1",
            "trees/acacia/savannaF15",
            "trees/acacia/savana2",
            "trees/acacia/savannaF14",
            "trees/acacia/savana3",
            "trees/acacia/savannaF13",
            "trees/acacia/savana4",
            "trees/oak/lponderosa8",
            "clutter/corazoncaido",
            "trees/oak/lponderosa7",
            "jigsaw/end_city/tower_piece",
            "trees/oak/lponderosa9",
            "jigsaw/nether_fossils/fossil_5",
            "jigsaw/nether_fossils/fossil_4",
            "jigsaw/nether_fossils/fossil_3",
            "trees/oak/lponderosa2",
            "jigsaw/nether_fossils/fossil_2",
            "trees/oak/lponderosa1",
            "jigsaw/nether_fossils/fossil_9",
            "trees/oak/lponderosa4",
            "jigsaw/nether_fossils/fossil_8",
            "trees/oak/lponderosa3",
            "jigsaw/nether_fossils/fossil_7",
            "trees/oak/lponderosa6",
            "jigsaw/nether_fossils/fossil_6",
            "trees/oak/lponderosa5",
            "trees/birch/antioch3b",
            "trees/sakura/ogbase1",
            "trees/sakura/ogbase2",
            "trees/birch/generic26",
            "trees/birch/generic27",
            "trees/birch/generic24",
            "trees/birch/generic25",
            "trees/birch/generic28",
            "trees/birch/generic29",
            "jigsaw/murky_stronghold/c-x-6",
            "jigsaw/murky_stronghold/c-x-5",
            "clutter/pumpkins6",
            "jigsaw/murky_stronghold/c-x-4",
            "clutter/pumpkins5",
            "jigsaw/murky_stronghold/c-x-3",
            "clutter/pumpkins4",
            "clutter/pumpkins3",
            "clutter/pumpkins2",
            "clutter/pumpkins1",
            "trees/spruce/sfrostgeneric10",
            "trees/spruce/sfrostgeneric11",
            "jigsaw/murky_stronghold/c-x-2",
            "trees/spruce/sfrostgeneric12",
            "jigsaw/murky_stronghold/c-x-1",
            "trees/spruce/sfrostgeneric13",
            "trees/spruce/sfrostgeneric14",
            "trees/spruce/sfrostgeneric15",
            "trees/spruce/sfrostgeneric16",
            "trees/birch/antioch4b",
            "trees/birch/generic30",
            "trees/spruce/sfrostgeneric17",
            "trees/spruce/sfrostgeneric18",
            "trees/spruce/sfrostgeneric19",
            "trees/birch/generic31",
            "trees/willow/bt9",
            "trees/willow/bt5",
            "trees/willow/bt6",
            "trees/willow/bt7",
            "trees/willow/bt8",
            "void/gvoid",
            "trees/spruce/aridgeneric4",
            "trees/willow/bt1",
            "trees/spruce/aridgeneric5",
            "trees/willow/bt2",
            "trees/willow/bt3",
            "trees/willow/bt4",
            "trees/spruce/aridgeneric1",
            "trees/spruce/aridgeneric2",
            "trees/spruce/aridgeneric3",
            "trees/spruce/sfrostgeneric20",
            "jigsaw/house-norm/Med10",
            "trees/birch/antioch5b",
            "clutter/sphinx1",
            "jigsaw/pyramid/pyramid45",
            "trees/mixed/pollup13",
            "trees/mixed/pollup12",
            "trees/mixed/pollup11",
            "trees/mixed/pollup10",
            "jigsaw/underwater_ruin/brick_1",
            "jigsaw/underwater_ruin/brick_2",
            "structures/portal10",
            "trees/birch/antioch6b",
            "trees/birch/generic11",
            "trees/birch/generic12",
            "trees/oak/deadfallen1",
            "trees/birch/generic10",
            "jigsaw/murky_stronghold/fc-n-1",
            "trees/birch/generic15",
            "jigsaw/murky_stronghold/fc-n-2",
            "trees/birch/generic16",
            "trees/birch/generic13",
            "trees/birch/generic14",
            "trees/birch/generic19",
            "trees/birch/generic17",
            "trees/birch/generic18",
            "structures/shiprightsideupfronthalf",
            "jigsaw/murky_stronghold/fc-n-3",
            "jigsaw/murky_stronghold/fc-n-4",
            "jigsaw/underwater_ruin/brick_5",
            "trees/darkoak/smolgeneric11",
            "jigsaw/underwater_ruin/brick_6",
            "trees/darkoak/smolgeneric12",
            "jigsaw/underwater_ruin/brick_3",
            "jigsaw/underwater_ruin/brick_4",
            "trees/darkoak/smolgeneric10",
            "structures/BarcoPirataGriffer",
            "trees/darkoak/smolgeneric15",
            "trees/darkoak/smolgeneric16",
            "jigsaw/underwater_ruin/brick_7",
            "trees/darkoak/smolgeneric13",
            "jigsaw/underwater_ruin/brick_8",
            "trees/darkoak/smolgeneric14",
            "trees/birch/generic22",
            "trees/birch/generic23",
            "trees/birch/generic20",
            "trees/birch/generic21",
            "trees/mixed/smoakog80",
            "trees/acacia/thin1",
            "trees/darkoak/smolgeneric19",
            "trees/darkoak/smolgeneric17",
            "trees/darkoak/smolgeneric18",
            "trees/darkoak/smolgeneric22",
            "trees/darkoak/smolgeneric23",
            "trees/darkoak/smolgeneric20",
            "trees/darkoak/smolgeneric21",
            "trees/darkoak/smolgeneric26",
            "trees/darkoak/smolgeneric27",
            "trees/darkoak/smolgeneric24",
            "trees/darkoak/smolgeneric25",
            "trees/darkoak/talldrift9",
            "trees/darkoak/talldrift8",
            "trees/darkoak/talldrift7",
            "trees/darkoak/talldrift6",
            "trees/darkoak/smolgeneric28",
            "trees/darkoak/smolgeneric29",
            "jigsaw/desert-pyramid/bottom",
            "trees/darkoak/smolgeneric31",
            "trees/oak/mdeadwood2",
            "trees/oak/mdeadwood3",
            "trees/birch/variantforest20",
            "trees/darkoak/smolgeneric30",
            "jigsaw/end_city/fat_tower_top",
            "trees/mushroom/xredgeneric10",
            "trees/oak/mdeadwood1",
            "trees/mixed/dotree3",
            "trees/mixed/dotree4",
            "jigsaw/murky_stronghold/f-n-1",
            "trees/mixed/dotree5",
            "trees/mixed/dotree6",
            "structures/presentsupermassivebluea12",
            "trees/mixed/dotree1",
            "trees/mixed/dotree2",
            "trees/birch/variantforest18",
            "clutter/log",
            "trees/birch/variantforest19",
            "jigsaw/murky_stronghold/f-n-3",
            "jigsaw/murky_stronghold/f-n-2",
            "trees/spruce/lushgenericpine10",
            "jigsaw/murky_stronghold/f-n-4",
            "trees/birch/variantforest12",
            "trees/birch/variantforest13",
            "trees/birch/variantforest10",
            "trees/birch/variantforest11",
            "trees/birch/variantforest16",
            "trees/birch/variantforest17",
            "trees/birch/variantforest14",
            "clutter/genericgrave1",
            "trees/birch/variantforest15",
            "trees/darkoak/talldrift1",
            "trees/darkoak/talldrift5",
            "trees/darkoak/talldrift4",
            "trees/darkoak/talldrift3",
            "trees/darkoak/talldrift2",
            "clutter/shrub10",
            "clutter/shrub12",
            "clutter/shrub11",
            "clutter/obelisk6",
            "clutter/obelisk5",
            "clutter/obelisk7",
            "clutter/obelisk2",
            "clutter/obelisk1",
            "clutter/obelisk4",
            "clutter/obelisk3",
            "trees/mixed/dotree7",
            "trees/mixed/dotree8",
            "trees/mixed/dotree9",
            "jigsaw/village-bits/bland-nes-1",
            "jigsaw/village-bits/bland-nes-2",
            "jigsaw/village-bits/bland-x-3",
            "jigsaw/village-bits/bland-x-4",
            "jigsaw/village-bits/bland-x-5",
            "jigsaw/village-bits/bland-nes-3",
            "jigsaw/village-bits/bland-nes-4",
            "jigsaw/village-bits/bland-nes-5",
            "jigsaw/village-bits/bland-x-1",
            "jigsaw/village-bits/bland-x-2",
            "jigsaw/ancient_city/ancient_city",
            "jigsaw/village-bits/hay-e-4",
            "jigsaw/village-bits/hay-e-3",
            "jigsaw/village-bits/hay-e-5",
            "trees/mixed/medbleedingserralita1",
            "trees/mixed/medbleedingserralita2",
            "jigsaw/village-bits/hay-e-2",
            "jigsaw/village-bits/hay-e-1",
            "trees/oak/smol10",
            "trees/oak/smol11",
            "clutter/grave1",
            "structures/tentaclecold8",
            "structures/tentaclecold7",
            "structures/tentaclecold6",
            "structures/tentaclecold5",
            "trees/bonsai/smfallen1",
            "trees/oak/smol12",
            "trees/oak/smol13",
            "trees/mushroom/blackgeneric10",
            "trees/oak/smol14",
            "trees/oak/smol15",
            "structures/tentaclecold4",
            "trees/oak/croak11",
            "structures/shiprightsideupbackhalfdegraded",
            "structures/tentaclecold3",
            "trees/oak/croak12",
            "structures/tentaclecold2",
            "structures/shipsidewaysfulldegraded",
            "structures/tentaclecold1",
            "trees/oak/croak10",
            "trees/oak/croak15",
            "trees/oak/croak16",
            "trees/oak/croak13",
            "trees/oak/croak14",
            "structures/presentsupermassivepurple5",
            "trees/mixed/bleedingserralita4",
            "trees/mixed/bleedingserralita3",
            "trees/mixed/bleedingserralita6",
            "trees/mixed/bleedingserralita5",
            "trees/mixed/bleedingserralita8",
            "trees/mixed/bleedingserralita7",
            "trees/mixed/bleedingserralita9",
            "jigsaw/igloo/bottom",
            "structures/cave6",
            "structures/cave4",
            "trees/mixed/bleedingserralita2",
            "structures/cave5",
            "trees/mixed/bleedingserralita1",
            "structures/cave2",
            "structures/cave3",
            "structures/cave1",
            "trees/mixed/medbleedingserralita5",
            "trees/mixed/medbleedingserralita6",
            "trees/mushroom/purplegeneric10",
            "trees/mixed/medbleedingserralita3",
            "trees/mixed/medbleedingserralita4",
            "trees/mixed/medbleedingserralita9",
            "trees/mixed/medbleedingserralita7",
            "trees/mixed/medbleedingserralita8",
            "trees/mixed/tourmalineproblem1",
            "trees/mixed/tourmalineproblem2",
            "clutter/camp5",
            "clutter/medtourmaclutt2",
            "clutter/medtourmaclutt3",
            "clutter/camp3",
            "clutter/medtourmaclutt4",
            "clutter/camp4",
            "clutter/medtourmaclutt5",
            "clutter/camp1",
            "clutter/medtourmaclutt6",
            "clutter/camp2",
            "clutter/medtourmaclutt7",
            "clutter/medtourmaclutt8",
            "clutter/medtourmaclutt9",
            "clutter/medtourmaclutt1",
            "trees/darkoak/smolgeneric1",
            "trees/darkoak/smolgeneric2",
            "trees/darkoak/smolgeneric3",
            "trees/darkoak/smolgeneric4",
            "trees/darkoak/smolgeneric5",
            "trees/darkoak/smolgeneric6",
            "trees/darkoak/smolgeneric7",
            "trees/darkoak/smolgeneric8",
            "trees/darkoak/smolgeneric9",
            "jigsaw/void/void",
            "trees/oak/mroofed10",
            "jigsaw/fossil/skull_1_coal",
            "structures/deepslate3",
            "structures/deepslate2",
            "jigsaw/igloo/middle",
            "structures/deepslate1",
            "structures/shipsidewaysfronthalf",
            "trees/oak/mroofed11",
            "trees/oak/mroofed12",
            "trees/sproak/generic10",
            "trees/sproak/generic12",
            "trees/sproak/generic11",
            "structures/shipwithmastdegraded",
            "jigsaw/murky_stronghold/f-sw-3",
            "jigsaw/murky_stronghold/f-sw-2",
            "clutter/bonespire20",
            "jigsaw/murky_stronghold/f-sw-4",
            "jigsaw/murky_stronghold/f-sw-1",
            "clutter/oakshrub4",
            "jigsaw/mansion/mansion_vanilla_3",
            "clutter/oakshrub3",
            "jigsaw/mansion/mansion_vanilla_2",
            "trees/oak/omni1",
            "clutter/oakshrub2",
            "clutter/ellipsoid1",
            "clutter/oakshrub1",
            "trees/darkoak/floral1",
            "clutter/bonespire14",
            "trees/darkoak/medgeneric2",
            "clutter/bonespire15",
            "trees/darkoak/medgeneric1",
            "clutter/bonespire16",
            "trees/darkoak/medgeneric4",
            "clutter/bonespire17",
            "trees/darkoak/medgeneric3",
            "clutter/bonespire18",
            "trees/darkoak/medgeneric6",
            "clutter/bonespire19",
            "trees/darkoak/medgeneric5",
            "trees/darkoak/medgeneric8",
            "trees/darkoak/medgeneric7",
            "trees/darkoak/medgeneric9",
            "clutter/bonespire10",
            "jigsaw/mansion/mansion_vanilla_1",
            "clutter/bonespire11",
            "clutter/bonespire12",
            "clutter/bonespire13",
            "trees/bonsai/big-6",
            "trees/bonsai/big-7",
            "jigsaw/jungle-pyramid/jungle_pyramid",
            "trees/bonsai/big-4",
            "trees/bonsai/big-5",
            "trees/bonsai/big-2",
            "trees/bonsai/big-3",
            "trees/bonsai/big-1",
            "clutter/arbusto2",
            "jigsaw/nether_fossils/fossil_12",
            "trees/mushroom/xredgeneric8",
            "clutter/arbusto3",
            "jigsaw/igloo/top1",
            "jigsaw/nether_fossils/fossil_11",
            "trees/mushroom/xredgeneric7",
            "jigsaw/nether_fossils/fossil_10",
            "trees/mushroom/xredgeneric6",
            "clutter/arbusto1",
            "trees/mushroom/xredgeneric5",
            "clutter/stoneclutt5",
            "trees/mixed/AmyLarge3",
            "trees/mushroom/xredgeneric4",
            "clutter/stoneclutt6",
            "trees/mixed/AmyLarge2",
            "trees/mushroom/xredgeneric3",
            "clutter/stoneclutt7",
            "jigsaw/igloo/top2",
            "jigsaw/nether_fossils/fossil_14",
            "trees/mixed/AmyLarge1",
            "trees/mushroom/xredgeneric2",
            "jigsaw/nether_fossils/fossil_13",
            "trees/mushroom/xredgeneric1",
            "clutter/stoneclutt1",
            "trees/mixed/AmyLarge7",
            "trees/oak/sponderosa9",
            "clutter/stoneclutt2",
            "trees/mixed/AmyLarge6",
            "trees/oak/sponderosa8",
            "clutter/stoneclutt3",
            "trees/mixed/AmyLarge5",
            "clutter/stoneclutt4",
            "trees/mixed/AmyLarge4",
            "trees/mixed/AmyLarge8",
            "trees/mushroom/xredgeneric9",
            "trees/mangrove/mangrove19",
            "trees/mangrove/mangrove18",
            "trees/mangrove/mangrove17",
            "trees/mangrove/mangrove16",
            "trees/mangrove/mangrove15",
            "trees/mangrove/mangrove14",
            "trees/mangrove/mangrove13",
            "trees/mixed/AmyNormal10",
            "trees/mangrove/mangrove12",
            "trees/mangrove/mangrove11",
            "trees/mixed/AmyNormal12",
            "trees/mangrove/mangrove10",
            "trees/mixed/AmyNormal11",
            "trees/mixed/tredwood10",
            "trees/oak/mponderosa7",
            "trees/oak/mponderosa6",
            "trees/oak/mponderosa9",
            "trees/oak/mponderosa8",
            "trees/oak/mponderosa3",
            "trees/oak/mponderosa2",
            "trees/oak/mponderosa5",
            "trees/oak/mponderosa4",
            "trees/mangrove/mangrove20",
            "trees/oak/mponderosa1",
            "clutter/tntower1",
            "structures/presentred13",
            "trees/oak/sponderosa1",
            "trees/oak/sponderosa3",
            "trees/oak/sponderosa2",
            "trees/mixed/pollup8",
            "trees/oak/sponderosa5",
            "trees/mixed/pollup9",
            "trees/oak/sponderosa4",
            "jigsaw/murky_stronghold/fc-ns-4",
            "trees/oak/sponderosa7",
            "trees/oak/sponderosa6",
            "jigsaw/murky_stronghold/fc-ns-2",
            "jigsaw/murky_stronghold/fc-ns-3",
            "jigsaw/murky_stronghold/fc-ns-1",
            "trees/sproak/sp1",
            "trees/sproak/sp5",
            "trees/sproak/sp4",
            "trees/sproak/sp3",
            "trees/sproak/sp2",
            "trees/mixed/pollup4",
            "trees/mixed/pollup5",
            "trees/mixed/pollup6",
            "trees/mixed/pollup7",
            "trees/sproak/sp6",
            "trees/mixed/pollup1",
            "trees/mixed/pollup2",
            "trees/mixed/pollup3",
            "trees/mixed/tourmalinelarge10",
            "trees/mushroom/mushclut10",
            "clutter/shrub3",
            "clutter/shrub2",
            "clutter/shrub1",
            "trees/bonsai/frolow13",
            "trees/bonsai/frolow14",
            "trees/bonsai/frolow11",
            "trees/bonsai/frolow12",
            "trees/bonsai/frolow10",
            "trees/darkoak/tallgeneric1",
            "trees/darkoak/tallgeneric2",
            "trees/bonsai/frolow15",
            "trees/bonsai/frolow16",
            "trees/oak/smdeadwilt1",
            "trees/oak/troofed10",
            "structures/tentaclefire6",
            "trees/mushroom/ice6",
            "structures/tentaclefire5",
            "trees/mushroom/ice7",
            "structures/tentaclefire4",
            "trees/mushroom/ice8",
            "structures/tentaclefire3",
            "trees/mushroom/ice9",
            "structures/tentaclefire2",
            "structures/tentaclefire1",
            "trees/spruce/sprucetree-1",
            "trees/mixed/largebleedingserralita1",
            "trees/spruce/sprucetree-4",
            "trees/spruce/sprucetree-5",
            "trees/mixed/largebleedingserralita3",
            "trees/spruce/sprucetree-2",
            "trees/mixed/largebleedingserralita2",
            "trees/mushroom/ice1",
            "trees/spruce/sprucetree-3",
            "structures/bonehand3",
            "trees/mushroom/ice2",
            "trees/spruce/sprucetree-8",
            "structures/bonehand2",
            "trees/mushroom/ice3",
            "trees/spruce/sprucetree-9",
            "trees/mushroom/ice4",
            "trees/spruce/sprucetree-6",
            "trees/mushroom/ice5",
            "trees/spruce/sprucetree-7",
            "structures/bonehand1",
            "trees/mixed/largebleedingserralita5",
            "light",
            "trees/mixed/largebleedingserralita4",
            "clutter/shrub7",
            "clutter/shrub6",
            "clutter/shrub5",
            "clutter/shrub4",
            "clutter/shrub9",
            "clutter/shrub8",
            "trees/jungle/vgeneric19",
            "trees/jungle/vgeneric18",
            "structures/crystal10",
            "trees/jungle/vgeneric20",
            "trees/jungle/vgeneric22",
            "trees/jungle/vgeneric21",
            "clutter/brksphinx1",
            "structures/presentmediumred15",
            "clutter/stoneboulder11",
            "clutter/stoneboulder12",
            "clutter/stoneboulder10",
            "clutter/savrock8",
            "clutter/savrock7",
            "clutter/statue-villager-acacia",
            "clutter/arbusto4",
            "clutter/arbusto5",
            "structures/shipgenericu",
            "structures/shipgenericw",
            "trees/jungle/vgeneric11",
            "trees/jungle/vgeneric10",
            "trees/jungle/vgeneric13",
            "trees/jungle/vgeneric12",
            "trees/jungle/vgeneric15",
            "trees/jungle/vgeneric14",
            "structures/shipgenericr",
            "trees/jungle/vgeneric17",
            "trees/jungle/vgeneric16",
            "clutter/savrock4",
            "clutter/savrock3",
            "clutter/savrock6",
            "clutter/savrock5",
            "clutter/stoneboulder15",
            "jigsaw/dungeon/spawner-room",
            "clutter/savrock2",
            "clutter/stoneboulder13",
            "jigsaw/murky_stronghold/c-sw-3",
            "clutter/savrock1",
            "clutter/stoneboulder14",
            "jigsaw/murky_stronghold/c-sw-4",
            "jigsaw/murky_stronghold/c-sw-1",
            "jigsaw/murky_stronghold/c-sw-2",
            "structures/tower",
            "structures/presentmediumbluea18",
            "clutter/coralpurp3",
            "trees/oak/denmyre2",
            "trees/spruce/mevergreen1",
            "clutter/coralpurp2",
            "trees/oak/denmyre3",
            "trees/spruce/mevergreen2",
            "trees/oak/denmyre1",
            "clutter/coralpurp1",
            "jigsaw/village-bits/lantern-ne-5",
            "trees/oak/denmyre8",
            "structures/shipupsidedownfulldegraded",
            "trees/oak/denmyre9",
            "trees/oak/denmyre6",
            "trees/oak/denmyre7",
            "trees/oak/denmyre4",
            "trees/spruce/mevergreen3",
            "trees/oak/denmyre5",
            "trees/spruce/xmasbaby5",
            "structures/islhead1",
            "trees/spruce/xmasbaby4",
            "trees/spruce/xmasbaby1",
            "trees/spruce/xmasbaby3",
            "trees/spruce/xmasbaby2",
            "trees/birch/antioch12",
            "trees/birch/antioch13",
            "trees/birch/antioch10",
            "trees/birch/antioch11",
            "trees/jungle/mgeneric1",
            "trees/acacia/vexed3",
            "clutter/gravelsplotch4",
            "jigsaw/village-bits/lantern-ne-2",
            "trees/acacia/vexed2",
            "trees/jungle/mgeneric3",
            "jigsaw/village-bits/lantern-ne-1",
            "trees/acacia/vexed1",
            "trees/jungle/mgeneric2",
            "jigsaw/village-bits/lantern-ne-4",
            "jigsaw/village-bits/lantern-ne-3",
            "trees/jungle/mgeneric4",
            "clutter/gravelsplotch1",
            "clutter/gravelsplotch2",
            "clutter/gravelsplotch3",
            "clutter/lilly",
            "structures/presentsupermassivegreen9",
            "trees/mushroom/redgeneric1",
            "trees/mushroom/redgeneric2",
            "trees/mushroom/redgeneric5",
            "trees/mushroom/redgeneric6",
            "trees/mushroom/redgeneric3",
            "trees/mushroom/redgeneric4",
            "trees/mushroom/redgeneric9",
            "trees/mushroom/redgeneric7",
            "trees/mushroom/redgeneric8",
            "trees/birch/antioch9",
            "jigsaw/void/gvoid",
            "trees/birch/smallgeneric11",
            "trees/birch/smallgeneric10",
            "jigsaw/pyramid/rpyramid-extreme",
            "clutter/boulder10",
            "clutter/boulder11",
            "structures/presentsupermassiveyellowa2",
            "clutter/boulder12",
            "clutter/boulder13",
            "clutter/boulder14",
            "clutter/boulder15",
            "structures/shipupsidedownbackhalf",
            "trees/birch/antioch4",
            "trees/birch/generic4",
            "trees/sakura/mlarge8",
            "trees/birch/antioch3",
            "trees/birch/generic5",
            "trees/sakura/mlarge9",
            "trees/birch/antioch2",
            "trees/birch/generic2",
            "trees/birch/antioch1",
            "trees/birch/generic3",
            "trees/birch/antioch8",
            "trees/sakura/mlarge4",
            "trees/birch/antioch7",
            "trees/birch/generic1",
            "trees/sakura/mlarge5",
            "trees/birch/antioch6",
            "trees/sakura/mlarge6",
            "trees/birch/antioch5",
            "trees/sakura/mlarge7",
            "trees/sakura/mlarge1",
            "trees/sakura/mlarge2",
            "trees/sakura/mlarge3",
            "trees/birch/generic8",
            "trees/birch/generic9",
            "trees/birch/generic6",
            "trees/birch/generic7",
            "trees/oak/smdeadwood2",
            "trees/oak/smdeadwood1",
            "trees/oak/smdeadwood3",
            "structures/shipgenericg",
            "trees/oak/generic4",
            "trees/oak/generic3",
            "trees/oak/generic6",
            "trees/oak/generic5",
            "trees/oak/generic2",
            "structures/shipgenericc",
            "trees/oak/generic1",
            "trees/jungle/spalm4",
            "trees/jungle/spalm3",
            "trees/jungle/spalm2",
            "trees/jungle/spalm1",
            "trees/darkoak/generic9",
            "trees/darkoak/generic8",
            "trees/jungle/cocogeneric1",
            "trees/darkoak/generic7",
            "trees/jungle/cocogeneric2",
            "trees/darkoak/generic6",
            "structures/presentsupermassiveorange7",
            "trees/darkoak/generic5",
            "trees/darkoak/generic4",
            "trees/jungle/cocogeneric5",
            "trees/darkoak/generic3",
            "trees/darkoak/generic2",
            "trees/jungle/cocogeneric3",
            "trees/darkoak/generic1",
            "trees/jungle/cocogeneric4",
            "trees/jungle/spalm5",
            "trees/jungle/nh-lgeneric1",
            "trees/jungle/nh-lgeneric2",
            "trees/jungle/nh-lgeneric3",
            "trees/jungle/nh-lgeneric5",
            "jigsaw/end_city/bridge_end",
            "jigsaw/desert-pyramid/top",
            "trees/sakura/genericsak5",
            "trees/sakura/genericsak4",
            "jigsaw/underwater_ruin/warm_6",
            "trees/spruce/denmyre12",
            "jigsaw/underwater_ruin/warm_5",
            "trees/spruce/denmyre13",
            "jigsaw/underwater_ruin/warm_8",
            "trees/spruce/denmyre10",
            "jigsaw/underwater_ruin/warm_7",
            "trees/spruce/denmyre11",
            "trees/spruce/denmyre16",
            "trees/spruce/denmyre14",
            "structures/shipwithmast",
            "trees/spruce/denmyre15",
            "jigsaw/house-norm/Med7",
            "jigsaw/house-norm/Med6",
            "jigsaw/house-norm/Med5",
            "jigsaw/house-norm/Med4",
            "jigsaw/underwater_ruin/warm_2",
            "jigsaw/underwater_ruin/warm_1",
            "jigsaw/house-norm/Med9",
            "jigsaw/underwater_ruin/warm_4",
            "jigsaw/house-norm/Med8",
            "jigsaw/underwater_ruin/warm_3",
            "trees/mixed/sandyjungle4",
            "structures/presentsupermassivepurplea6",
            "jigsaw/house-norm/Med3",
            "jigsaw/house-norm/Med2",
            "jigsaw/house-norm/Med1",
            "trees/mixed/tredwoodbee1",
            "trees/mixed/tredwoodbee3",
            "trees/sakura/genericsak1",
            "trees/mixed/sandyjungle1",
            "trees/mixed/tredwoodbee2",
            "trees/mixed/sandyjungle2",
            "trees/sakura/genericsak3",
            "trees/mixed/sandyjungle3",
            "trees/mixed/tredwoodbee4",
            "trees/sakura/genericsak2",
            "trees/mangrove/tree20",
            "trees/mangrove/tree21",
            "trees/birch/largeponderosa20",
            "clutter/statue-villager-plains",
            "jigsaw/house-purjap/PurJap9",
            "jigsaw/house-purjap/PurJap8",
            "jigsaw/house-purjap/PurJap7",
            "jigsaw/house-purjap/PurJap6",
            "jigsaw/house-purjap/PurJap5",
            "jigsaw/house-purjap/PurJap4",
            "trees/birch/largeponderosa18",
            "trees/birch/largeponderosa19",
            "trees/mangrove/tree17",
            "clutter/pond",
            "trees/mangrove/tree18",
            "trees/oak/shoakgeneric10",
            "trees/mangrove/tree19",
            "jigsaw/end_city/base_floor",
            "trees/mangrove/tree10",
            "trees/mangrove/tree11",
            "trees/mangrove/tree12",
            "trees/mangrove/tree13",
            "trees/mangrove/tree14",
            "trees/mangrove/tree15",
            "trees/mangrove/tree16",
            "trees/birch/largeponderosa14",
            "trees/birch/largeponderosa15",
            "trees/birch/largeponderosa16",
            "trees/birch/largeponderosa17",
            "trees/birch/largeponderosa10",
            "trees/birch/largeponderosa11",
            "trees/birch/largeponderosa12",
            "trees/birch/largeponderosa13",
            "jigsaw/house-purjap/PurJap3",
            "jigsaw/house-purjap/PurJap2",
            "jigsaw/house-purjap/PurJap1",
            "trees/acacia/savannas9",
            "trees/oak/foak1",
            "trees/oak/mroofed8",
            "trees/oak/mroofed9",
            "jigsaw/pyramid/rpyramid",
            "trees/oak/mroofed2",
            "trees/spruce/vgeneric3",
            "trees/oak/mroofed3",
            "trees/spruce/vgeneric2",
            "trees/spruce/vgeneric1",
            "trees/oak/mroofed1",
            "trees/oak/mroofed6",
            "trees/oak/mroofed7",
            "trees/oak/mroofed4",
            "trees/oak/mroofed5",
            "trees/birch/mediumgeneric2",
            "trees/birch/mediumgeneric1",
            "trees/spruce/vgeneric9",
            "trees/birch/mediumgeneric3",
            "trees/spruce/vgeneric8",
            "trees/spruce/vgeneric7",
            "trees/spruce/vgeneric6",
            "trees/spruce/vgeneric5",
            "trees/spruce/vgeneric4",
            "trees/oak/oakFancy9",
            "trees/oak/oakFancy8",
            "trees/oak/oakFancy5",
            "trees/oak/oakFancy4",
            "trees/jungle/deligeneric6",
            "trees/oak/oakFancy7",
            "trees/jungle/deligeneric5",
            "trees/oak/oakFancy6",
            "trees/jungle/deligeneric4",
            "trees/oak/oakFancy1",
            "trees/jungle/deligeneric3",
            "jigsaw/pyramid/pyramidred45",
            "trees/jungle/deligeneric2",
            "trees/oak/oakFancy3",
            "trees/jungle/deligeneric1",
            "trees/oak/oakFancy2",
            "jigsaw/village-bits/bland-ne-4",
            "trees/spruce/vgeneric11",
            "jigsaw/village-bits/bland-ne-5",
            "trees/spruce/vgeneric12",
            "trees/oak/shoakgeneric1",
            "trees/spruce/vgeneric13",
            "trees/oak/shoakgeneric2",
            "trees/spruce/vgeneric14",
            "trees/spruce/vgeneric10",
            "trees/spruce/vgeneric19",
            "clutter/workshop1",
            "trees/spruce/vgeneric15",
            "jigsaw/village-bits/bland-ne-1",
            "trees/spruce/vgeneric16",
            "jigsaw/village-bits/bland-ne-2",
            "trees/spruce/vgeneric17",
            "jigsaw/village-bits/bland-ne-3",
            "trees/spruce/vgeneric18",
            "clutter/tourmaclutt9",
            "clutter/tourmaclutt8",
            "clutter/tourmaclutt7",
            "clutter/tourmaclutt6",
            "clutter/tourmaclutt5",
            "clutter/tourmaclutt4",
            "clutter/tourmaclutt3",
            "clutter/tourmaclutt2",
            "clutter/tourmaclutt1",
            "trees/oak/shoakgeneric7",
            "trees/oak/shoakgeneric8",
            "trees/oak/shoakgeneric9",
            "trees/oak/shoakgeneric3",
            "structures/shiprightsideupfulldegraded",
            "trees/oak/shoakgeneric4",
            "trees/oak/shoakgeneric5",
            "trees/oak/shoakgeneric6",
            "trees/mushroom/crimsonwood2",
            "trees/mushroom/crimsonwood1",
            "trees/mushroom/crimsonwood5",
            "trees/mushroom/crimsonwood4",
            "trees/mushroom/crimsonwood3",
            "clutter/honeynest1",
            "clutter/honeynest2",
            "clutter/honeynest3",
            "clutter/honeynest4",
            "jigsaw/underwater_ruin/mossy_6",
            "jigsaw/underwater_ruin/mossy_5",
            "jigsaw/underwater_ruin/mossy_8",
            "jigsaw/underwater_ruin/mossy_7",
            "clutter/honeynest9",
            "jigsaw/underwater_ruin/mossy_2",
            "jigsaw/underwater_ruin/mossy_1",
            "jigsaw/underwater_ruin/mossy_4",
            "jigsaw/underwater_ruin/mossy_3",
            "clutter/honeynest5",
            "clutter/honeynest6",
            "clutter/honeynest7",
            "clutter/honeynest8",
            "trees/jungle/denmyre15",
            "trees/jungle/denmyre16",
            "trees/sakura/vlarge1",
            "trees/jungle/denmyre10",
            "trees/sakura/vlarge2",
            "trees/jungle/denmyre11",
            "trees/jungle/denmyre12",
            "trees/jungle/denmyre13",
            "trees/jungle/denmyre14",
            "clutter/stonedirtsetter7",
            "clutter/stonedirtsetter5",
            "clutter/stonedirtsetter6",
            "clutter/stonedirtsetter3",
            "clutter/stonedirtsetter4",
            "clutter/stonedirtsetter1",
            "clutter/stonedirtsetter2",
            "structures/FT_1",
            "structures/hut",
            "structures/usdship2",
            "structures/usdship1",
            "trees/sakura/vlarge3",
            "structures/rustic4",
            "clutter/bonespire2",
            "clutter/bonespire1",
            "clutter/medtourmaclutt10",
            "clutter/bonespire4",
            "clutter/medtourmaclutt11",
            "trees/oak/massivegeneric3",
            "clutter/bonespire3",
            "clutter/medtourmaclutt12",
            "clutter/medtourmaclutt13",
            "clutter/medtourmaclutt14",
            "clutter/medtourmaclutt15",
            "clutter/medtourmaclutt16",
            "trees/mushroom/mushclut2",
            "trees/mushroom/mushclut3",
            "trees/mushroom/mushclut4",
            "trees/mushroom/mushclut5",
            "trees/mushroom/mushclut6",
            "trees/mushroom/mushclut7",
            "trees/mushroom/mushclut8",
            "clutter/bomb1",
            "trees/mushroom/mushclut9",
            "jigsaw/pillager_outpost/watchtower_overgrown",
            "trees/mushroom/mushclut1",
            "clutter/medtourmaclutt17",
            "trees/oak/troofed1",
            "clutter/bonespire9",
            "clutter/medtourmaclutt18",
            "trees/oak/troofed2",
            "clutter/medtourmaclutt19",
            "clutter/bonespire6",
            "trees/oak/massivegeneric1",
            "trees/oak/troofed5",
            "clutter/bonespire5",
            "trees/oak/massivegeneric2",
            "trees/oak/troofed6",
            "clutter/bonespire8",
            "trees/oak/troofed3",
            "clutter/bonespire7",
            "trees/oak/troofed4",
            "clutter/medtourmaclutt20",
            "trees/oak/troofed9",
            "trees/birch/omni1",
            "trees/oak/troofed7",
            "trees/oak/troofed8",
            "structures/monolith5",
            "clutter/srock1",
            "structures/monolith6",
            "structures/monolith3",
            "structures/monolith4",
            "trees/spruce/severgreen1",
            "trees/spruce/severgreen2",
            "trees/birch/smolponderosa5",
            "trees/birch/smolponderosa6",
            "trees/birch/smolponderosa3",
            "trees/birch/smolponderosa4",
            "structures/monolith1",
            "trees/birch/smolponderosa9",
            "structures/monolith2",
            "clutter/srock2",
            "trees/birch/smolponderosa7",
            "trees/birch/smolponderosa8",
            "trees/oak/smfallen1",
            "trees/birch/smolponderosa1",
            "trees/birch/smolponderosa2",
            "trees/spruce/vgeneric30",
            "trees/spruce/vgeneric31",
            "trees/sakura/smwilt1",
            "trees/spruce/vgeneric32",
            "jigsaw/fossil/spine_3_coal",
            "trees/sakura/smwilt2",
            "trees/mangrove/mangrove2",
            "trees/spruce/twirl1",
            "trees/spruce/vgeneric22",
            "trees/birch/denmyre9",
            "trees/mangrove/mangrove1",
            "trees/spruce/twirl2",
            "trees/spruce/vgeneric23",
            "trees/birch/denmyre8",
            "trees/mangrove/mangrove4",
            "trees/spruce/twirl3",
            "trees/spruce/vgeneric24",
            "trees/birch/denmyre7",
            "trees/mangrove/mangrove3",
            "trees/spruce/twirl4",
            "trees/spruce/vgeneric25",
            "trees/birch/denmyre6",
            "trees/birch/denmyre5",
            "trees/birch/denmyre4",
            "trees/spruce/vgeneric20",
            "trees/birch/denmyre3",
            "trees/spruce/vgeneric21",
            "structures/tentacleslime6",
            "trees/spruce/twirl9",
            "structures/tentacleslime5",
            "structures/tentacleslime4",
            "structures/tentacleslime3",
            "structures/shiprightsideupbackhalf",
            "structures/tentacleslime2",
            "trees/spruce/twirl5",
            "trees/spruce/vgeneric26",
            "structures/tentacleslime1",
            "trees/spruce/twirl6",
            "trees/spruce/vgeneric27",
            "trees/spruce/twirl7",
            "trees/spruce/vgeneric28",
            "trees/spruce/twirl8",
            "trees/spruce/vgeneric29",
            "structures/tentacleslime7",
            "jigsaw/fossil/skull_3",
            "structures/shipupsidedownfull",
            "jigsaw/fossil/skull_4",
            "jigsaw/fossil/skull_1",
            "jigsaw/fossil/skull_2",
            "trees/birch/denmyre2",
            "trees/birch/denmyre1",
            "trees/mangrove/mangrove9",
            "trees/mangrove/mangrove6",
            "trees/mangrove/mangrove5",
            "trees/mangrove/mangrove8",
            "trees/mangrove/mangrove7",
            "trees/darkoak/large-10",
            "trees/mushroom/smolshroom5",
            "trees/mushroom/smolshroom4",
            "trees/mushroom/redlumotall11",
            "trees/mushroom/redlumotall10",
            "structures/tower-twin",
            "trees/jungle/palm2",
            "trees/jungle/palm3",
            "trees/jungle/palm4",
            "trees/mushroom/redgeneric11",
            "trees/jungle/palm5",
            "trees/mushroom/redgeneric10",
            "trees/jungle/palm6",
            "trees/mushroom/smolshroom1",
            "trees/jungle/palm7",
            "trees/jungle/palm8",
            "trees/mushroom/smolshroom3",
            "trees/jungle/palm9",
            "trees/mushroom/smolshroom2",
            "structures/presentblue19",
            "trees/jungle/palm1",
            "trees/jungle/bmbogeneric5",
            "trees/jungle/bmbogeneric6",
            "trees/jungle/bmbogeneric3",
            "trees/jungle/bmbogeneric4",
            "trees/jungle/bmbogeneric1",
            "trees/jungle/bmbogeneric2",
            "jigsaw/underwater_ruin/big_mossy_8",
            "trees/spruce/twirl10",
            "clutter/soulcamp1",
            "trees/spruce/unfrostedlarge8",
            "trees/spruce/unfrostedlarge9",
            "jigsaw/underwater_ruin/big_mossy_2",
            "trees/spruce/unfrostedlarge4",
            "jigsaw/underwater_ruin/big_mossy_3",
            "trees/spruce/unfrostedlarge5",
            "trees/spruce/unfrostedlarge6",
            "jigsaw/underwater_ruin/big_mossy_1",
            "trees/spruce/unfrostedlarge7",
            "trees/spruce/unfrostedlarge1",
            "trees/spruce/unfrostedlarge2",
            "trees/spruce/unfrostedlarge3",
            "jigsaw/village-bits/logger-ne-5",
            "jigsaw/village-bits/logger-ne-3",
            "jigsaw/village-bits/logger-ne-4",
            "jigsaw/end_city/fat_tower_base",
            "trees/jungle/bmbogeneric9",
            "trees/jungle/bmbogeneric7",
            "trees/jungle/bmbogeneric8",
            "jigsaw/village-bits/logger-ne-1",
            "jigsaw/village-bits/logger-ne-2",
            "trees/acacia/thin9",
            "trees/bonsai/med-3",
            "trees/acacia/thin8",
            "trees/bonsai/med-2",
            "trees/acacia/thin7",
            "trees/bonsai/med-1",
            "trees/acacia/thin6",
            "trees/acacia/thin5",
            "trees/mixed/AmySmol8",
            "trees/acacia/thin4",
            "trees/mixed/AmySmol9",
            "trees/acacia/thin3",
            "trees/mixed/AmySmol6",
            "trees/acacia/thin2",
            "trees/mixed/AmySmol7",
            "trees/bonsai/med-4",
            "trees/mixed/purpletourmalinelarge6",
            "trees/mixed/purpletourmalinelarge5",
            "trees/mixed/purpletourmalinelarge8",
            "trees/mixed/purpletourmalinelarge7",
            "trees/mixed/purpletourmalinelarge2",
            "trees/mixed/purpletourmalinelarge1",
            "trees/mixed/purpletourmalinelarge4",
            "trees/mixed/purpletourmalinelarge3",
            "trees/mixed/purpletourmalinelarge9",
            "structures/presentsupermassivereda4",
            "trees/spruce/generic3",
            "trees/spruce/generic2",
            "trees/spruce/generic1",
            "clutter/stump7",
            "trees/spruce/sup-pine-1",
            "trees/spruce/sup-pine-2",
            "clutter/stump5",
            "clutter/stump6",
            "clutter/stump3",
            "trees/birch/medponderosa10",
            "clutter/stump4",
            "clutter/stump1",
            "clutter/stump2",
            "trees/birch/medponderosa14",
            "trees/spruce/sup-pine-9",
            "trees/birch/medponderosa13",
            "trees/birch/medponderosa12",
            "trees/spruce/sup-pine-7",
            "trees/birch/medponderosa11",
            "trees/spruce/sup-pine-8",
            "trees/mixed/bleedingserralita10",
            "trees/spruce/sup-pine-5",
            "trees/spruce/sup-pine-6",
            "trees/spruce/sup-pine-3",
            "trees/birch/medponderosa15",
            "trees/spruce/sup-pine-4",
            "trees/spruce/lushgenericpine7",
            "trees/spruce/lushgenericpine6",
            "trees/spruce/lushgenericpine9",
            "trees/spruce/lushgenericpine8",
            "trees/bonsai/smbon1",
            "trees/bonsai/smbon2",
            "trees/bonsai/smbon3",
            "clutter/genericpeak6",
            "clutter/genericpeak5",
            "clutter/genericpeak4",
            "clutter/genericpeak3",
            "clutter/genericpeak2",
            "clutter/genericpeak1",
            "trees/spruce/lushgenericpine3",
            "trees/spruce/lushgenericpine2",
            "trees/spruce/lushgenericpine5",
            "trees/oak/sponderosa10",
            "trees/spruce/lushgenericpine4",
            "trees/spruce/lushgenericpine1",
            "trees/oak/sponderosa15",
            "structures/floatisle1",
            "trees/oak/sponderosa11",
            "trees/oak/sponderosa12",
            "trees/oak/sponderosa13",
            "trees/oak/sponderosa14",
            "jigsaw/end_city/second_floor_1",
            "jigsaw/end_city/second_floor_2",
            "trees/oak/smol3",
            "trees/spruce/genericdead1",
            "trees/oak/smol4",
            "trees/oak/smol5",
            "trees/spruce/genericdead3",
            "trees/oak/smol6",
            "trees/spruce/genericdead2",
            "trees/oak/smol1",
            "trees/oak/smol2",
            "trees/oak/smol7",
            "trees/jungle/sgeneric1",
            "trees/oak/smol8",
            "trees/jungle/sgeneric2",
            "trees/oak/smol9",
            "trees/jungle/sgeneric3",
            "trees/jungle/sgeneric4",
            "jigsaw/end_city/bridge_gentle_stairs",
            "trees/mixed/purpletourmalinelarge10",
            "trees/darkoak/denmyre5",
            "trees/darkoak/denmyre4",
            "trees/darkoak/denmyre3",
            "trees/darkoak/denmyre2",
            "trees/darkoak/denmyre1",
            "trees/spruce/pine7",
            "trees/spruce/pine8",
            "trees/spruce/pine9",
            "trees/spruce/pine3",
            "trees/spruce/pine4",
            "trees/spruce/pine5",
            "trees/spruce/pine6",
            "jigsaw/village-bits/lanterns-x-1",
            "jigsaw/village-bits/lanterns-x-2",
            "trees/spruce/pine1",
            "trees/spruce/pine2",
            "jigsaw/village-bits/lanterns-x-5",
            "trees/darkoak/denmyre9",
            "trees/darkoak/denmyre8",
            "jigsaw/village-bits/lanterns-x-3",
            "trees/darkoak/denmyre7",
            "jigsaw/village-bits/lanterns-x-4",
            "trees/darkoak/denmyre6",
            "jigsaw/end_city/tower_base",
            "structures/presentsupermassivegreena10",
            "clutter/coralpink1",
            "jigsaw/murky_stronghold/f-x-5",
            "trees/mixed/purpletourmalinemed10",
            "clutter/coralpink2",
            "jigsaw/murky_stronghold/f-x-4",
            "trees/oak/antioch10",
            "clutter/coralpink3",
            "trees/oak/antioch11",
            "clutter/coralpink4",
            "jigsaw/murky_stronghold/f-x-6",
            "trees/oak/antioch12",
            "jigsaw/murky_stronghold/f-x-1",
            "trees/oak/antioch13",
            "jigsaw/murky_stronghold/f-x-3",
            "jigsaw/murky_stronghold/f-x-2",
            "clutter/icespec2",
            "clutter/icespec3",
            "clutter/icespec1",
            "clutter/icespec4",
            "clutter/melons6",
            "clutter/icespec5",
            "clutter/melons4",
            "trees/acacia/thin10",
            "clutter/melons5",
            "clutter/melons2",
            "trees/acacia/thin12",
            "clutter/melons3",
            "trees/acacia/thin11",
            "trees/acacia/thin14",
            "clutter/melons1",
            "trees/acacia/thin13",
            "trees/acacia/thin16",
            "trees/acacia/thin15",
            "trees/darkoak/willowbutbigger-1",
            "trees/darkoak/willowbutbigger-2",
            "jigsaw/end_city/tower_floor",
            "trees/bonsai/smbase1",
            "trees/mixed/serralutageneric8",
            "trees/mixed/serralutageneric9",
            "trees/mixed/serralutageneric1",
            "trees/mixed/serralutageneric2",
            "trees/mixed/serralutageneric3",
            "trees/mixed/serralutageneric4",
            "trees/mixed/serralutageneric5",
            "trees/mixed/serralutageneric6",
            "trees/mixed/serralutageneric7",
            "clutter/desertpost3",
            "clutter/tourmaclutt21",
            "trees/willow/t3",
            "clutter/tourmaclutt20",
            "trees/willow/t4",
            "clutter/tourmaclutt23",
            "trees/willow/t1",
            "clutter/tourmaclutt22",
            "trees/willow/t2",
            "clutter/tourmaclutt25",
            "trees/oak/truegeneric22",
            "trees/willow/t7",
            "clutter/tourmaclutt24",
            "trees/oak/truegeneric21",
            "trees/willow/t8",
            "trees/oak/truegeneric24",
            "trees/willow/t5",
            "trees/oak/truegeneric23",
            "trees/willow/t6",
            "trees/spruce/pine12",
            "trees/oak/truegeneric20",
            "clutter/desertpost1",
            "trees/spruce/pine11",
            "clutter/desertpost2",
            "trees/spruce/pine10",
            "trees/oak/troofedroot10",
            "trees/oak/truegeneric19",
            "trees/oak/truegeneric18",
            "clutter/tourmaclutt10",
            "trees/oak/truegeneric15",
            "trees/spruce/unfrostedlarge22",
            "trees/oak/truegeneric14",
            "trees/spruce/unfrostedlarge23",
            "clutter/tourmaclutt12",
            "trees/oak/truegeneric17",
            "trees/spruce/unfrostedlarge24",
            "clutter/tourmaclutt11",
            "trees/oak/truegeneric16",
            "clutter/tourmaclutt14",
            "trees/oak/truegeneric11",
            "clutter/tourmaclutt13",
            "trees/oak/truegeneric10",
            "clutter/tourmaclutt16",
            "trees/oak/truegeneric13",
            "trees/spruce/unfrostedlarge20",
            "clutter/tourmaclutt15",
            "trees/oak/truegeneric12",
            "trees/spruce/unfrostedlarge21",
            "clutter/doakspec1",
            "trees/mixed/AmySmol10",
            "trees/mixed/AmySmol12",
            "trees/mixed/AmySmol11",
            "clutter/doakspec3",
            "clutter/bincluster1",
            "clutter/doakspec2",
            "trees/oak/sloak1",
            "clutter/tourmaclutt18",
            "clutter/tourmaclutt17",
            "clutter/tourmaclutt19",
            "structures/shipgenericplain",
            "trees/spruce/denmyre5",
            "trees/spruce/denmyre6",
            "trees/spruce/denmyre7",
            "trees/spruce/denmyre8",
            "trees/spruce/denmyre1",
            "trees/spruce/denmyre2",
            "trees/spruce/denmyre3",
            "trees/spruce/denmyre4",
            "clutter/spikestone8",
            "trees/bonsai/medtilt4",
            "trees/willow/w6",
            "clutter/spikestone7",
            "trees/bonsai/medtilt5",
            "trees/willow/w7",
            "clutter/spikestone6",
            "trees/bonsai/medtilt2",
            "trees/willow/w4",
            "clutter/spikestone5",
            "trees/bonsai/medtilt3",
            "trees/willow/w5",
            "trees/bonsai/medtilt1",
            "structures/megaportal2",
            "trees/willow/w8",
            "structures/megaportal1",
            "trees/willow/w9",
            "clutter/rdesertpost3",
            "trees/willow/w2",
            "trees/willow/w3",
            "clutter/rdesertpost1",
            "clutter/rdesertpost2",
            "trees/willow/w1",
            "structures/ruins-desert-1",
            "structures/ruins-desert-2",
            "trees/spruce/denmyre9",
            "jigsaw/underwater_ruin/big_warm_4",
            "jigsaw/underwater_ruin/big_warm_5",
            "jigsaw/murky_stronghold/c-ns-2",
            "jigsaw/underwater_ruin/big_warm_6",
            "jigsaw/murky_stronghold/c-ns-3",
            "jigsaw/underwater_ruin/big_warm_7",
            "jigsaw/murky_stronghold/c-ns-4",
            "jigsaw/murky_stronghold/c-ns-1",
            "trees/spruce/sfrostgeneric1",
            "trees/spruce/sfrostgeneric2",
            "jigsaw/village-bits/hay-x-4",
            "trees/oak/mponderosa20",
            "trees/oak/oakFancy2NS",
            "jigsaw/village-bits/hay-x-5",
            "jigsaw/village-bits/hay-x-2",
            "jigsaw/village-bits/hay-x-3",
            "jigsaw/village-bits/hay-x-1",
            "clutter/concretelith2",
            "clutter/concretelith3",
            "clutter/concretelith1",
            "trees/oak/mponderosa15",
            "trees/oak/mponderosa16",
            "trees/oak/mponderosa13",
            "trees/oak/mponderosa14",
            "clutter/concretelith6",
            "trees/oak/mponderosa19",
            "clutter/concretelith7",
            "clutter/concretelith4",
            "trees/oak/mponderosa17",
            "clutter/concretelith5",
            "trees/oak/mponderosa18",
            "trees/spruce/sprucetree-15",
            "clutter/statue-villager-ocean",
            "trees/spruce/sprucetree-14",
            "trees/spruce/sprucetree-13",
            "clutter/honeynest10",
            "trees/oak/mponderosa11",
            "trees/spruce/sprucetree-12",
            "trees/oak/mponderosa12",
            "trees/spruce/sprucetree-11",
            "trees/spruce/sprucetree-10",
            "trees/oak/mponderosa10",
            "structures/ruin1",
            "structures/ruin2",
            "structures/ruin3",
            "structures/ruin4",
            "trees/spruce/sfrostgeneric7",
            "trees/spruce/sfrostgeneric8",
            "trees/spruce/sfrostgeneric9",
            "clutter/spikestone4",
            "trees/spruce/sfrostgeneric3",
            "clutter/spikestone3",
            "trees/spruce/sfrostgeneric4",
            "clutter/spikestone2",
            "trees/spruce/sfrostgeneric5",
            "clutter/spikestone1",
            "trees/spruce/sfrostgeneric6",
            "trees/spruce/smol2",
            "trees/spruce/smol3",
            "trees/spruce/smol4",
            "trees/spruce/smol5",
            "trees/spruce/smol6",
            "trees/spruce/smol7",
            "trees/spruce/smol8",
            "trees/spruce/smol9",
            "trees/mixed/AmySmol4",
            "trees/mixed/AmySmol5",
            "trees/spruce/smol13",
            "trees/mixed/AmySmol2",
            "trees/mixed/AmySmol3",
            "trees/spruce/smol10",
            "trees/mixed/AmySmol1",
            "trees/spruce/smol12",
            "jigsaw/end_city/fat_tower_middle",
            "trees/spruce/smol1",
            "trees/spruce/smol11",
            "trees/mushroom/froShroom2",
            "trees/mushroom/froShroom3",
            "trees/mushroom/froShroom4",
            "trees/mushroom/froShroom5",
            "structures/tentacleoak8",
            "trees/mushroom/froShroom1",
            "structures/tentacleoak6",
            "structures/tentacleoak7",
            "structures/tentacleoak4",
            "structures/tentacleoak5",
            "jigsaw/village-bits/bland-e-1",
            "structures/tentacleoak2",
            "structures/tentacleoak3",
            "structures/tentacleoak1",
            "jigsaw/end_city/bridge_steep_stairs",
            "clutter/coralred1",
            "trees/mushroom/redlumotall9",
            "trees/mushroom/redlumotall8",
            "structures/swampforearm1",
            "trees/darkoak/generic11",
            "structures/swampforearm2",
            "trees/darkoak/generic10",
            "structures/swampforearm3",
            "trees/mushroom/redlumotall5",
            "structures/swampforearm4",
            "trees/mixed/swampcorrupt10",
            "trees/mushroom/redlumotall4",
            "jigsaw/fossil/skull_4_coal",
            "structures/swampforearm5",
            "trees/mushroom/redlumotall7",
            "trees/mushroom/redlumotall6",
            "clutter/icecluster11",
            "jigsaw/village-bits/bland-e-5",
            "trees/mushroom/redlumotall1",
            "clutter/icecluster10",
            "jigsaw/village-bits/bland-e-4",
            "jigsaw/village-bits/bland-e-3",
            "trees/mushroom/redlumotall3",
            "jigsaw/village-bits/bland-e-2",
            "trees/mushroom/redlumotall2",
            "trees/acacia/savannas12",
            "trees/acacia/savannas11",
            "trees/acacia/savannas10",
            "jigsaw/village-bits/logger-ns-5",
            "trees/mixed/serralutageneric10",
            "trees/oak/smtoak1",
            "clutter/boulder1",
            "jigsaw/village-bits/logger-ns-3",
            "clutter/boulder2",
            "jigsaw/village-bits/logger-ns-4",
            "jigsaw/village-bits/logger-ns-1",
            "jigsaw/village-bits/logger-ns-2",
            "clutter/boulder5",
            "clutter/boulder6",
            "clutter/boulder3",
            "trees/jungle/smgeneric1",
            "clutter/boulder4",
            "clutter/boulder9",
            "clutter/boulder7",
            "clutter/boulder8",
            "clutter/corazoncristal",
            "trees/birch/denmyre10",
            "trees/birch/denmyre11",
            "trees/birch/denmyre14",
            "trees/birch/denmyre15",
            "trees/birch/denmyre12",
            "trees/birch/denmyre13",
            "trees/birch/denmyre16",
            "clutter/rsphinx1",
            "clutter/coralyellow3",
            "clutter/rbrksphinx1",
            "trees/mixed/honey17",
            "trees/mixed/honey16",
            "trees/mixed/honey15",
            "structures/presentreda14",
            "trees/mixed/honey14",
            "trees/darkoak/willowgeneric2",
            "trees/darkoak/willowgeneric1",
            "trees/mixed/honey19",
            "trees/mixed/honey18",
            "trees/mixed/swampcorrupt6",
            "trees/oak/troofedroot4",
            "trees/mixed/swampcorrupt5",
            "trees/oak/troofedroot3",
            "trees/mixed/swampcorrupt4",
            "trees/oak/troofedroot2",
            "trees/mixed/swampcorrupt3",
            "trees/oak/troofedroot1",
            "trees/mixed/honey13",
            "trees/oak/troofedroot8",
            "trees/mixed/honey12",
            "trees/mixed/swampcorrupt9",
            "trees/oak/troofedroot7",
            "trees/mixed/honey11",
            "trees/mixed/swampcorrupt8",
            "trees/oak/troofedroot6",
            "trees/mixed/honey10",
            "trees/mixed/swampcorrupt7",
            "trees/oak/troofedroot5",
            "trees/mixed/swampcorrupt2",
            "trees/mixed/swampcorrupt1",
            "trees/spruce/unfrostedlarge11",
            "trees/spruce/unfrostedlarge12",
            "trees/spruce/unfrostedlarge13",
            "trees/spruce/unfrostedlarge14",
            "clutter/sbush1",
            "clutter/sbush2",
            "clutter/sbush3",
            "trees/spruce/unfrostedlarge10",
            "trees/spruce/unfrostedlarge19",
            "trees/spruce/unfrostedlarge15",
            "trees/spruce/unfrostedlarge16",
            "trees/spruce/unfrostedlarge17",
            "trees/spruce/unfrostedlarge18",
            "structures/oruins1",
            "trees/mixed/honey20",
            "structures/oruins2",
            "trees/sakura/mlarge11",
            "trees/sakura/mlarge10",
            "structures/oruins3",
            "clutter/icespiresmol2",
            "trees/acacia/savannaS3",
            "clutter/icespiresmol1",
            "trees/acacia/savannaS2",
            "trees/acacia/savannaS1",
            "clutter/icespiresmol3",
            "jigsaw/village-bits/lanterns-ns-1",
            "structures/presentmediumblue17",
            "trees/oak/arid4",
            "trees/oak/dead1",
            "structures/tentacledarkwood1",
            "trees/oak/arid5",
            "structures/tentacledarkwood2",
            "trees/oak/arid6",
            "trees/oak/dead3",
            "structures/tentacledarkwood3",
            "trees/oak/arid7",
            "trees/oak/dead2",
            "jigsaw/village-bits/lanterns-ns-2",
            "jigsaw/end_city/base_roof",
            "jigsaw/village-bits/lanterns-ns-3",
            "jigsaw/village-bits/lanterns-ns-4",
            "jigsaw/village-bits/lanterns-ns-5",
            "trees/acacia/savannaS7",
            "trees/acacia/savannaS6",
            "trees/acacia/savannaS5",
            "trees/acacia/savannaS4",
            "trees/oak/arid1",
            "trees/oak/arid2",
            "trees/acacia/savannaS8",
            "trees/oak/arid3",
            "trees/acacia/denmyre10",
            "trees/acacia/denmyre11",
            "trees/acacia/denmyre14",
            "trees/mushroom/froShroom6",
            "trees/acacia/denmyre15",
            "trees/mushroom/froShroom7",
            "trees/acacia/denmyre12",
            "trees/mushroom/froShroom8",
            "trees/acacia/denmyre13",
            "trees/mushroom/froShroom9",
            "trees/acacia/denmyre16",
            "trees/oak/troofedroot9",
            "trees/oak/dead5",
            "trees/oak/dead4",
            "jigsaw/end_city/bridge_piece",
            "trees/oak/dead6",
            "jigsaw/murky_stronghold/fc-sw-1",
            "structures/ship2",
            "jigsaw/murky_stronghold/fc-sw-2",
            "structures/ship1",
            "jigsaw/murky_stronghold/fc-sw-3",
            "jigsaw/murky_stronghold/fc-sw-4",
            "jigsaw/end_city/third_roof",
            "trees/mixed/AmyMed9",
            "trees/mixed/AmyMed7",
            "trees/mixed/AmyMed8",
            "trees/mixed/AmyMed5",
            "trees/mixed/AmyMed6",
            "trees/mixed/AmyMed3",
            "trees/mixed/AmyMed4",
            "trees/mixed/AmyMed1",
            "trees/mixed/AmyMed2",
            "clutter/birchclutt1",
            "clutter/magmaspire3",
            "clutter/magmaspire2",
            "clutter/magmaspire1",
            "clutter/bone1",
            "clutter/bone6",
            "clutter/bone7",
            "clutter/bone4",
            "clutter/bone5",
            "jigsaw/pyramid/py",
            "clutter/bone2",
            "clutter/bone3",
            "structures/BShip3",
            "structures/BShip4",
            "trees/acacia/savannaF9",
            "structures/BShip5",
            "trees/acacia/savannaF8",
            "structures/BShip6",
            "trees/acacia/savannaF7",
            "structures/BShip1",
            "structures/BShip2",
            "jigsaw/underwater_ruin/big_cracked_2",
            "jigsaw/underwater_ruin/big_cracked_3",
            "jigsaw/underwater_ruin/big_cracked_8",
            "structures/presentbluea20",
            "trees/oak/toak10",
            "trees/oak/toak11",
            "jigsaw/underwater_ruin/big_cracked_1",
            "trees/oak/swoak5",
            "clutter/singleicespike5",
            "trees/sproak/generic1",
            "clutter/singleicespike2",
            "trees/sproak/generic3",
            "clutter/singleicespike1",
            "trees/sproak/generic2",
            "clutter/singleicespike4",
            "trees/sproak/generic5",
            "clutter/singleicespike3",
            "trees/sproak/generic4",
            "trees/mixed/tredwoodsmol1",
            "trees/mixed/tredwoodsmol2",
            "trees/mixed/tredwoodsmol3",
            "trees/mixed/tredwoodsmol4",
            "structures/shipupsidedownfronthalfdegraded",
            "trees/mixed/tredwoodsmol5",
            "jigsaw/murky_stronghold/fc-x-7",
            "jigsaw/murky_stronghold/fc-x-8",
            "jigsaw/murky_stronghold/fc-x-5",
            "jigsaw/murky_stronghold/fc-x-6",
            "jigsaw/murky_stronghold/fc-x-3",
            "jigsaw/murky_stronghold/fc-x-4",
            "jigsaw/murky_stronghold/fc-x-1",
            "jigsaw/murky_stronghold/fc-x-2",
            "trees/sproak/generic7",
            "trees/sproak/generic6",
            "trees/sproak/generic9",
            "trees/sproak/generic8",
            "trees/oak/swoak1",
            "structures/swordnp2",
            "trees/oak/swoak2",
            "structures/swordnp1",
            "trees/oak/swoak3",
            "trees/oak/swoak4",
            "trees/oak/thoakgeneric1",
            "trees/sakura/ogabsurd1",
            "trees/sakura/ogabsurd2",
            "trees/oak/thoakgeneric9",
            "trees/darkoak/large-3",
            "trees/oak/thoakgeneric8",
            "trees/oak/thoakgeneric7",
            "trees/oak/thoakgeneric6",
            "trees/oak/thoakgeneric5",
            "trees/oak/thoakgeneric4",
            "clutter/smoleicespike2",
            "trees/oak/thoakgeneric3",
            "clutter/smoleicespike1",
            "trees/oak/thoakgeneric2",
            "clutter/smoleicespike4",
            "clutter/smoleicespike3",
            "structures/shipsidewaysfull",
            "clutter/smoleicespike6",
            "clutter/smoleicespike5",
            "clutter/smoleicespike8",
            "clutter/smoleicespike7",
            "clutter/smoleicespike9",
            "jigsaw/village-bits/logger-x-3",
            "jigsaw/village-bits/logger-x-2",
            "jigsaw/village-bits/logger-x-1",
            "jigsaw/village-bits/logger-x-5",
            "jigsaw/village-bits/logger-x-4",
            "jigsaw/murky_stronghold/fc-nsw-4",
            "jigsaw/murky_stronghold/fc-nsw-3",
            "jigsaw/murky_stronghold/fc-nsw-2",
            "jigsaw/murky_stronghold/fc-nsw-1",
            "trees/sproak/msapling10",
            "trees/oak/lponderosa13",
            "trees/sakura/ogabsurdfallen1",
            "trees/oak/lponderosa12",
            "trees/oak/lponderosa15",
            "trees/oak/lponderosa14",
            "trees/oak/toak4",
            "trees/oak/toak3",
            "trees/oak/toak2",
            "trees/oak/toak1",
            "trees/oak/hoakgeneric5",
            "trees/oak/hoakgeneric4",
            "trees/acacia/18",
            "trees/oak/hoakgeneric3",
            "trees/oak/hoakgeneric2",
            "trees/oak/hoakgeneric1",
            "trees/jungle/denmyre5",
            "trees/jungle/denmyre4",
            "trees/jungle/denmyre7",
            "trees/jungle/denmyre6",
            "jigsaw/murky_stronghold/c-n-4",
            "trees/jungle/denmyre9",
            "jigsaw/murky_stronghold/c-n-3",
            "trees/jungle/denmyre8",
            "jigsaw/fossil/skull_2_coal",
            "jigsaw/murky_stronghold/c-n-2",
            "jigsaw/murky_stronghold/c-n-1",
            "trees/jungle/denmyre1",
            "trees/spruce/levergreen2",
            "trees/spruce/levergreen3",
            "trees/jungle/denmyre3",
            "trees/jungle/denmyre2",
            "trees/spruce/levergreen1",
            "trees/spruce/levergreen6",
            "trees/spruce/levergreen4",
            "trees/spruce/levergreen5",
            "trees/oak/hoakgeneric9",
            "trees/oak/hoakgeneric8",
            "trees/oak/hoakgeneric7",
            "trees/oak/hoakgeneric6",
            "clutter/spruceclutt4",
            "clutter/spruceclutt5",
            "clutter/spruceclutt6",
            "clutter/rock2",
            "clutter/rock1",
            "clutter/spruceclutt1",
            "clutter/rock4",
            "clutter/spruceclutt2",
            "clutter/rock3",
            "clutter/spruceclutt3",
            "trees/mangrove/t2",
            "trees/mangrove/t3",
            "trees/mangrove/t1",
            "trees/mangrove/t4",
            "trees/mangrove/t5",
            "clutter/hive1",
            "trees/mixed/dotree10",
            "clutter/hive2",
            "structures/gall3",
            "trees/acacia/17",
            "structures/gall1",
            "jigsaw/end_city/tower_top",
            "structures/gall2",
            "trees/oak/toak8",
            "trees/oak/toak7",
            "trees/sproak/msapling1",
            "trees/oak/toak6",
            "trees/sproak/msapling2",
            "trees/oak/toak5",
            "trees/sproak/msapling3",
            "jigsaw/pyramid/pyramid-extreme",
            "trees/oak/toak9",
            "trees/sproak/msapling8",
            "trees/sproak/msapling9",
            "jigsaw/mansion/grid",
            "trees/sproak/msapling4",
            "trees/sproak/msapling5",
            "trees/sproak/msapling6",
            "trees/sproak/msapling7",
            "clutter/sshrubb1",
            "clutter/sshrubb2",
            "clutter/sshrubb3",
            "jigsaw/village-bits/hay-ne-5",
            "jigsaw/village-bits/hay-ne-4",
            "jigsaw/village-bits/hay-ne-3",
            "jigsaw/village-bits/hay-ne-2",
            "jigsaw/village-bits/hay-ne-1",
            "trees/birch/largeponderosa9",
            "trees/birch/largeponderosa8",
            "trees/birch/largeponderosa7",
            "trees/birch/largeponderosa6",
            "trees/birch/largeponderosa5",
            "jigsaw/end_city/ship",
            "trees/birch/largeponderosa4",
            "trees/birch/largeponderosa3",
            "trees/birch/largeponderosa2",
            "trees/birch/largeponderosa1",
            "clutter/jungleclutt9",
            "trees/acacia/savannaF2",
            "trees/acacia/savannaF1",
            "structures/shipsidewaysbackhalfdegraded",
            "trees/acacia/savannaF6",
            "trees/acacia/savannaF5",
            "trees/acacia/savannaF4",
            "trees/acacia/savannaF3",
            "structures/landspike2",
            "structures/landspike3",
            "structures/landspike1",
            "jigsaw/fossil/spine_4_coal",
            "structures/giantportal2",
            "structures/giantportal3",
            "jigsaw/underwater_ruin/cracked_1",
            "jigsaw/underwater_ruin/cracked_2",
            "jigsaw/underwater_ruin/cracked_5",
            "jigsaw/underwater_ruin/cracked_6",
            "structures/giantportal1",
            "jigsaw/underwater_ruin/cracked_3",
            "jigsaw/underwater_ruin/cracked_4",
            "jigsaw/underwater_ruin/cracked_7",
            "jigsaw/underwater_ruin/cracked_8",
            "clutter/birchclutt5",
            "clutter/birchclutt4",
            "clutter/birchclutt3",
            "clutter/birchclutt2",
            "clutter/nportstone1",
            "trees/acacia/savannaD3",
            "trees/acacia/savannaD2",
            "trees/oak/lponderosa11",
            "trees/acacia/savannaD1",
            "trees/oak/lponderosa10",
            "trees/bonsai/frolow8",
            "trees/darkoak/smdeadwillow1",
            "structures/woodhand3",
            "trees/bonsai/frolow9",
            "trees/bonsai/frolow6",
            "trees/bonsai/frolow7",
            "trees/darkoak/smdeadwillow2",
            "trees/oak/antioch1",
            "trees/bonsai/frolow4",
            "trees/bonsai/frolow5",
            "trees/bonsai/frolow2",
            "trees/bonsai/frolow3",
            "trees/jungle/spire7",
            "clutter/junglestone2",
            "trees/bonsai/frolow1",
            "structures/woodhand2",
            "structures/woodhand1",
            "trees/jungle/spire1",
            "trees/jungle/spire2",
            "trees/jungle/spire5",
            "trees/jungle/spire6",
            "trees/jungle/spire3",
            "trees/jungle/spire4",
            "trees/oak/antioch4",
            "trees/oak/antioch5",
            "trees/oak/antioch2",
            "trees/oak/antioch3",
            "trees/oak/antioch8",
            "trees/oak/antioch9",
            "trees/oak/antioch6",
            "trees/oak/antioch7",
            "structures/crystal9",
            "structures/crystal8",
            "structures/crystal7",
            "trees/mixed/sredwood4",
            "trees/mixed/sredwood3",
            "trees/mixed/sredwood2",
            "trees/mixed/sredwood1",
            "trees/mushroom/warped5",
            "trees/mushroom/warped4",
            "trees/mushroom/warped6",
            "trees/mushroom/warped1",
            "trees/mushroom/warped3",
            "trees/mushroom/warped2",
            "clutter/junglestone1",
            "structures/crystal2",
            "structures/crystal1",
            "structures/crystal6",
            "structures/crystal5",
            "structures/crystal4",
            "structures/crystal3",
            "clutter/jungleclutt8",
            "clutter/jungleclutt7",
            "clutter/jungleclutt6",
            "clutter/jungleclutt5",
            "clutter/jungleclutt4",
            "clutter/jungleclutt3",
            "clutter/jungleclutt2",
            "clutter/jungleclutt1",
            "jigsaw/pillager_outpost/watchtower",
            "structures/ruins-greek-temple",
            "trees/spruce/unfrostedsmol1",
            "trees/spruce/unfrostedsmol4",
            "trees/spruce/unfrostedsmol5",
            "trees/spruce/unfrostedsmol2",
            "trees/spruce/unfrostedsmol3",
            "trees/mixed/AmyNormal2",
            "trees/spruce/unfrostedsmol8",
            "trees/mixed/AmyNormal3",
            "trees/spruce/unfrostedsmol9",
            "trees/mixed/AmyNormal4",
            "trees/spruce/unfrostedsmol6",
            "trees/mixed/AmyNormal5",
            "trees/spruce/unfrostedsmol7",
            "trees/mixed/AmyNormal1",
            "structures/presentsupermassiveyellow1",
            "trees/mixed/AmyNormal6",
            "trees/mixed/AmyNormal7",
            "trees/mixed/AmyNormal8",
            "trees/mixed/AmyNormal9",
            "trees/jungle/palm11",
            "trees/mushroom/greygeneric3",
            "trees/jungle/palm12",
            "trees/mushroom/greygeneric4",
            "trees/mushroom/greygeneric5",
            "trees/jungle/palm10",
            "trees/mushroom/greygeneric6",
            "trees/mushroom/greygeneric7",
            "trees/mushroom/greygeneric8",
            "trees/jungle/palm13",
            "trees/mushroom/greygeneric1",
            "trees/mushroom/greygeneric2",
            "jigsaw/pillager_outpost/base_plate",
            "trees/sakura/smtaint1",
            "trees/mixed/purpletourmalinemed1",
            "trees/sakura/smtaint2",
            "trees/mixed/purpletourmalinemed9",
            "trees/mixed/purpletourmalinemed8",
            "trees/mixed/purpletourmalinemed7",
            "trees/mixed/purpletourmalinemed6",
            "trees/mixed/purpletourmalinemed5",
            "clutter/oaklog3",
            "trees/mixed/purpletourmalinemed4",
            "clutter/oaklog2",
            "trees/mixed/purpletourmalinemed3",
            "clutter/oaklog1",
            "trees/mixed/purpletourmalinemed2",
            "structures/tentaclefire8",
            "structures/tentaclefire7",
            "trees/mixed/elderredwood10",
            "clutter/icecluster1",
            "clutter/icecluster2",
            "clutter/icecluster3",
            "clutter/icecluster4",
            "trees/mushroom/lumo4",
            "trees/oak/smoak17",
            "trees/mushroom/lumo5",
            "trees/oak/smoak16",
            "trees/mushroom/lumo6",
            "trees/oak/smoak19",
            "trees/mushroom/lumo7",
            "trees/oak/smoak18",
            "trees/oak/smoak13",
            "trees/mushroom/lumo1",
            "trees/oak/smoak12",
            "trees/mushroom/lumo2",
            "trees/oak/smoak15",
            "trees/mushroom/lumo3",
            "trees/oak/smoak14",
            "clutter/oakclutt4",
            "trees/birch/smolponderosa10",
            "clutter/oakclutt3",
            "trees/birch/smolponderosa11",
            "clutter/oakclutt2",
            "trees/oak/smoak11",
            "clutter/oakclutt1",
            "trees/oak/smoak10",
            "clutter/cobblespike",
            "trees/birch/smolponderosa14",
            "trees/mushroom/lumo8",
            "trees/birch/smolponderosa15",
            "trees/mushroom/lumo9",
            "trees/birch/smolponderosa12",
            "clutter/oakclutt5",
            "trees/birch/smolponderosa13",
            "clutter/icecluster5",
            "clutter/icecluster6",
            "clutter/icecluster7",
            "clutter/icecluster8",
            "clutter/icecluster9",
            "clutter/oakdenclutt2",
            "clutter/oakdenclutt3",
            "clutter/oakdenclutt4",
            "clutter/oakdenclutt5",
            "clutter/oakdenclutt6",
            "clutter/oakdenclutt7",
            "clutter/oakdenclutt8",
            "clutter/oakdenclutt9",
            "trees/mixed/medbleedingserralita10",
            "trees/oak/smoak20",
            "trees/oak/smoak21",
            "jigsaw/pyramid/pyramid",
            "clutter/oakdenclutt1",
            "structures/shipsidewaysbackhalf",
            "trees/spruce/omni1",
            "structures/presentsupermassiveblue11",
            "trees/oak/foakm4",
            "trees/oak/foakm3",
            "trees/oak/foakm2",
            "trees/mixed/smoakog160",
            "trees/oak/foakm1",
            "jigsaw/village-bits/lanterns-nes-1",
            "trees/jungle/vgeneric6",
            "jigsaw/village-bits/lanterns-nes-2",
            "trees/jungle/vgeneric5",
            "trees/jungle/vgeneric8",
            "trees/jungle/vgeneric7",
            "jigsaw/village-bits/lanterns-nes-5",
            "trees/jungle/vgeneric2",
            "trees/jungle/vgeneric1",
            "jigsaw/village-bits/lanterns-nes-3",
            "trees/jungle/vgeneric4",
            "jigsaw/village-bits/lanterns-nes-4",
            "trees/jungle/vgeneric3",
            "jigsaw/village-bits/logger-e-2",
            "structures/presentsupermassivered3",
            "jigsaw/village-bits/logger-e-1",
            "trees/mixed/redrecluse9",
            "jigsaw/village-bits/logger-e-5",
            "trees/mixed/redrecluse8",
            "jigsaw/village-bits/logger-e-4",
            "jigsaw/village-bits/logger-e-3",
            "trees/jungle/vgeneric9",
            "structures/shipupsidedownbackhalfdegraded",
            "trees/mixed/redrecluse1",
            "trees/mixed/redrecluse3",
            "trees/mixed/redrecluse2",
            "clutter/jungleclutt10",
            "jigsaw/pillager_outpost/feature_plate",
            "trees/mixed/redrecluse5",
            "clutter/jungleclutt11",
            "trees/mixed/redrecluse4",
            "clutter/jungleclutt12",
            "trees/mixed/redrecluse7",
            "clutter/jungleclutt13",
            "trees/mixed/redrecluse6",
            "jigsaw/end_city/third_floor_2",
            "jigsaw/end_city/third_floor_1",
            "structures/brokmill1",
            "trees/mixed/smoakog1",
            "clutter/twoicespike2",
            "clutter/twoicespike1",
            "clutter/twoicespike4",
            "clutter/twoicespike3",
            "structures/amethyst2",
            "structures/amethyst3",
            "structures/amethyst1",
            "structures/amethyst6",
            "structures/amethyst4",
            "structures/amethyst5",
            "jigsaw/murky_stronghold/f-ns-3",
            "jigsaw/murky_stronghold/f-ns-4",
            "jigsaw/murky_stronghold/f-ns-1",
            "jigsaw/murky_stronghold/f-ns-2",
            "structures/mlandstone5",
            "structures/mlandstone4",
            "structures/mlandstone1",
            "structures/mlandstone3",
            "structures/mlandstone2",
            "trees/spruce/lfrostgeneric10",
            "trees/spruce/lfrostgeneric11",
            "trees/spruce/lfrostgeneric12",
            "trees/spruce/lfrostgeneric13",
            "trees/spruce/lfrostgeneric14",
            "trees/spruce/lfrostgeneric15",
            "trees/spruce/aridpine5",
            "trees/spruce/lfrostgeneric16",
            "trees/spruce/aridpine4",
            "trees/spruce/lfrostgeneric17",
            "trees/spruce/aridpine3",
            "trees/spruce/lfrostgeneric18",
            "trees/spruce/aridpine2",
            "trees/spruce/lfrostgeneric19",
            "trees/spruce/aridpine1",
            "jigsaw/mansion/mansion_roof",
            "structures/snowulder",
            "trees/spruce/lfrostgeneric20",
            "trees/spruce/lfrostgeneric21",
            "trees/spruce/lfrostgeneric22",
            "trees/spruce/lfrostgeneric23",
            "trees/spruce/lfrostgeneric24",
            "trees/spruce/lfrostgeneric25",
            "trees/spruce/lfrostgeneric26",
            "trees/mixed/redrecluse10",
            "clutter/oakdenclutt10",
            "clutter/statue-villager-hell",
            "jigsaw/village-bits/hay-ns-5",
            "jigsaw/village-bits/hay-ns-4",
            "jigsaw/village-bits/hay-ns-3",
            "jigsaw/village-bits/hay-ns-2",
            "jigsaw/village-bits/hay-ns-1",
            "structures/swordnpstr2",
            "structures/swordnpstr1",
            "clutter/stoneboulder8",
            "clutter/stoneboulder9",
            "clutter/stoneboulder6",
            "clutter/stoneboulder7",
            "trees/mangrove/tree1",
            "trees/mangrove/tree2",
            "clutter/stoneboulder1",
            "trees/mangrove/tree3",
            "trees/mangrove/tree4",
            "trees/mangrove/tree5",
            "clutter/stoneboulder4",
            "trees/mangrove/tree6",
            "clutter/stoneboulder5",
            "trees/mangrove/tree7",
            "clutter/stoneboulder2",
            "trees/mangrove/tree8",
            "clutter/stoneboulder3",
            "trees/mangrove/tree9",
            "trees/oak/croak19",
            "trees/oak/croak6",
            "trees/oak/croak7",
            "trees/oak/croak17",
            "trees/oak/croak8",
            "trees/oak/croak18",
            "trees/oak/croak9",
            "trees/oak/croak2",
            "trees/oak/croak3",
            "trees/oak/croak4",
            "trees/oak/croak5",
            "trees/oak/denmyre12",
            "trees/oak/denmyre11",
            "trees/oak/denmyre14",
            "trees/oak/croak1",
            "trees/oak/denmyre13",
            "clutter/coralby3",
            "clutter/coralby2",
            "trees/oak/denmyre10",
            "clutter/coralby4",
            "jigsaw/end_city/second_roof",
            "trees/mushroom/blackgeneric8",
            "trees/mushroom/blackgeneric7",
            "trees/mushroom/blackgeneric6",
            "trees/mushroom/blackgeneric5",
            "trees/mushroom/blackgeneric9",
            "jigsaw/mansion/mansion",
            "clutter/coralby1",
            "trees/oak/denmyre16",
            "trees/oak/denmyre15",
            "trees/spruce/lfrostgeneric8",
            "trees/spruce/lfrostgeneric9",
            "trees/spruce/lfrostgeneric4",
            "trees/spruce/lfrostgeneric5",
            "trees/spruce/lfrostgeneric6",
            "trees/birch/smallgeneric9",
            "trees/spruce/lfrostgeneric7",
            "trees/mixed/elderredwood7",
            "trees/mixed/elderredwood6",
            "trees/spruce/lfrostgeneric1",
            "structures/shipsidewaysfronthalfdegraded",
            "trees/mixed/elderredwood9",
            "trees/spruce/lfrostgeneric2",
            "trees/mixed/elderredwood8",
            "trees/spruce/lfrostgeneric3",
            "trees/mixed/elderredwood3",
            "trees/mixed/elderredwood2",
            "trees/mixed/elderredwood5",
            "trees/mixed/elderredwood4",
            "trees/mixed/elderredwood1",
            "trees/birch/smallgeneric8",
            "trees/birch/smallgeneric7",
            "trees/birch/smallgeneric6",
            "trees/birch/smallgeneric5",
            "trees/birch/smallgeneric4",
            "trees/birch/smallgeneric3",
            "trees/birch/smallgeneric2",
            "trees/birch/smallgeneric1",
            "trees/mushroom/browngeneric1",
            "trees/birch/medponderosa9",
            "trees/mushroom/blackgeneric4",
            "trees/oak/dadwood5",
            "trees/birch/medponderosa8",
            "trees/mushroom/blackgeneric3",
            "trees/mushroom/browngeneric2",
            "trees/oak/dadwood4",
            "trees/mushroom/blackgeneric2",
            "trees/mushroom/blackgeneric1",
            "trees/oak/dadwood6",
            "trees/jungle/lgeneric2",
            "trees/jungle/lgeneric1",
            "trees/jungle/lgeneric4",
            "trees/jungle/lgeneric3",
            "trees/jungle/lgeneric6",
            "trees/jungle/lgeneric5",
            "trees/jungle/lgeneric8",
            "trees/jungle/lgeneric7",
            "trees/jungle/lgeneric9",
            "trees/birch/medponderosa5",
            "trees/oak/dadwood1",
            "trees/birch/medponderosa4",
            "trees/birch/medponderosa7",
            "trees/oak/dadwood3",
            "trees/birch/medponderosa6",
            "trees/oak/dadwood2",
            "trees/birch/medponderosa1",
            "trees/birch/medponderosa3",
            "trees/birch/medponderosa2",
            "trees/mushroom/purplegeneric1",
            "trees/mixed/infestedpalm4",
            "trees/mushroom/purplegeneric5",
            "trees/mixed/infestedpalm5",
            "trees/mushroom/purplegeneric4",
            "trees/mushroom/purplegeneric3",
            "trees/mushroom/purplegeneric2",
            "trees/acacia/denmyre3",
            "trees/mushroom/purplegeneric9",
            "trees/acacia/denmyre4",
            "trees/mushroom/purplegeneric8",
            "trees/acacia/denmyre5",
            "trees/mushroom/purplegeneric7",
            "trees/acacia/denmyre6",
            "trees/birch/largegeneric9",
            "trees/mushroom/purplegeneric6",
            "trees/acacia/denmyre7",
            "trees/birch/largegeneric8",
            "trees/acacia/denmyre8",
            "trees/birch/largegeneric7",
            "trees/acacia/denmyre9",
            "trees/birch/largegeneric6",
            "trees/birch/largegeneric5",
            "structures/presentsupermassiveorangea8",
            "jigsaw/fossil/spine_1",
            "jigsaw/murky_stronghold/c-nsw-1",
            "jigsaw/fossil/spine_2",
            "jigsaw/murky_stronghold/c-nsw-2",
            "structures/shiprightsideupfull",
            "jigsaw/fossil/spine_3",
            "jigsaw/murky_stronghold/c-nsw-3",
            "jigsaw/fossil/spine_4",
            "jigsaw/murky_stronghold/c-nsw-4",
            "trees/mixed/infestedpalm1",
            "trees/mixed/infestedpalm2",
            "trees/mixed/infestedpalm3",
            "jigsaw/village-bits/lanterns-e-4",
            "jigsaw/village-bits/lanterns-e-5",
            "jigsaw/village-bits/lanterns-e-2",
            "jigsaw/village-bits/lanterns-e-3",
            "jigsaw/village-bits/lanterns-e-1",
            "structures/shiprightsideupfronthalfdegraded",
            "jigsaw/village-bits/hay-nes-2",
            "trees/birch/largegeneric4",
            "jigsaw/village-bits/hay-nes-3",
            "trees/birch/largegeneric3",
            "trees/birch/largegeneric2",
            "jigsaw/village-bits/hay-nes-1",
            "trees/birch/largegeneric1",
            "jigsaw/village-bits/hay-nes-4",
            "trees/acacia/denmyre1",
            "jigsaw/village-bits/hay-nes-5",
            "trees/acacia/denmyre2",
            "jigsaw/village-bits/bland-ns-1",
            "jigsaw/village-bits/bland-ns-3",
            "jigsaw/village-bits/bland-ns-2",
            "jigsaw/village-bits/bland-ns-5",
            "jigsaw/village-bits/bland-ns-4",
            "trees/darkoak/denmyre12",
            "trees/darkoak/denmyre11",
            "trees/darkoak/denmyre10",
            "trees/darkoak/denmyre16",
            "trees/oak/truegeneric4",
            "trees/darkoak/denmyre15",
            "trees/oak/truegeneric3",
            "trees/darkoak/denmyre14",
            "trees/mixed/dead1",
            "trees/oak/truegeneric2",
            "trees/spruce/sup-pine-11",
            "trees/darkoak/denmyre13",
            "trees/oak/truegeneric1",
            "trees/spruce/sup-pine-10",
            "trees/oak/truegeneric8",
            "trees/spruce/sup-pine-13",
            "jigsaw/house-purjap/PurJap10",
            "trees/oak/truegeneric7",
            "trees/spruce/sup-pine-12",
            "trees/oak/truegeneric6",
            "trees/oak/truegeneric5",
            "trees/birch/largegeneric14",
            "trees/jungle/largegeneric4",
            "trees/birch/largegeneric15",
            "trees/jungle/largegeneric5",
            "trees/birch/largegeneric16",
            "trees/birch/largegeneric17",
            "trees/birch/largegeneric18",
            "trees/birch/largegeneric19",
            "trees/birch/largegeneric10",
            "trees/oak/smwiltedoak1",
            "trees/birch/largegeneric11",
            "trees/birch/largegeneric12",
            "trees/birch/largegeneric13",
            "void/void",
            "structures/presentmediumreda16",
            "trees/jungle/largegeneric1",
            "trees/jungle/largegeneric2",
            "trees/jungle/largegeneric3",
            "jigsaw/fossil/spine_2_coal",
            "trees/birch/largegeneric20",
            "jigsaw/murky_stronghold/f-nsw-4",
            "jigsaw/murky_stronghold/f-nsw-3",
            "jigsaw/murky_stronghold/f-nsw-2",
            "jigsaw/murky_stronghold/f-nsw-1",
            "clutter/rshrub1",
            "clutter/rshrub2",
            "trees/mixed/tredwood8",
            "trees/mixed/tredwood9",
            "trees/oak/thoakgeneric10",
            "clutter/stone2",
            "clutter/stone1",
            "trees/mixed/tredwood1",
            "trees/mixed/tredwood2",
            "trees/mixed/tredwood3",
            "clutter/stone6",
            "trees/mixed/tredwood4",
            "clutter/stone5",
            "trees/mixed/tredwood5",
            "clutter/hay2",
            "clutter/stone4",
            "trees/mixed/tredwood6",
            "clutter/hay3",
            "clutter/stone3",
            "trees/mixed/tredwood7",
            "clutter/hay1",
            "clutter/stone7",
            "structures/landstone2",
            "structures/landstone1",
            "structures/landstone4",
            "structures/landstone3",
            "structures/landstone5",
            "trees/darkoak/smwillow4",
            "trees/darkoak/smwillow2",
            "trees/darkoak/smwillow3",
            "trees/mushroom/fantasygenericred2",
            "trees/darkoak/smwillow1",
            "trees/mushroom/fantasygenericred1",
            "trees/mushroom/fantasygenericred4",
            "trees/mushroom/fantasygenericred3",
            "trees/mixed/tourmalinelarge2",
            "trees/mixed/tourmalinelarge1",
            "trees/mixed/tourmalinelarge4",
            "trees/mixed/tourmalinelarge3",
            "trees/mixed/tourmalinelarge6",
            "trees/mixed/tourmalinelarge5",
            "trees/mixed/tourmalinelarge8",
            "trees/mixed/tourmalinelarge7",
            "trees/mixed/tourmalinelarge9",
            "clutter/savclutt1",
            "clutter/savclutt3",
            "clutter/savclutt2",
            "clutter/savclutt5",
            "clutter/savclutt4",
            "clutter/savclutt7",
            "clutter/savclutt6",
            "clutter/savclutt8",
            "clutter/icespiremed3",
            "structures/swreck1",
            "clutter/icespiremed2",
            "jigsaw/village-bits/logger-nes-1",
            "clutter/substat1",
            "jigsaw/village-bits/logger-nes-2",
            "jigsaw/village-bits/logger-nes-3",
            "clutter/substat3",
            "clutter/substat2",
            "clutter/substat5",
            "clutter/substat4",
            "clutter/icespiremed1",
            "jigsaw/underwater_ruin/big_brick_8",
            "jigsaw/structure/desert-base",
            "jigsaw/underwater_ruin/big_brick_3",
            "jigsaw/underwater_ruin/big_brick_2",
            "jigsaw/underwater_ruin/big_brick_1",
            "trees/oak/smoak3",
            "trees/oak/smoak4",
            "trees/oak/smoak5",
            "trees/oak/smoak6",
            "clutter/literalgarbage4",
            "trees/oak/smoak1",
            "trees/oak/smoak2",
            "clutter/literalgarbage2",
            "trees/birch/arid6",
            "clutter/literalgarbage3",
            "trees/birch/arid5",
            "clutter/literalgarbage1",
            "trees/birch/arid7",
            "trees/oak/smoak7",
            "clutter/skull1",
            "trees/oak/smoak8",
            "trees/oak/smoak9",
            "jigsaw/village-bits/stonehome-esw-1",
            "jigsaw/village-bits/stonehome-esw-2",
            "trees/oak/truegeneric9",
            "jigsaw/village-bits/logger-nes-4",
            "trees/birch/arid2",
            "jigsaw/village-bits/logger-nes-5",
            "trees/birch/arid1",
            "jigsaw/village-bits/stonehome-esw-3",
            "trees/birch/arid4",
            "jigsaw/village-bits/stonehome-esw-4",
            "trees/birch/arid3",
            "structures/shipupsidedownfronthalf"
        ]},
        "obj-com-volmit-iris-engine-object-irisobjectmarker": {"anyOf": [
            {
                "description": "Find blocks to mark",
                "type": "object",
                "properties": {
                    "mark": {
                        "type": "array",
                        "minItems": 1,
                        "items": {"$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisblockdata"},
                        "description": "mark\nFind block types to mark\n   \nList of BlockDatas (Objects)\n\n    \n* Default Value is an empty list\n* At least one entry must be defined, or just remove this list."
                    },
                    "maximumMarkers": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 16,
                        "description": "maximumMarkers\nThe maximum amount of markers to place. Use these sparingly!\n   \nInteger\n\n    \n* Default Value is 8\n* Minimum allowed is 1\n* Maximum allowed is 16"
                    },
                    "exact": {
                        "type": "boolean",
                        "description": "exact\nIf true, markers will only be placed if the block matches the mark list perfectly.\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "marker": {
                        "type": "string",
                        "$ref": "#/definitions/erzmarkers",
                        "description": "marker\nThe marker to add\n   \nIris Marker\n\nMust be a valid markers (use ctrl+space for auto complete!)"
                    }
                }
            },
            {"type": "string"}
        ]},
        "erzloot": {"enum": [
            "frozen-clutter",
            "ocean-clutter",
            "swamp-food",
            "temperate-food",
            "amenhotep",
            "beach-clutter",
            "snow-clutter",
            "tropical-treasure",
            "global-treasure",
            "mushroom-food",
            "cave-clutter",
            "forest-food",
            "mansion",
            "cold-treasure",
            "global-tools",
            "cactus-clutter",
            "tropical-dungeon",
            "stronghold/generic",
            "stronghold/maze",
            "frozen-food",
            "stronghold/library",
            "cold-food",
            "swamp-clutter",
            "hot-food",
            "mushroom-clutter",
            "global-clutter",
            "hot-treasure",
            "temperate-clutter",
            "tropical-food",
            "ancient_city"
        ]},
        "obj-com-volmit-iris-engine-object-iristree": {"anyOf": [
            {
                "description": "Tree replace options for this object placer",
                "type": "object",
                "properties": {
                    "treeTypes": {
                        "type": "array",
                        "minItems": 1,
                        "items": {"$ref": "#/definitions/enum-org-bukkit-treetype"},
                        "description": "treeTypes\nThe types of trees overwritten by this object\n   \nList of TreeTypes\n\n* At least one entry must be defined, or just remove this list.\nMust be a valid TreeType (use ctrl+space for auto complete!)"
                    },
                    "anyTree": {
                        "type": "boolean",
                        "description": "anyTree\nIf enabled, overrides any TreeType\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "sizes": {
                        "type": "array",
                        "minItems": 1,
                        "items": {"$ref": "#/definitions/obj-com-volmit-iris-engine-object-iristreesize"},
                        "description": "sizes\nThe size of the square of saplings this applies to (2 means a 2 * 2 sapling area)\n   \nList of TreeSizes (Objects)\n\n    \n* Default Value is an empty list\n* At least one entry must be defined, or just remove this list."
                    },
                    "anySize": {
                        "type": "boolean",
                        "description": "anySize\nIf enabled, overrides trees of any size\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
                    }
                }
            },
            {"type": "string"}
        ]},
        "obj-com-volmit-iris-engine-object-irisobjectplacement": {"anyOf": [
            {
                "description": "Represents an iris object placer. It places objects.",
                "type": "object",
                "properties": {
                    "place": {
                        "type": "array",
                        "minItems": 1,
                        "items": {"$ref": "#/definitions/erzobjects"},
                        "description": "place\nList of objects to place\n   \nList<Object>\n\n    \n* Default Value is an empty list\n* At least one entry must be defined, or just remove this list.\nMust be a valid Object (use ctrl+space for auto complete!)"
                    },
                    "rotation": {
                        "anyOf": [
                            {
                                "!required": false,
                                "type": "object",
                                "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisobjectrotation",
                                "description": "rotation\nRotate this objects placement\n   \nObjectRotation (Object)\nConfigures rotation for iris\n    \nYou can instead specify \"snippet/object-rotator/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            },
                            {
                                "type": "string",
                                "$ref": "#/definitions/enum-snippet-object-rotator",
                                "description": "rotation\nRotate this objects placement\n   \nObjectRotation (Object)\nConfigures rotation for iris\n    \nYou can instead specify \"snippet/object-rotator/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            }
                        ],
                        "description": "rotation\nRotate this objects placement\n   \nObjectRotation (Object)\nConfigures rotation for iris\n    \nYou can instead specify \"snippet/object-rotator/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "clamp": {
                        "anyOf": [
                            {
                                "!required": false,
                                "type": "object",
                                "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisobjectlimit",
                                "description": "clamp\nLimit the max height or min height of placement.\n   \nObjectLimit (Object)\nTranslate objects\n    \nYou can instead specify \"snippet/object-limit/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            },
                            {
                                "type": "string",
                                "$ref": "#/definitions/enum-snippet-object-limit",
                                "description": "clamp\nLimit the max height or min height of placement.\n   \nObjectLimit (Object)\nTranslate objects\n    \nYou can instead specify \"snippet/object-limit/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            }
                        ],
                        "description": "clamp\nLimit the max height or min height of placement.\n   \nObjectLimit (Object)\nTranslate objects\n    \nYou can instead specify \"snippet/object-limit/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "snow": {
                        "type": "number",
                        "minimum": 0,
                        "maximum": 1,
                        "description": "snow\nThe maximum layer level of a snow filter overtop of this placement. Set to 0 to disable. Max of 1.\n   \nNumber\n\n    \n* Default Value is 0.0\n* Minimum allowed is 0.0\n* Maximum allowed is 1.0"
                    },
                    "chance": {
                        "type": "number",
                        "minimum": 0,
                        "maximum": 1,
                        "description": "chance\nThe chance for this to place in a chunk. If you need multiple per chunk, set this to 1 and use density.\n   \nNumber\n\n    \n* Default Value is 1.0\n* Minimum allowed is 0.0\n* Maximum allowed is 1.0"
                    },
                    "density": {
                        "type": "integer",
                        "minimum": 1,
                        "description": "density\nIf the chance check passes, place this many in a single chunk\n   \nInteger\n\n    \n* Default Value is 1\n* Minimum allowed is 1"
                    },
                    "densityStyle": {
                        "anyOf": [
                            {
                                "!required": false,
                                "type": "object",
                                "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisstyledrange",
                                "description": "densityStyle\nIf the chance check passes, and you specify this, it picks a number in the range based on noise, and 'density' is ignored.\n   \nStyledRange (Object)\nRepresents a range styled with a custom generator\n    \nYou can instead specify \"snippet/style-range/some-name.json\" to use a snippet file instead of specifying it here."
                            },
                            {
                                "type": "string",
                                "$ref": "#/definitions/enum-snippet-style-range",
                                "description": "densityStyle\nIf the chance check passes, and you specify this, it picks a number in the range based on noise, and 'density' is ignored.\n   \nStyledRange (Object)\nRepresents a range styled with a custom generator\n    \nYou can instead specify \"snippet/style-range/some-name.json\" to use a snippet file instead of specifying it here."
                            }
                        ],
                        "description": "densityStyle\nIf the chance check passes, and you specify this, it picks a number in the range based on noise, and 'density' is ignored.\n   \nStyledRange (Object)\nRepresents a range styled with a custom generator\n    \nYou can instead specify \"snippet/style-range/some-name.json\" to use a snippet file instead of specifying it here."
                    },
                    "stiltSettings": {
                        "anyOf": [
                            {
                                "!required": false,
                                "type": "object",
                                "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisstiltsettings",
                                "description": "stiltSettings\nWhen stilting is enabled, this object will define various properties related to it.\n   \nStiltSettings (Object)\nDefines stilting behaviour.\n    \nYou can instead specify \"snippet/stilt-settings/some-name.json\" to use a snippet file instead of specifying it here."
                            },
                            {
                                "type": "string",
                                "$ref": "#/definitions/enum-snippet-stilt-settings",
                                "description": "stiltSettings\nWhen stilting is enabled, this object will define various properties related to it.\n   \nStiltSettings (Object)\nDefines stilting behaviour.\n    \nYou can instead specify \"snippet/stilt-settings/some-name.json\" to use a snippet file instead of specifying it here."
                            }
                        ],
                        "description": "stiltSettings\nWhen stilting is enabled, this object will define various properties related to it.\n   \nStiltSettings (Object)\nDefines stilting behaviour.\n    \nYou can instead specify \"snippet/stilt-settings/some-name.json\" to use a snippet file instead of specifying it here."
                    },
                    "boreExtendMaxY": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 64,
                        "description": "boreExtendMaxY\nWhen bore is enabled, expand max-y of the cuboid it removes\n   \nInteger\n\n    \n* Default Value is 0\n* Minimum allowed is 0\n* Maximum allowed is 64"
                    },
                    "markers": {
                        "type": "array",
                        "minItems": 1,
                        "items": {"$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisobjectmarker"},
                        "description": "markers\nAdd markers to blocks in this object\n   \nList of ObjectMarkers (Objects)\n\n    \n* Default Value is an empty list\n* At least one entry must be defined, or just remove this list."
                    },
                    "boreExtendMinY": {
                        "type": "integer",
                        "minimum": -1,
                        "maximum": 64,
                        "description": "boreExtendMinY\nWhen bore is enabled, lower min-y of the cuboid it removes\n   \nInteger\n\n    \n* Default Value is 0\n* Minimum allowed is -1\n* Maximum allowed is 64"
                    },
                    "underwater": {
                        "type": "boolean",
                        "description": "underwater\nIf set to true, objects will place on the terrain height, ignoring the water surface.\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "carvingSupport": {
                        "type": "string",
                        "$ref": "#/definitions/oneof-enum-com-volmit-iris-engine-object-carvingmode",
                        "description": "carvingSupport\nIf set to true, objects will place in carvings (such as underground) or under an overhang.\n   \nCarvingMode\nDefines if an object is allowed to place in carvings, surfaces or both.\n    \n* Default Value is a default object (create this object to see default properties)\nMust be a valid CarvingMode (use ctrl+space for auto complete!)"
                    },
                    "heightmap": {
                        "anyOf": [
                            {
                                "!required": false,
                                "type": "object",
                                "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisnoisegenerator",
                                "description": "heightmap\nIf this is defined, this object wont place on the terrain heightmap, but instead on this virtual heightmap\n   \nNoiseGenerator (Object)\nA noise generator\n    \nYou can instead specify \"snippet/generator/some-name.json\" to use a snippet file instead of specifying it here."
                            },
                            {
                                "type": "string",
                                "$ref": "#/definitions/enum-snippet-generator",
                                "description": "heightmap\nIf this is defined, this object wont place on the terrain heightmap, but instead on this virtual heightmap\n   \nNoiseGenerator (Object)\nA noise generator\n    \nYou can instead specify \"snippet/generator/some-name.json\" to use a snippet file instead of specifying it here."
                            }
                        ],
                        "description": "heightmap\nIf this is defined, this object wont place on the terrain heightmap, but instead on this virtual heightmap\n   \nNoiseGenerator (Object)\nA noise generator\n    \nYou can instead specify \"snippet/generator/some-name.json\" to use a snippet file instead of specifying it here."
                    },
                    "smartBore": {
                        "type": "boolean",
                        "description": "smartBore\nIf set to true, Iris will try to fill the insides of 'rooms' and 'pockets' where air should fit based off of raytrace checks. This prevents a village house placing in an area where a tree already exists, and instead replaces the parts of the tree where the interior of the structure is. \n\nThis operation does not affect warmed-up generation speed however it does slow down loading objects.\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "waterloggable": {
                        "type": "boolean",
                        "description": "waterloggable\nIf set to true, Blocks placed underwater that could be waterlogged are waterlogged.\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "onwater": {
                        "type": "boolean",
                        "description": "onwater\nIf set to true, objects will place on the fluid height level Such as boats.\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "meld": {
                        "type": "boolean",
                        "description": "meld\nIf set to true, this object will only place parts of itself where blocks already exist. Warning: Melding is very performance intensive!\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "bottom": {
                        "type": "boolean",
                        "description": "bottom\nIf set to true, this object will place from the ground up instead of height checks when not y locked to the surface. This is not compatable with X and Z axis rotations (it may look off)\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "bore": {
                        "type": "boolean",
                        "description": "bore\nIf set to true, air will be placed before the schematic places.\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "warp": {
                        "anyOf": [
                            {
                                "!required": false,
                                "type": "object",
                                "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisgeneratorstyle",
                                "description": "warp\nUse a generator to warp the field of coordinates. Using simplex for example would make a square placement warp like a flag\n   \nGeneratorStyle (Object)\nA gen style\n    \nYou can instead specify \"snippet/style/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            },
                            {
                                "type": "string",
                                "$ref": "#/definitions/enum-snippet-style",
                                "description": "warp\nUse a generator to warp the field of coordinates. Using simplex for example would make a square placement warp like a flag\n   \nGeneratorStyle (Object)\nA gen style\n    \nYou can instead specify \"snippet/style/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            }
                        ],
                        "description": "warp\nUse a generator to warp the field of coordinates. Using simplex for example would make a square placement warp like a flag\n   \nGeneratorStyle (Object)\nA gen style\n    \nYou can instead specify \"snippet/style/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "translateCenter": {
                        "type": "boolean",
                        "description": "translateCenter\nIf the place mode is set to CENTER_HEIGHT_RIGID and you have an X/Z translation, Turning on translate center will also translate the center height check.\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "mode": {
                        "type": "string",
                        "$ref": "#/definitions/oneof-enum-com-volmit-iris-engine-object-objectplacemode",
                        "description": "mode\nThe placement mode\n   \nObjectPlaceMode\nObject Place modes are useful for positioning objects just right. The default value is CENTER_HEIGHT.\n    \n* Default Value is a default object (create this object to see default properties)\nMust be a valid ObjectPlaceMode (use ctrl+space for auto complete!)"
                    },
                    "edit": {
                        "type": "array",
                        "minItems": 1,
                        "items": {"$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisobjectreplace"},
                        "description": "edit\nFind and replace blocks\n   \nList of ObjectReplaces (Objects)\n\n    \n* Default Value is an empty list\n* At least one entry must be defined, or just remove this list."
                    },
                    "translate": {
                        "anyOf": [
                            {
                                "!required": false,
                                "type": "object",
                                "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisobjecttranslate",
                                "description": "translate\nTranslate this object's placement\n   \nObjectTranslate (Object)\nTranslate objects\n    \nYou can instead specify \"snippet/object-translator/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            },
                            {
                                "type": "string",
                                "$ref": "#/definitions/enum-snippet-object-translator",
                                "description": "translate\nTranslate this object's placement\n   \nObjectTranslate (Object)\nTranslate objects\n    \nYou can instead specify \"snippet/object-translator/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            }
                        ],
                        "description": "translate\nTranslate this object's placement\n   \nObjectTranslate (Object)\nTranslate objects\n    \nYou can instead specify \"snippet/object-translator/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "scale": {
                        "anyOf": [
                            {
                                "!required": false,
                                "type": "object",
                                "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisobjectscale",
                                "description": "scale\nScale Objects\n   \nObjectScale (Object)\nScale objects\n    \nYou can instead specify \"snippet/object-scale/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            },
                            {
                                "type": "string",
                                "$ref": "#/definitions/enum-snippet-object-scale",
                                "description": "scale\nScale Objects\n   \nObjectScale (Object)\nScale objects\n    \nYou can instead specify \"snippet/object-scale/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            }
                        ],
                        "description": "scale\nScale Objects\n   \nObjectScale (Object)\nScale objects\n    \nYou can instead specify \"snippet/object-scale/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "loot": {
                        "type": "array",
                        "minItems": 1,
                        "items": {"$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisobjectloot"},
                        "description": "loot\nThe loot tables to apply to these objects\n   \nList of ObjectLoots (Objects)\n\n    \n* Default Value is an empty list\n* At least one entry must be defined, or just remove this list."
                    },
                    "trees": {
                        "type": "array",
                        "minItems": 1,
                        "items": {"$ref": "#/definitions/obj-com-volmit-iris-engine-object-iristree"},
                        "description": "trees\nThis object / these objects override the following trees when they grow...\n   \nList of Trees (Objects)\n\n    \n* Default Value is an empty list\n* At least one entry must be defined, or just remove this list."
                    }
                }
            },
            {"type": "string"}
        ]},
        "enum-snippet-style": {"enum": []},
        "oneof-enum-com-volmit-iris-engine-object-objectplacemode": {"oneOf": [
            {
                "const": "CENTER_HEIGHT",
                "description": "The default place mode. This mode picks a center point (where the center of the object will be) and takes the height. That height is used for the whole object."
            },
            {
                "const": "MAX_HEIGHT",
                "description": "Samples a lot of points where the object will cover (horizontally) and picks the highest height, that height is then used to place the object. This mode is useful for preventing any part of your object from being buried though it will float off of cliffs."
            },
            {
                "const": "FAST_MAX_HEIGHT",
                "description": "Samples only 4 points where the object will cover (horizontally) and picks the highest height, that height is then used to place the object. This mode is useful for preventing any part of your object from being buried though it will float off of cliffs.\""
            },
            {
                "const": "MIN_HEIGHT",
                "description": "Samples a lot of points where the object will cover (horizontally) and picks the lowest height, that height is then used to place the object. This mode is useful for preventing any part of your object from overhanging a cliff though it gets buried a lot"
            },
            {
                "const": "FAST_MIN_HEIGHT",
                "description": "Samples only 4 points where the object will cover (horizontally) and picks the lowest height, that height is then used to place the object. This mode is useful for preventing any part of your object from overhanging a cliff though it gets buried a lot"
            },
            {
                "const": "STILT",
                "description": "Stilting is MAX_HEIGHT but it repeats the bottom most block of your object until it hits the surface. This is expensive because it has to first sample every height value for each x,z position of your object. Avoid using this unless its structures for performance reasons."
            },
            {
                "const": "FAST_STILT",
                "description": "Just like stilting but very inaccurate. Useful for stilting a lot of objects without too much care on accuracy (you can use the over-stilt value to force stilts under ground further)"
            },
            {
                "const": "MIN_STILT",
                "description": "Stilting is MIN_HEIGHT but it repeats the bottom most block of your object until it hits the surface. This is expensive because it has to first sample every height value for each x,z position of your object. Avoid using this unless its structures for performance reasons."
            },
            {
                "const": "FAST_MIN_STILT",
                "description": "Just like MIN_STILT but very inaccurate. Useful for stilting a lot of objects without too much care on accuracy (you can use the over-stilt value to force stilts under ground further)"
            },
            {
                "const": "CENTER_STILT",
                "description": "Stilting is CENTER_HEIGHT but it repeats the bottom most block of your object until it hits the surface. This is expensive because it has to first sample every height value for each x,z position of your object. Avoid using this unless its structures for performance reasons."
            },
            {
                "const": "PAINT",
                "description": "Samples the height of the terrain at every x,z position of your object and pushes it down to the surface. It's pretty much like a melt function over the terrain."
            }
        ]},
        "obj-com-volmit-iris-engine-object-irisobjectlimit": {"anyOf": [
            {
                "description": "Translate objects",
                "type": "object",
                "properties": {
                    "minimumHeight": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 1024,
                        "description": "minimumHeight\nThe minimum height for placement (bottom of object)\n   \nInteger\n\n    \n* Default Value is -2048\n* Minimum allowed is 0\n* Maximum allowed is 1024"
                    },
                    "maximumHeight": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 1024,
                        "description": "maximumHeight\nThe maximum height for placement (top of object)\n   \nInteger\n\n    \n* Default Value is 2048\n* Minimum allowed is 0\n* Maximum allowed is 1024"
                    }
                }
            },
            {"type": "string"}
        ]},
        "enum-snippet-object-scale": {"enum": []},
        "obj-com-volmit-iris-engine-object-irisnoisegenerator": {"anyOf": [
            {
                "description": "A noise generator",
                "type": "object",
                "properties": {
                    "zoom": {
                        "type": "number",
                        "minimum": 1.0E-4,
                        "description": "zoom\nThe coordinate input zoom\n   \nNumber\n\n    \n* Default Value is 1.0\n* Minimum allowed is 1.0E-4"
                    },
                    "negative": {
                        "type": "boolean",
                        "description": "negative\nReverse the output. So that noise = -noise + opacity\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "opacity": {
                        "type": "number",
                        "minimum": 0,
                        "maximum": 1,
                        "description": "opacity\nThe output multiplier\n   \nNumber\n\n    \n* Default Value is 1.0\n* Minimum allowed is 0.0\n* Maximum allowed is 1.0"
                    },
                    "offsetX": {
                        "type": "number",
                        "description": "offsetX\nCoordinate offset x\n   \nNumber\n\n    \n* Default Value is 0.0"
                    },
                    "offsetY": {
                        "type": "number",
                        "description": "offsetY\nHeight output offset y. Avoid using with terrain generation.\n   \nNumber\n\n    \n* Default Value is 0.0"
                    },
                    "offsetZ": {
                        "type": "number",
                        "description": "offsetZ\nCoordinate offset z\n   \nNumber\n\n    \n* Default Value is 0.0"
                    },
                    "seed": {
                        "type": "integer",
                        "description": "seed\nThe seed\n   \nInteger\n\n    \n* Default Value is 0"
                    },
                    "parametric": {
                        "type": "boolean",
                        "description": "parametric\nApply a parametric curve on the output\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "bezier": {
                        "type": "boolean",
                        "description": "bezier\nApply a bezier curve on the output\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "sinCentered": {
                        "type": "boolean",
                        "description": "sinCentered\nApply a sin-center curve on the output (0, and 1 = 0 and 0.5 = 1.0 using a sinoid shape.)\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "exponent": {
                        "type": "number",
                        "description": "exponent\nThe exponent noise^EXPONENT\n   \nNumber\n\n    \n* Default Value is 1.0"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "enabled\nEnable / disable. Outputs offsetY if disabled\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "style": {
                        "anyOf": [
                            {
                                "!required": true,
                                "type": "object",
                                "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisgeneratorstyle",
                                "description": "style\nThe Noise Style\n   \nGeneratorStyle (Object)\nA gen style\n    \nYou can instead specify \"snippet/style/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            },
                            {
                                "type": "string",
                                "$ref": "#/definitions/enum-snippet-style",
                                "description": "style\nThe Noise Style\n   \nGeneratorStyle (Object)\nA gen style\n    \nYou can instead specify \"snippet/style/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            }
                        ],
                        "description": "style\nThe Noise Style\n   \nGeneratorStyle (Object)\nA gen style\n    \nYou can instead specify \"snippet/style/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "octaves": {
                        "type": "integer",
                        "minimum": 1,
                        "description": "octaves\nMultiple octaves for multple generators of changing zooms added together\n   \nInteger\n\n    \n* Default Value is 1\n* Minimum allowed is 1"
                    },
                    "fracture": {
                        "type": "array",
                        "minItems": 1,
                        "items": {"$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisnoisegenerator"},
                        "description": "fracture\nApply a child noise generator to fracture the input coordinates of this generator\n   \nList of NoiseGenerators (Objects)\n\n    \n* Default Value is an empty list\n* At least one entry must be defined, or just remove this list."
                    }
                }
            },
            {"type": "string"}
        ]},
        "obj-com-volmit-iris-engine-object-irisobjectloot": {"anyOf": [
            {
                "description": "Represents loot within this object or jigsaw piece",
                "type": "object",
                "properties": {
                    "filter": {
                        "type": "array",
                        "minItems": 1,
                        "items": {"$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisblockdata"},
                        "description": "filter\nThe list of blocks this loot table should apply to\n   \nList of BlockDatas (Objects)\n\n    \n* Default Value is an empty list\n* At least one entry must be defined, or just remove this list."
                    },
                    "exact": {
                        "type": "boolean",
                        "description": "exact\nExactly match the block data or not\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "name": {
                        "type": "string",
                        "$ref": "#/definitions/erzloot",
                        "description": "name\nThe loot table name\n   \nIris Loot\n\nMust be a valid loot (use ctrl+space for auto complete!)"
                    },
                    "weight": {
                        "type": "integer",
                        "description": "weight\nThe weight of this loot table being chosen\n   \nInteger\n\n    \n* Default Value is 1"
                    }
                }
            },
            {"type": "string"}
        ]},
        "oneof-enum-com-volmit-iris-engine-object-noisestyle": {"oneOf": [
            {
                "const": "STATIC",
                "description": "White Noise is like static. Useful for block scattering but not terrain."
            },
            {
                "const": "STATIC_BILINEAR",
                "description": "White Noise is like static. Useful for block scattering but not terrain."
            },
            {
                "const": "STATIC_BICUBIC",
                "description": "White Noise is like static. Useful for block scattering but not terrain."
            },
            {
                "const": "STATIC_HERMITE",
                "description": "White Noise is like static. Useful for block scattering but not terrain."
            },
            {
                "const": "IRIS",
                "description": "Wispy Perlin-looking simplex noise. The 'iris' style noise."
            },
            {
                "const": "CLOVER",
                "description": "Clover Noise"
            },
            {
                "const": "CLOVER_STARCAST_3",
                "description": "CLOVER noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "CLOVER_STARCAST_6",
                "description": "CLOVER noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "CLOVER_STARCAST_9",
                "description": "CLOVER noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "CLOVER_STARCAST_12",
                "description": "CLOVER noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "CLOVER_BILINEAR_STARCAST_3",
                "description": "CLOVER noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "CLOVER_BILINEAR_STARCAST_6",
                "description": "CLOVER noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "CLOVER_BILINEAR_STARCAST_9",
                "description": "CLOVER noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "CLOVER_BILINEAR_STARCAST_12",
                "description": "CLOVER noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "CLOVER_HERMITE_STARCAST_3",
                "description": "CLOVER noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "CLOVER_HERMITE_STARCAST_6",
                "description": "CLOVER noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "CLOVER_HERMITE_STARCAST_9",
                "description": "CLOVER noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "CLOVER_HERMITE_STARCAST_12",
                "description": "CLOVER noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "CLOVER_BILINEAR",
                "description": "CLOVER noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "CLOVER_BICUBIC",
                "description": "CLOVER noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "CLOVER_HERMITE",
                "description": "CLOVER noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "VASCULAR",
                "description": "Vascular noise gets higher as the position nears a cell border."
            },
            {
                "const": "FLAT",
                "description": "It always returns 0.5"
            },
            {
                "const": "CELLULAR",
                "description": "Cellular noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "CELLULAR_STARCAST_3",
                "description": "Cellular noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "CELLULAR_STARCAST_6",
                "description": "Cellular noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "CELLULAR_STARCAST_9",
                "description": "Cellular noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "CELLULAR_STARCAST_12",
                "description": "Cellular noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "CELLULAR_BILINEAR_STARCAST_3",
                "description": "Cellular noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "CELLULAR_BILINEAR_STARCAST_6",
                "description": "Cellular noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "CELLULAR_BILINEAR_STARCAST_9",
                "description": "Cellular noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "CELLULAR_BILINEAR_STARCAST_12",
                "description": "Cellular noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "CELLULAR_HERMITE_STARCAST_3",
                "description": "Cellular noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "CELLULAR_HERMITE_STARCAST_6",
                "description": "Cellular noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "CELLULAR_HERMITE_STARCAST_9",
                "description": "Cellular noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "CELLULAR_HERMITE_STARCAST_12",
                "description": "Cellular noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "CELLULAR_BILINEAR",
                "description": "Cellular noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "CELLULAR_BICUBIC",
                "description": "Cellular noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "CELLULAR_HERMITE",
                "description": "Cellular noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "NOWHERE",
                "description": "Classic German Engineering"
            },
            {
                "const": "NOWHERE_CELLULAR",
                "description": "Classic German Engineering"
            },
            {
                "const": "NOWHERE_CLOVER",
                "description": "Classic German Engineering"
            },
            {
                "const": "NOWHERE_SIMPLEX",
                "description": "Classic German Engineering"
            },
            {
                "const": "NOWHERE_GLOB",
                "description": "Classic German Engineering"
            },
            {
                "const": "NOWHERE_VASCULAR",
                "description": "Classic German Engineering"
            },
            {
                "const": "NOWHERE_CUBIC",
                "description": "Classic German Engineering"
            },
            {
                "const": "NOWHERE_SUPERFRACTAL",
                "description": "Classic German Engineering"
            },
            {
                "const": "NOWHERE_FRACTAL",
                "description": "Classic German Engineering"
            },
            {
                "const": "IRIS_DOUBLE",
                "description": "Wispy Perlin-looking simplex noise. The 'iris' style noise."
            },
            {
                "const": "IRIS_THICK",
                "description": "Wispy Perlin-looking simplex noise. The 'iris' style noise."
            },
            {
                "const": "IRIS_HALF",
                "description": "Wispy Perlin-looking simplex noise. The 'iris' style noise."
            },
            {
                "const": "SIMPLEX",
                "description": "Basic, Smooth & Fast Simplex noise."
            },
            {
                "const": "FRACTAL_SMOKE",
                "description": "Very Detailed smoke using simplex fractured with fractal billow simplex at high octaves."
            },
            {
                "const": "VASCULAR_THIN",
                "description": "Thinner Veins."
            },
            {
                "const": "SIMPLEX_CELLS",
                "description": "Cells of simplex noise"
            },
            {
                "const": "SIMPLEX_VASCULAR",
                "description": "Veins of simplex noise"
            },
            {
                "const": "FRACTAL_WATER",
                "description": "Very Detailed fluid using simplex fractured with fractal billow simplex at high octaves."
            },
            {
                "const": "PERLIN",
                "description": "Perlin. Like simplex but more natural"
            },
            {
                "const": "PERLIN_IRIS",
                "description": "Perlin. Like simplex but more natural"
            },
            {
                "const": "PERLIN_IRIS_HALF",
                "description": "Perlin. Like simplex but more natural"
            },
            {
                "const": "PERLIN_IRIS_DOUBLE",
                "description": "Perlin. Like simplex but more natural"
            },
            {
                "const": "PERLIN_IRIS_THICK",
                "description": "Perlin. Like simplex but more natural"
            },
            {
                "const": "FRACTAL_BILLOW_PERLIN",
                "description": "Billow Fractal Perlin Noise."
            },
            {
                "const": "BIOCTAVE_FRACTAL_BILLOW_PERLIN",
                "description": "Billow Fractal Perlin Noise. 2 Octaves"
            },
            {
                "const": "FRACTAL_BILLOW_SIMPLEX",
                "description": "Billow Fractal Simplex Noise. Single octave."
            },
            {
                "const": "FRACTAL_FBM_SIMPLEX",
                "description": "FBM Fractal Simplex Noise. Single octave."
            },
            {
                "const": "FRACTAL_BILLOW_IRIS",
                "description": "Billow Fractal Iris Noise. Single octave."
            },
            {
                "const": "FRACTAL_FBM_IRIS",
                "description": "FBM Fractal Iris Noise. Single octave."
            },
            {
                "const": "FRACTAL_BILLOW_IRIS_HALF",
                "description": "Billow Fractal Iris Noise. Single octave."
            },
            {
                "const": "FRACTAL_FBM_IRIS_HALF",
                "description": "FBM Fractal Iris Noise. Single octave."
            },
            {
                "const": "FRACTAL_BILLOW_IRIS_THICK",
                "description": "Billow Fractal Iris Noise. Single octave."
            },
            {
                "const": "FRACTAL_FBM_IRIS_THICK",
                "description": "FBM Fractal Iris Noise. Single octave."
            },
            {
                "const": "FRACTAL_RM_SIMPLEX",
                "description": "Rigid Multi Fractal Simplex Noise. Single octave."
            },
            {
                "const": "BIOCTAVE_FRACTAL_BILLOW_SIMPLEX",
                "description": "Billow Fractal Simplex Noise. 2 octaves."
            },
            {
                "const": "BIOCTAVE_FRACTAL_FBM_SIMPLEX",
                "description": "FBM Fractal Simplex Noise. 2 octaves."
            },
            {
                "const": "BIOCTAVE_FRACTAL_RM_SIMPLEX",
                "description": "Rigid Multi Fractal Simplex Noise. 2 octaves."
            },
            {
                "const": "TRIOCTAVE_FRACTAL_RM_SIMPLEX",
                "description": "Rigid Multi Fractal Simplex Noise. 3 octaves."
            },
            {
                "const": "TRIOCTAVE_FRACTAL_BILLOW_SIMPLEX",
                "description": "Billow Fractal Simplex Noise. 3 octaves."
            },
            {
                "const": "TRIOCTAVE_FRACTAL_FBM_SIMPLEX",
                "description": "FBM Fractal Simplex Noise. 3 octaves."
            },
            {
                "const": "QUADOCTAVE_FRACTAL_RM_SIMPLEX",
                "description": "Rigid Multi Fractal Simplex Noise. 4 octaves."
            },
            {
                "const": "QUADOCTAVE_FRACTAL_BILLOW_SIMPLEX",
                "description": "Billow Fractal Simplex Noise. 4 octaves."
            },
            {
                "const": "QUADOCTAVE_FRACTAL_FBM_SIMPLEX",
                "description": "FBM Fractal Simplex Noise. 4 octaves."
            },
            {
                "const": "QUINTOCTAVE_FRACTAL_RM_SIMPLEX",
                "description": "Rigid Multi Fractal Simplex Noise. 5 octaves."
            },
            {
                "const": "QUINTOCTAVE_FRACTAL_BILLOW_SIMPLEX",
                "description": "Billow Fractal Simplex Noise. 5 octaves."
            },
            {
                "const": "QUINTOCTAVE_FRACTAL_FBM_SIMPLEX",
                "description": "FBM Fractal Simplex Noise. 5 octaves."
            },
            {
                "const": "SEXOCTAVE_FRACTAL_RM_SIMPLEX",
                "description": "Rigid Multi Fractal Simplex Noise. 6 octaves."
            },
            {
                "const": "SEXOCTAVE_FRACTAL_BILLOW_SIMPLEX",
                "description": "Billow Fractal Simplex Noise. 6 octaves."
            },
            {
                "const": "SEXOCTAVE_FRACTAL_FBM_SIMPLEX",
                "description": "FBM Fractal Simplex Noise. 6 octaves."
            },
            {
                "const": "SEPTOCTAVE_FRACTAL_RM_SIMPLEX",
                "description": "Rigid Multi Fractal Simplex Noise. 7 octaves."
            },
            {
                "const": "SEPTOCTAVE_FRACTAL_BILLOW_SIMPLEX",
                "description": "Billow Fractal Simplex Noise. 7 octaves."
            },
            {
                "const": "SEPTOCTAVE_FRACTAL_FBM_SIMPLEX",
                "description": "FBM Fractal Simplex Noise. 7 octaves."
            },
            {
                "const": "OCTOCTAVE_FRACTAL_RM_SIMPLEX",
                "description": "Rigid Multi Fractal Simplex Noise. 8 octaves."
            },
            {
                "const": "OCTOCTAVE_FRACTAL_BILLOW_SIMPLEX",
                "description": "Billow Fractal Simplex Noise. 8 octaves."
            },
            {
                "const": "OCTOCTAVE_FRACTAL_FBM_SIMPLEX",
                "description": "FBM Fractal Simplex Noise. 8 octaves."
            },
            {
                "const": "NONOCTAVE_FRACTAL_RM_SIMPLEX",
                "description": "Rigid Multi Fractal Simplex Noise. 9 octaves."
            },
            {
                "const": "NONOCTAVE_FRACTAL_BILLOW_SIMPLEX",
                "description": "Billow Fractal Simplex Noise. 9 octaves."
            },
            {
                "const": "NONOCTAVE_FRACTAL_FBM_SIMPLEX",
                "description": "FBM Fractal Simplex Noise. 9 octaves."
            },
            {
                "const": "VIGOCTAVE_FRACTAL_RM_SIMPLEX",
                "description": "Rigid Multi Fractal Simplex Noise. 10 octaves."
            },
            {
                "const": "VIGOCTAVE_FRACTAL_BILLOW_SIMPLEX",
                "description": "Billow Fractal Simplex Noise. 10 octaves."
            },
            {
                "const": "VIGOCTAVE_FRACTAL_FBM_SIMPLEX",
                "description": "FBM Fractal Simplex Noise. 10 octaves."
            },
            {
                "const": "BIOCTAVE_SIMPLEX",
                "description": "Basic, Smooth & Fast Simplex noise. Uses 2 octaves"
            },
            {
                "const": "TRIOCTAVE_SIMPLEX",
                "description": "Basic, Smooth & Fast Simplex noise. Uses 3 octaves"
            },
            {
                "const": "QUADOCTAVE_SIMPLEX",
                "description": "Basic, Smooth & Fast Simplex noise. Uses 4 octaves"
            },
            {
                "const": "QUINTOCTAVE_SIMPLEX",
                "description": "Basic, Smooth & Fast Simplex noise. Uses 5 octaves"
            },
            {
                "const": "SEXOCTAVE_SIMPLEX",
                "description": "Basic, Smooth & Fast Simplex noise. Uses 6 octaves"
            },
            {
                "const": "SEPTOCTAVE_SIMPLEX",
                "description": "Basic, Smooth & Fast Simplex noise. Uses 7 octaves"
            },
            {
                "const": "OCTOCTAVE_SIMPLEX",
                "description": "Basic, Smooth & Fast Simplex noise. Uses 8 octaves"
            },
            {
                "const": "NONOCTAVE_SIMPLEX",
                "description": "Basic, Smooth & Fast Simplex noise. Uses 9 octaves"
            },
            {
                "const": "VIGOCTAVE_SIMPLEX",
                "description": "Basic, Smooth & Fast Simplex noise. Uses 10 octaves"
            },
            {
                "const": "GLOB",
                "description": "Glob noise is like cellular, but with globs..."
            },
            {
                "const": "GLOB_IRIS",
                "description": "Glob noise is like cellular, but with globs..."
            },
            {
                "const": "GLOB_IRIS_HALF",
                "description": "Glob noise is like cellular, but with globs..."
            },
            {
                "const": "GLOB_IRIS_DOUBLE",
                "description": "Glob noise is like cellular, but with globs..."
            },
            {
                "const": "GLOB_IRIS_THICK",
                "description": "Glob noise is like cellular, but with globs..."
            },
            {
                "const": "CUBIC",
                "description": "Cubic Noise"
            },
            {
                "const": "FRACTAL_CUBIC",
                "description": "Fractal Cubic Noise"
            },
            {
                "const": "FRACTAL_CUBIC_IRIS",
                "description": "Fractal Cubic Noise With Iris Swirls"
            },
            {
                "const": "FRACTAL_CUBIC_IRIS_THICK",
                "description": "Fractal Cubic Noise With Iris Swirls"
            },
            {
                "const": "FRACTAL_CUBIC_IRIS_HALF",
                "description": "Fractal Cubic Noise With Iris Swirls"
            },
            {
                "const": "FRACTAL_CUBIC_IRIS_DOUBLE",
                "description": "Fractal Cubic Noise With Iris Swirls"
            },
            {
                "const": "BIOCTAVE_FRACTAL_CUBIC",
                "description": "Fractal Cubic Noise, 2 Octaves"
            },
            {
                "const": "TRIOCTAVE_FRACTAL_CUBIC",
                "description": "Fractal Cubic Noise, 3 Octaves"
            },
            {
                "const": "QUADOCTAVE_FRACTAL_CUBIC",
                "description": "Fractal Cubic Noise, 4 Octaves"
            },
            {
                "const": "CUBIC_IRIS",
                "description": "Cubic Noise"
            },
            {
                "const": "CUBIC_IRIS_HALF",
                "description": "Cubic Noise"
            },
            {
                "const": "CUBIC_IRIS_DOUBLE",
                "description": "Cubic Noise"
            },
            {
                "const": "CUBIC_IRIS_THICK",
                "description": "Cubic Noise"
            },
            {
                "const": "CELLULAR_IRIS",
                "description": "Cellular noise creates the same noise level for cells, changes noise level on cell borders. Cells are distorted using Iris styled wispy noise."
            },
            {
                "const": "CELLULAR_IRIS_THICK",
                "description": "Cellular noise creates the same noise level for cells, changes noise level on cell borders. Cells are distorted using Iris styled wispy noise."
            },
            {
                "const": "CELLULAR_IRIS_DOUBLE",
                "description": "Cellular noise creates the same noise level for cells, changes noise level on cell borders. Cells are distorted using Iris styled wispy noise."
            },
            {
                "const": "CELLULAR_IRIS_HALF",
                "description": "Cellular noise creates the same noise level for cells, changes noise level on cell borders. Cells are distorted using Iris styled wispy noise."
            },
            {
                "const": "CELLULAR_HEIGHT",
                "description": "Inverse of vascular, height gets to 1.0 as it approaches the center of a cell"
            },
            {
                "const": "CELLULAR_HEIGHT_IRIS",
                "description": "Inverse of vascular, height gets to 1.0 as it approaches the center of a cell, using the iris style."
            },
            {
                "const": "CELLULAR_HEIGHT_IRIS_DOUBLE",
                "description": "Inverse of vascular, height gets to 1.0 as it approaches the center of a cell, using the iris style."
            },
            {
                "const": "CELLULAR_HEIGHT_IRIS_THICK",
                "description": "Inverse of vascular, height gets to 1.0 as it approaches the center of a cell, using the iris style."
            },
            {
                "const": "CELLULAR_HEIGHT_IRIS_HALF",
                "description": "Inverse of vascular, height gets to 1.0 as it approaches the center of a cell, using the iris style."
            },
            {
                "const": "VASCULAR_IRIS",
                "description": "Vascular noise gets higher as the position nears a cell border. Cells are distorted using Iris styled wispy noise."
            },
            {
                "const": "VASCULAR_IRIS_DOUBLE",
                "description": "Vascular noise gets higher as the position nears a cell border. Cells are distorted using Iris styled wispy noise."
            },
            {
                "const": "VASCULAR_IRIS_THICK",
                "description": "Vascular noise gets higher as the position nears a cell border. Cells are distorted using Iris styled wispy noise."
            },
            {
                "const": "VASCULAR_IRIS_HALF",
                "description": "Vascular noise gets higher as the position nears a cell border. Cells are distorted using Iris styled wispy noise."
            }
        ]},
        "obj-com-volmit-iris-engine-object-irisblockdata": {
            "description": "Represents Block Data",
            "type": "object",
            "properties": {
                "preprocessors": {
                    "type": "array",
                    "minItems": 1,
                    "items": {"$ref": "#/definitions/erzscripts"},
                    "description": "preprocessors\nPreprocess this object in-memory when it's loaded, run scripts using the variable 'Iris.getPreprocessorObject()' and modify properties about this object before it's used.\n   \nList<Script>\n\n    \n* Default Value is an empty list\n* At least one entry must be defined, or just remove this list.\nMust be a valid Script (use ctrl+space for auto complete!)"
                },
                "block": {
                    "type": "string",
                    "$ref": "#/definitions/enum-block-type",
                    "description": "block\nThe block to use\n   \nBlock Type\n\n    \n* Default Value is air\nMust be a valid Block Type (use ctrl+space for auto complete!)"
                },
                "debug": {
                    "type": "boolean",
                    "description": "debug\nDebug this block by printing it to the console when it's used. Must have debug turned on in settings.\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
                },
                "weight": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 1000,
                    "description": "weight\nThe weight is used when this block data is inside of a list of blockdata. A weight of two is just as if you placed two of the same block data values in the same list making it more common when randomly picked.\n   \nInteger\n\n    \n* Default Value is 1\n* Minimum allowed is 1\n* Maximum allowed is 1000"
                },
                "backup": {
                    "type": "object",
                    "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisblockdata",
                    "description": "backup\nIf the block cannot be created on this version, Iris will attempt to use this backup block data instead.\n   \nBlockData (Object)\nRepresents Block Data"
                },
                "data": {
                    "type": "object",
                    "$ref": "#/definitions/obj-com-volmit-iris-util-collection-kmap",
                    "description": "data\nOptional properties for this block data such as 'waterlogged': true\n   \nKMap (Object)\n\n    \n* Default Value is a default object (create this object to see default properties)"
                }
            }
        },
        "oneof-enum-com-volmit-iris-util-interpolation-interpolationmethod": {"oneOf": [
            {
                "const": "NONE",
                "description": "No interpolation. Nearest Neighbor (bad for terrain, great for performance)."
            },
            {
                "const": "BILINEAR",
                "description": "Uses 4 nearby points in a square to calculate a 2d slope. Very fast but creates square artifacts. See: https://en.wikipedia.org/wiki/Bilinear_interpolation"
            },
            {
                "const": "STARCAST_3",
                "description": "Starcast is Iris's own creation. It uses raytrace checks to find a horizontal boundary nearby. 3 Checks in a circle. Typically starcast is used with another interpolation method. See BILINEAR_STARCAST_9 For example. Starcast is meant to 'break up' large, abrupt cliffs to make cheap interpolation smoother."
            },
            {
                "const": "STARCAST_6",
                "description": "Starcast is Iris's own creation. It uses raytrace checks to find a horizontal boundary nearby. 6 Checks in a circle. Typically starcast is used with another interpolation method. See BILINEAR_STARCAST_9 For example. Starcast is meant to 'break up' large, abrupt cliffs to make cheap interpolation smoother."
            },
            {
                "const": "STARCAST_9",
                "description": "Starcast is Iris's own creation. It uses raytrace checks to find a horizontal boundary nearby. 9 Checks in a circle. Typically starcast is used with another interpolation method. See BILINEAR_STARCAST_9 For example. Starcast is meant to 'break up' large, abrupt cliffs to make cheap interpolation smoother."
            },
            {
                "const": "STARCAST_12",
                "description": "Starcast is Iris's own creation. It uses raytrace checks to find a horizontal boundary nearby. 12 Checks in a circle. Typically starcast is used with another interpolation method. See BILINEAR_STARCAST_9 For example. Starcast is meant to 'break up' large, abrupt cliffs to make cheap interpolation smoother."
            },
            {
                "const": "BILINEAR_STARCAST_3",
                "description": "Uses starcast to break up the abrupt sharp cliffs, then smooths the rest out with bilinear."
            },
            {
                "const": "BILINEAR_STARCAST_6",
                "description": "Uses starcast to break up the abrupt sharp cliffs, then smooths the rest out with bilinear."
            },
            {
                "const": "BILINEAR_STARCAST_9",
                "description": "Uses starcast to break up the abrupt sharp cliffs, then smooths the rest out with bilinear."
            },
            {
                "const": "BILINEAR_STARCAST_12",
                "description": "Uses starcast to break up the abrupt sharp cliffs, then smooths the rest out with bilinear."
            },
            {
                "const": "HERMITE_STARCAST_3",
                "description": "Uses starcast to break up the abrupt sharp cliffs, then smooths the rest out with hermite."
            },
            {
                "const": "HERMITE_STARCAST_6",
                "description": "Uses starcast to break up the abrupt sharp cliffs, then smooths the rest out with hermite."
            },
            {
                "const": "HERMITE_STARCAST_9",
                "description": "Uses starcast to break up the abrupt sharp cliffs, then smooths the rest out with hermite."
            },
            {
                "const": "HERMITE_STARCAST_12",
                "description": "Uses starcast to break up the abrupt sharp cliffs, then smooths the rest out with hermite."
            },
            {
                "const": "BILINEAR_BEZIER",
                "description": "Uses bilinear but on a bezier curve. See: https://en.wikipedia.org/wiki/Bezier_curve"
            },
            {
                "const": "BILINEAR_PARAMETRIC_2",
                "description": "Uses Bilinear but with parametric curves alpha 2."
            },
            {
                "const": "BILINEAR_PARAMETRIC_4",
                "description": "Uses Bilinear but with parametric curves alpha 4."
            },
            {
                "const": "BILINEAR_PARAMETRIC_1_5",
                "description": "Uses Bilinear but with parametric curves alpha 1.5."
            },
            {
                "const": "BICUBIC",
                "description": "Bicubic noise creates 4, 4-point splines for a total of 16 checks. Bcubic can go higher than expected and lower than expected right before a large change in slope."
            },
            {
                "const": "HERMITE",
                "description": "Hermite is similar to bicubic, but faster and it can be tuned a little bit"
            },
            {
                "const": "CATMULL_ROM_SPLINE",
                "description": "Essentially bicubic with zero tension"
            },
            {
                "const": "HERMITE_TENSE",
                "description": "Essentially bicubic with max tension"
            },
            {
                "const": "HERMITE_LOOSE",
                "description": "Hermite is similar to bicubic, this variant reduces the dimple artifacts of bicubic"
            },
            {
                "const": "HERMITE_LOOSE_HALF_POSITIVE_BIAS",
                "description": "Hermite is similar to bicubic, this variant reduces the dimple artifacts of bicubic"
            },
            {
                "const": "HERMITE_LOOSE_HALF_NEGATIVE_BIAS",
                "description": "Hermite is similar to bicubic, this variant reduces the dimple artifacts of bicubic"
            },
            {
                "const": "HERMITE_LOOSE_FULL_POSITIVE_BIAS",
                "description": "Hermite is similar to bicubic, this variant reduces the dimple artifacts of bicubic"
            },
            {
                "const": "HERMITE_LOOSE_FULL_NEGATIVE_BIAS",
                "description": "Hermite is similar to bicubic, this variant reduces the dimple artifacts of bicubic"
            }
        ]},
        "oneof-enum-com-volmit-iris-engine-object-irisimagechannel": {"oneOf": [
            {
                "const": "RED",
                "description": "The red channel of the image"
            },
            {
                "const": "GREEN",
                "description": "Thge green channel of the image"
            },
            {
                "const": "BLUE",
                "description": "The blue channel of the image"
            },
            {
                "const": "SATURATION",
                "description": "The saturation as a channel of the image"
            },
            {
                "const": "HUE",
                "description": "The hue as a channel of the image"
            },
            {
                "const": "BRIGHTNESS",
                "description": "The brightness as a channel of the image"
            },
            {
                "const": "COMPOSITE_ADD_RGB",
                "description": "The composite of RGB as a channel of the image. Takes the average channel value (adding)"
            },
            {
                "const": "COMPOSITE_MUL_RGB",
                "description": "The composite of RGB as a channel of the image. Multiplies the channels"
            },
            {
                "const": "COMPOSITE_MAX_RGB",
                "description": "The composite of RGB as a channel of the image. Picks the highest channel"
            },
            {
                "const": "COMPOSITE_ADD_HSB",
                "description": "The composite of HSB as a channel of the image Takes the average channel value (adding)"
            },
            {
                "const": "COMPOSITE_MUL_HSB",
                "description": "The composite of HSB as a channel of the image Multiplies the channels"
            },
            {
                "const": "COMPOSITE_MAX_HSB",
                "description": "The composite of HSB as a channel of the image Picks the highest channel"
            },
            {
                "const": "RAW",
                "description": "The raw value as a channel (probably doesnt look very good)"
            }
        ]},
        "erzmarkers": {"enum": [
            "allay",
            "pillager",
            "vindicator",
            "skelepirate",
            "dank",
            "villager",
            "evoker",
            "igolem"
        ]},
        "oneof-enum-com-volmit-iris-engine-object-carvingmode": {"oneOf": [
            {
                "const": "SURFACE_ONLY",
                "description": "Only place this object on surfaces (NOT under carvings)"
            },
            {
                "const": "CARVING_ONLY",
                "description": "Only place this object under carvings (NOT on the surface)"
            },
            {
                "const": "ANYWHERE",
                "description": "This object can place anywhere"
            }
        ]},
        "enum-snippet-generator": {"enum": []},
        "obj-com-volmit-iris-engine-object-irisobjecttranslate": {"anyOf": [
            {
                "description": "Translate objects",
                "type": "object",
                "properties": {
                    "x": {
                        "type": "integer",
                        "minimum": -128,
                        "maximum": 128,
                        "description": "x\nThe x shift in blocks\n   \nInteger\n\n    \n* Default Value is 0\n* Minimum allowed is -128\n* Maximum allowed is 128"
                    },
                    "y": {
                        "type": "integer",
                        "minimum": -128,
                        "maximum": 128,
                        "description": "y\nThe y shift in blocks\n   \nInteger\n\n    \n* Default Value is 0\n* Minimum allowed is -128\n* Maximum allowed is 128"
                    },
                    "yRandom": {
                        "type": "integer",
                        "minimum": -128,
                        "maximum": 128,
                        "description": "yRandom\nAdds an additional amount of height randomly (translateY + rand(0 - yRandom))\n   \nInteger\n\n    \n* Default Value is 0\n* Minimum allowed is -128\n* Maximum allowed is 128"
                    },
                    "z": {
                        "type": "integer",
                        "minimum": -128,
                        "maximum": 128,
                        "description": "z\nThe z shift in blocks\n   \nInteger\n\n    \n* Default Value is 0\n* Minimum allowed is -128\n* Maximum allowed is 128"
                    }
                }
            },
            {"type": "string"}
        ]},
        "enum-org-bukkit-treetype": {"enum": [
            "TREE",
            "BIG_TREE",
            "REDWOOD",
            "TALL_REDWOOD",
            "BIRCH",
            "JUNGLE",
            "SMALL_JUNGLE",
            "COCOA_TREE",
            "JUNGLE_BUSH",
            "RED_MUSHROOM",
            "BROWN_MUSHROOM",
            "SWAMP",
            "ACACIA",
            "DARK_OAK",
            "MEGA_REDWOOD",
            "TALL_BIRCH",
            "CHORUS_PLANT",
            "CRIMSON_FUNGUS",
            "WARPED_FUNGUS",
            "AZALEA",
            "MANGROVE",
            "TALL_MANGROVE"
        ]},
        "enum-snippet-stilt-settings": {"enum": []},
        "enum-snippet-object-limit": {"enum": []},
        "erzscripts": {"enum": []},
        "obj-com-volmit-iris-engine-object-irisgeneratorstyle": {"anyOf": [
            {
                "description": "A gen style",
                "type": "object",
                "properties": {
                    "style": {
                        "type": "string",
                        "$ref": "#/definitions/oneof-enum-com-volmit-iris-engine-object-noisestyle",
                        "description": "style\nThe chance is 1 in CHANCE per interval\n   \nNoiseStyle\nStyles of noise\n    \n* Default Value is a default object (create this object to see default properties)\nMust be a valid NoiseStyle (use ctrl+space for auto complete!)"
                    },
                    "cellularFrequency": {
                        "type": "number",
                        "description": "cellularFrequency\nIf set above 0, this style will be cellularized\n   \nNumber\n\n    \n* Default Value is 0.0"
                    },
                    "cellularZoom": {
                        "type": "number",
                        "description": "cellularZoom\nCell zooms\n   \nNumber\n\n    \n* Default Value is 1.0"
                    },
                    "zoom": {
                        "type": "number",
                        "minimum": 1.0E-5,
                        "description": "zoom\nThe zoom of this style\n   \nNumber\n\n    \n* Default Value is 1.0\n* Minimum allowed is 1.0E-5"
                    },
                    "expression": {
                        "type": "string",
                        "$ref": "#/definitions/erzexpressions",
                        "description": "expression\nInstead of using the style property, use a custom expression to represent this style.\n   \nIris Expression\n\nMust be a valid expressions (use ctrl+space for auto complete!)"
                    },
                    "imageMap": {
                        "anyOf": [
                            {
                                "!required": false,
                                "type": "object",
                                "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisimagemap",
                                "description": "imageMap\nUse an Image map instead of a generated value\n   \nImageMap (Object)\nRepresents an image map\n    \nYou can instead specify \"snippet/carving/some-name.json\" to use a snippet file instead of specifying it here."
                            },
                            {
                                "type": "string",
                                "$ref": "#/definitions/enum-snippet-carving",
                                "description": "imageMap\nUse an Image map instead of a generated value\n   \nImageMap (Object)\nRepresents an image map\n    \nYou can instead specify \"snippet/carving/some-name.json\" to use a snippet file instead of specifying it here."
                            }
                        ],
                        "description": "imageMap\nUse an Image map instead of a generated value\n   \nImageMap (Object)\nRepresents an image map\n    \nYou can instead specify \"snippet/carving/some-name.json\" to use a snippet file instead of specifying it here."
                    },
                    "multiplier": {
                        "type": "number",
                        "minimum": 1.0E-5,
                        "description": "multiplier\nThe Output multiplier. Only used if parent is fracture.\n   \nNumber\n\n    \n* Default Value is 1.0\n* Minimum allowed is 1.0E-5"
                    },
                    "axialFracturing": {
                        "type": "boolean",
                        "description": "axialFracturing\nIf set to true, each dimension will be fractured with a different order of input coordinates. This is usually 2 or 3 times slower than normal.\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "fracture": {
                        "anyOf": [
                            {
                                "!required": false,
                                "type": "object",
                                "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisgeneratorstyle",
                                "description": "fracture\nApply a generator to the coordinate field fed into this parent generator. I.e. Distort your generator with another generator.\n   \nGeneratorStyle (Object)\nA gen style\n    \nYou can instead specify \"snippet/style/some-name.json\" to use a snippet file instead of specifying it here."
                            },
                            {
                                "type": "string",
                                "$ref": "#/definitions/enum-snippet-style",
                                "description": "fracture\nApply a generator to the coordinate field fed into this parent generator. I.e. Distort your generator with another generator.\n   \nGeneratorStyle (Object)\nA gen style\n    \nYou can instead specify \"snippet/style/some-name.json\" to use a snippet file instead of specifying it here."
                            }
                        ],
                        "description": "fracture\nApply a generator to the coordinate field fed into this parent generator. I.e. Distort your generator with another generator.\n   \nGeneratorStyle (Object)\nA gen style\n    \nYou can instead specify \"snippet/style/some-name.json\" to use a snippet file instead of specifying it here."
                    },
                    "exponent": {
                        "type": "number",
                        "minimum": 0.01562,
                        "maximum": 64,
                        "description": "exponent\nThe exponent\n   \nNumber\n\n    \n* Default Value is 1.0\n* Minimum allowed is 0.01562\n* Maximum allowed is 64.0"
                    },
                    "cacheSize": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 8192,
                        "description": "cacheSize\nIf the cache size is set above 0, this generator will be cached\n   \nInteger\n\n    \n* Default Value is 0\n* Minimum allowed is 0\n* Maximum allowed is 8192"
                    }
                }
            },
            {"type": "string"}
        ]},
        "obj-com-volmit-iris-engine-object-irisobjectrotation": {"anyOf": [
            {
                "description": "Configures rotation for iris",
                "type": "object",
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "description": "enabled\nIf this rotator is enabled or not\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "xAxis": {
                        "anyOf": [
                            {
                                "!required": false,
                                "type": "object",
                                "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisaxisrotationclamp",
                                "description": "xAxis\nThe x axis rotation\n   \nAxisRotationClamp (Object)\nRepresents a rotation axis with intervals and maxes. The x and z axis values are defaulted to disabled. The Y axis defaults to on, rotating by 90 degree increments.\n    \nYou can instead specify \"snippet/axis-rotation/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            },
                            {
                                "type": "string",
                                "$ref": "#/definitions/enum-snippet-axis-rotation",
                                "description": "xAxis\nThe x axis rotation\n   \nAxisRotationClamp (Object)\nRepresents a rotation axis with intervals and maxes. The x and z axis values are defaulted to disabled. The Y axis defaults to on, rotating by 90 degree increments.\n    \nYou can instead specify \"snippet/axis-rotation/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            }
                        ],
                        "description": "xAxis\nThe x axis rotation\n   \nAxisRotationClamp (Object)\nRepresents a rotation axis with intervals and maxes. The x and z axis values are defaulted to disabled. The Y axis defaults to on, rotating by 90 degree increments.\n    \nYou can instead specify \"snippet/axis-rotation/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "yAxis": {
                        "anyOf": [
                            {
                                "!required": false,
                                "type": "object",
                                "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisaxisrotationclamp",
                                "description": "yAxis\nThe y axis rotation\n   \nAxisRotationClamp (Object)\nRepresents a rotation axis with intervals and maxes. The x and z axis values are defaulted to disabled. The Y axis defaults to on, rotating by 90 degree increments.\n    \nYou can instead specify \"snippet/axis-rotation/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            },
                            {
                                "type": "string",
                                "$ref": "#/definitions/enum-snippet-axis-rotation",
                                "description": "yAxis\nThe y axis rotation\n   \nAxisRotationClamp (Object)\nRepresents a rotation axis with intervals and maxes. The x and z axis values are defaulted to disabled. The Y axis defaults to on, rotating by 90 degree increments.\n    \nYou can instead specify \"snippet/axis-rotation/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            }
                        ],
                        "description": "yAxis\nThe y axis rotation\n   \nAxisRotationClamp (Object)\nRepresents a rotation axis with intervals and maxes. The x and z axis values are defaulted to disabled. The Y axis defaults to on, rotating by 90 degree increments.\n    \nYou can instead specify \"snippet/axis-rotation/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "zAxis": {
                        "anyOf": [
                            {
                                "!required": false,
                                "type": "object",
                                "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisaxisrotationclamp",
                                "description": "zAxis\nThe z axis rotation\n   \nAxisRotationClamp (Object)\nRepresents a rotation axis with intervals and maxes. The x and z axis values are defaulted to disabled. The Y axis defaults to on, rotating by 90 degree increments.\n    \nYou can instead specify \"snippet/axis-rotation/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            },
                            {
                                "type": "string",
                                "$ref": "#/definitions/enum-snippet-axis-rotation",
                                "description": "zAxis\nThe z axis rotation\n   \nAxisRotationClamp (Object)\nRepresents a rotation axis with intervals and maxes. The x and z axis values are defaulted to disabled. The Y axis defaults to on, rotating by 90 degree increments.\n    \nYou can instead specify \"snippet/axis-rotation/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            }
                        ],
                        "description": "zAxis\nThe z axis rotation\n   \nAxisRotationClamp (Object)\nRepresents a rotation axis with intervals and maxes. The x and z axis values are defaulted to disabled. The Y axis defaults to on, rotating by 90 degree increments.\n    \nYou can instead specify \"snippet/axis-rotation/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                    }
                }
            },
            {"type": "string"}
        ]},
        "enum-snippet-object-translator": {"enum": []},
        "oneof-enum-com-volmit-iris-engine-object-irisobjectplacementscaleinterpolator": {"oneOf": [
            {
                "const": "NONE",
                "description": "Don't interpolate, big cubes"
            },
            {
                "const": "TRILINEAR",
                "description": "Uses linear interpolation in 3 dimensions, generally pretty good, but slow"
            },
            {
                "const": "TRICUBIC",
                "description": "Uses cubic spline interpolation in 3 dimensions, even better, but extreme slowdowns"
            },
            {
                "const": "TRIHERMITE",
                "description": "Uses hermite spline interpolation in 3 dimensions, even better, but extreme slowdowns"
            }
        ]},
        "erzbiomes": {"enum": [
            "mountain/hills",
            "carving/ice-lite",
            "terralost/WIP/haze-mountain",
            "terralost/WIP/skylands-winter",
            "terralost/WIP/fractured-savanna",
            "terralost/WIP/savanna-badlands",
            "tropical/rainforest-island",
            "terralost/WIP/wintry-forest",
            "terralost/WIP/warped-mesa",
            "carving/drip",
            "mushroom/plains",
            "temperate/highlands",
            "carving/mixed-sandstone",
            "mesa/plateau",
            "temperate/reaching-forest",
            "tundra/forest",
            "hot/shore/beach",
            "tropical/sea/river-steep",
            "tropical/volcanoes-lava",
            "terralost/WIP/jungle-mountains",
            "mushroom/shore/beach",
            "temperate/lush-plains-yellow",
            "frozen/sea/ocean",
            "temperate/plateau-extended",
            "mesa/cliffs",
            "mushroom",
            "tundra/autumn",
            "terralost/WIP/snowy-shield",
            "tundra/magic-forest-extended",
            "mesa/valleys",
            "terralost/WIP/snowy-badlands",
            "terralost/WIP/yosemite-lowlands",
            "frozen/pines-extended",
            "tropical/sea/ocean",
            "mesa/green",
            "terralost/WIP/caldera",
            "frozen",
            "terralost/alpine-grove",
            "frozen/spruce-hills-extended",
            "savanna/cliff",
            "mountain/plains",
            "terralost/alpine-highlands",
            "carving/sandstone",
            "temperate/lush-plains",
            "frozen/vander",
            "frozen/spruce-plains",
            "tropical/rainforest",
            "hot/desert-dunes-red",
            "terralost",
            "hot",
            "terralost/WIP/skylands-spring",
            "terralost/WIP/shield",
            "tundra/shore/beach",
            "mesa/blue",
            "mushroom/forest-extended",
            "swamp/shore/beach",
            "terralost/WIP/gravel-desert",
            "terralost/WIP/birch-tiaga",
            "terralost/WIP/lavender-valley",
            "hot/mountain-plains",
            "temperate/stranged-plains",
            "mushroom/sea/ocean",
            "tundra/frosted-peaks-extended",
            "tropical/jungle-denmyre",
            "swamp/roofed-wayward-extended",
            "swamp",
            "endless-sands",
            "frozen/sea/frozen-parent-river",
            "tropical",
            "terralost/WIP/desert-oasis",
            "frozen/shore/beach",
            "tundra/sea/river",
            "tropical/mountain-water",
            "frozen/pine-hills",
            "terralost/WIP/moonlight-valley",
            "terralost/WIP/scarlet-mountains",
            "tropical/beach-bamboo",
            "ocean/deep",
            "terralost/WIP/glacial-chasm",
            "terralost/WIP/yellowstone",
            "frozen/plains",
            "terralost/WIP/highlands",
            "terralost/WIP/valley-clearing",
            "swamp/marsh",
            "terralost/WIP/snowy-maple-forest",
            "terralost/WIP/desert-spires",
            "terralost/WIP/rocky-jungle",
            "tropical/rainforest-wicked",
            "terralost/WIP/lavender-forest",
            "temperate/lush-plains-red",
            "temperate/oak-forest-extended",
            "tropical/volcanic-plains",
            "tropical/plains-hills",
            "hot/desert-dunes",
            "terralost/WIP/arid-highlands",
            "terralost/WIP/desert-canyon",
            "tropical/rainforest-wicked-child",
            "tundra/mountains-extended-cliffs",
            "swamp/sea/lake",
            "terralost/WIP/volcanic-peaks",
            "carving/rocky",
            "swamp/roofed-wayward",
            "hot/mountain-middle",
            "terralost/WIP/red-oasis",
            "mountain/mountain",
            "temperate",
            "frozen/sea/frozen-river-ice",
            "swamp/cambian-drift-extended",
            "temperate/plateau",
            "tropical/sea/river-soft",
            "mesa/plateau-high",
            "savanna/plateau",
            "tundra/sequia-redwoods-extended",
            "carving/granite",
            "frozen/pines",
            "temperate/sea/river",
            "terralost/ancient-sands",
            "terralost/WIP/shrubland",
            "mountain/sea/river",
            "terralost/WIP/white-mesa",
            "terralost/WIP/wintry-lowlands",
            "mesa/plateau-dirt",
            "hot/mountain-cliffs",
            "temperate/osaka-violet-forest",
            "hot/oasis",
            "frozen/peak",
            "terralost/WIP/skylands-autumn",
            "tropical/island-beach",
            "swamp/swamp-puddle",
            "tundra/frosted-peaks",
            "terralost/WIP/siberian-grove",
            "frozen/mountain-extended",
            "swamp/roofed-forest-extended",
            "terralost/WIP/orchid-swamp",
            "terralost/WIP/skylands",
            "mesa/mesa",
            "carving/deepslate",
            "terralost/WIP/ashen-savanna",
            "swamp/sea/ocean-tree",
            "terralost/WIP/painted-mountains",
            "tundra/sequia-redwoods",
            "mushroom/crimson-forest-extended",
            "terralost/WIP/forested-highlands",
            "terralost/WIP/bryce-canyon",
            "ocean/ocean",
            "swamp/handy-willow-forest",
            "tundra/forest-extended-cliffs",
            "terralost/WIP/white-cliffs",
            "terralost/WIP/shield-clearing",
            "savanna/acacia-denmyre",
            "swamp/roofed-forest",
            "tundra",
            "frozen/spruce-hills",
            "temperate/combo-forest-extended",
            "tundra/redwood-forest",
            "terralost/WIP/granite-cliffs",
            "terralost/WIP/volcanic-crater",
            "swamp/sea/ocean",
            "carving/amethyst",
            "mushroom/forest",
            "ocean/shore/beach",
            "tropical/beach",
            "savanna/savanna",
            "terralost/WIP/cold-shrubland",
            "mountain/shore/beach",
            "terralost/amethyst-canyon",
            "carving/ice",
            "tropical/highlands",
            "ocean/warm",
            "swamp/denmyre",
            "temperate/longtree-forest",
            "terralost/WIP/stoney-spires",
            "temperate/flower-forest",
            "tundra/taiga",
            "carving/mountain-caves",
            "temperate/osaka-red-forest",
            "terralost/WIP/emerald-peaks",
            "carving/red-sandstone",
            "mushroom/crimson-forest",
            "terralost/WIP/moonlight-grove",
            "util/ruined_portals",
            "terralost/WIP/windswept-spires",
            "terralost/amethyst-rainforest",
            "terralost/WIP/sakura-valley",
            "hot/shore/beach-grass",
            "terralost/WIP/skylands-summer",
            "terralost/WIP/ice-marsh",
            "mesa/shore/beach",
            "mountain/sea/river-soft",
            "tropical/sea/coral-ocean-cliffs",
            "terralost/WIP/rocky-shrubland",
            "temperate/sea/ocean-deep",
            "temperate/shore/beach",
            "mountain/cliffs",
            "savanna/forest",
            "tundra/magic-forest",
            "hot/sea/ocean-cliffs",
            "terralost/WIP/gravel-beach",
            "tundra/mountains",
            "tropical/mountain",
            "swamp/swamp-mangrove-lake",
            "tropical/mountain-plains",
            "tropical/volcanoes",
            "temperate/sea/ocean",
            "terralost/WIP/sakura-grove",
            "tundra/bonsai-forest",
            "temperate/shore/oak-beach",
            "mesa/dark",
            "hot/sea/ocean",
            "tundra/autumn-extended",
            "temperate/longtree-forest-extended",
            "mesa/yellow",
            "terralost/WIP/temperate-highlands",
            "tropical/beach-charred",
            "tundra/shore/beach-stone",
            "carving/ice-ravine",
            "frozen/mountains",
            "swamp/marsh-rotten",
            "frozen/sea/river",
            "savanna/shore/beach",
            "terralost/WIP/basalt-cliffs",
            "mountain/forest",
            "tropical/mountain-extreme",
            "tundra/sea/river-rocky",
            "tropical/plains",
            "mountain/mountain-extended",
            "mushroom/warped-forest-extended",
            "mountain/forest-extended",
            "carving/deep",
            "carving/swamp",
            "temperate/wilds-extended",
            "mushroom/sea/lake",
            "temperate/birch-denmyre",
            "tundra/taiga-extended",
            "terralost/WIP/hot-shrubland",
            "terralost/WIP/steppe",
            "frozen/redwood-forest-extended",
            "frozen/redwood-forest",
            "frozen/hills-extended",
            "mesa/plateau-dirt-high",
            "mesa/red",
            "terralost/WIP/tropical-jungle",
            "terralost/WIP/rocky-mountains",
            "temperate/island",
            "frozen/mountain-cliffs-extended",
            "terralost/WIP/yosemite-cliffs",
            "terralost/WIP/blooming-plateau",
            "temperate/flower-forest-extended",
            "temperate/oak-forest",
            "temperate/birch-forest",
            "carving/calcite",
            "terralost/WIP/savanna-slopes",
            "temperate/meadows",
            "carving/lush",
            "swamp/cambian-drift",
            "tropical/rainforest-hills",
            "temperate/birch-thin",
            "terralost/WIP/brushland",
            "terralost/WIP/siberian-tiaga",
            "terralost/WIP/mirage-isles",
            "mountain/plain-extended",
            "temperate/combo-forest",
            "frozen/mountain",
            "tundra/bonsai-extended",
            "mountain/cliffs-extended",
            "carving/drip-lite",
            "hot/mountain",
            "carving/deepravine",
            "terralost/WIP/sandstone-valley",
            "tundra/ether-extended",
            "swamp/swamp-forest",
            "temperate/plains",
            "mushroom/warped-forest",
            "hot/sea/river",
            "temperate/wilds",
            "frozen/hills",
            "swamp/willow-forest",
            "terralost/WIP/base",
            "frozen/pine-plains",
            "tropical/wilds",
            "tundra/ether",
            "tropical/mountain-middle",
            "tundra/sea/lake",
            "carving/volcanic",
            "frozen/mountain-cliffs",
            "swamp/willow-forest-extended",
            "savanna/cliff-extended",
            "tundra/spruce-denmyre",
            "mesa/sea/river",
            "tundra/redwood-extended-cliffs",
            "tropical/submerged-volcanic",
            "temperate/birch-forest-extended",
            "temperate/oak-denmyre",
            "terralost/WIP/frozen-cliffs",
            "ocean/warm-bottom",
            "tropical/bamboo-forest",
            "carving/jungle",
            "tropical/sea/coral-ocean",
            "terralost/WIP/blooming-valley",
            "terralost/WIP/cloud-forest"
        ]},
        "enum-snippet-carving": {"enum": []},
        "erzexpressions": {"enum": []},
        "enum-snippet-palette": {"enum": []},
        "obj-com-volmit-iris-util-collection-kmap": {
            "description": "",
            "type": "object",
            "properties": {}
        },
        "enum-snippet-object-rotator": {"enum": []},
        "erzimages": {"enum": [
            "bricks",
            "exampleCircle",
            "exampleReal"
        ]},
        "enum-snippet-style-range": {"enum": []},
        "obj-com-volmit-iris-engine-object-irisstyledrange": {"anyOf": [
            {
                "description": "Represents a range styled with a custom generator",
                "type": "object",
                "properties": {
                    "min": {
                        "type": "number",
                        "description": "min\nThe minimum value\n   \nNumber\n\n    \n* Default Value is 16.0"
                    },
                    "max": {
                        "type": "number",
                        "description": "max\nThe maximum value\n   \nNumber\n\n    \n* Default Value is 32.0"
                    },
                    "style": {
                        "anyOf": [
                            {
                                "!required": false,
                                "type": "object",
                                "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisgeneratorstyle",
                                "description": "style\nThe style to pick the range\n   \nGeneratorStyle (Object)\nA gen style\n    \nYou can instead specify \"snippet/style/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            },
                            {
                                "type": "string",
                                "$ref": "#/definitions/enum-snippet-style",
                                "description": "style\nThe style to pick the range\n   \nGeneratorStyle (Object)\nA gen style\n    \nYou can instead specify \"snippet/style/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            }
                        ],
                        "description": "style\nThe style to pick the range\n   \nGeneratorStyle (Object)\nA gen style\n    \nYou can instead specify \"snippet/style/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                    }
                }
            },
            {"type": "string"}
        ]},
        "obj-com-volmit-iris-engine-object-irisaxisrotationclamp": {"anyOf": [
            {
                "description": "Represents a rotation axis with intervals and maxes. The x and z axis values are defaulted to disabled. The Y axis defaults to on, rotating by 90 degree increments.",
                "type": "object",
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "description": "enabled\nShould this axis be rotated at all?\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "min": {
                        "type": "number",
                        "minimum": -360,
                        "maximum": 360,
                        "description": "min\nThe minimum angle (from) or set this and max to zero for any angle degrees. Set both to the same non-zero value to force it to that angle only\n   \nNumber\n\n    \n* Default Value is 0.0\n* Minimum allowed is -360.0\n* Maximum allowed is 360.0"
                    },
                    "max": {
                        "type": "number",
                        "minimum": -360,
                        "maximum": 360,
                        "description": "max\nThe maximum angle (to) or set this and min to zero for any angle degrees. Set both to the same non-zero value to force it to that angle only\n   \nNumber\n\n    \n* Default Value is 0.0\n* Minimum allowed is -360.0\n* Maximum allowed is 360.0"
                    },
                    "interval": {
                        "type": "number",
                        "minimum": 0,
                        "maximum": 360,
                        "description": "interval\nIris spins the axis but not freely. For example an interval of 90 would mean 4 possible angles (right angles) degrees. \nSetting this to 0 means totally free rotation.\n\nNote that a lot of structures can have issues with non 90 degree intervals because the minecraft block resolution is so low.\n   \nNumber\n\n    \n* Default Value is 0.0\n* Minimum allowed is 0.0\n* Maximum allowed is 360.0"
                    }
                }
            },
            {"type": "string"}
        ]},
        "obj-com-volmit-iris-engine-object-irisstiltsettings": {"anyOf": [
            {
                "description": "Defines stilting behaviour.",
                "type": "object",
                "properties": {
                    "yMax": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 64,
                        "description": "yMax\nDefines the maximum amount of blocks the object stilts verticially before overstilting and randomRange.\n   \nInteger\n\n    \n* Default Value is 0\n* Minimum allowed is 0\n* Maximum allowed is 64"
                    },
                    "yRand": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 64,
                        "description": "yRand\nDefines the upper boundary for additional blocks after overstilting and/or maxStiltRange.\n   \nInteger\n\n    \n* Default Value is 0\n* Minimum allowed is 0\n* Maximum allowed is 64"
                    },
                    "overStilt": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 64,
                        "description": "overStilt\nIf the place mode is set to stilt, you can over-stilt it even further into the ground. Especially useful when using fast stilt due to inaccuracies.\n   \nInteger\n\n    \n* Default Value is 0\n* Minimum allowed is 0\n* Maximum allowed is 64"
                    },
                    "palette": {
                        "anyOf": [
                            {
                                "!required": false,
                                "type": "object",
                                "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irismaterialpalette",
                                "description": "palette\nIf defined, stilting will be done using this block palette rather than the last layer of the object.\n   \nMaterialPalette (Object)\nA palette of materials\n    \nYou can instead specify \"snippet/palette/some-name.json\" to use a snippet file instead of specifying it here."
                            },
                            {
                                "type": "string",
                                "$ref": "#/definitions/enum-snippet-palette",
                                "description": "palette\nIf defined, stilting will be done using this block palette rather than the last layer of the object.\n   \nMaterialPalette (Object)\nA palette of materials\n    \nYou can instead specify \"snippet/palette/some-name.json\" to use a snippet file instead of specifying it here."
                            }
                        ],
                        "description": "palette\nIf defined, stilting will be done using this block palette rather than the last layer of the object.\n   \nMaterialPalette (Object)\nA palette of materials\n    \nYou can instead specify \"snippet/palette/some-name.json\" to use a snippet file instead of specifying it here."
                    }
                }
            },
            {"type": "string"}
        ]},
        "obj-com-volmit-iris-engine-object-iristreesize": {"anyOf": [
            {
                "description": "Sapling override object picking options",
                "type": "object",
                "properties": {
                    "width": {
                        "type": "integer",
                        "description": "width\nThe width of the sapling area\n   \nInteger\n\n    \n* Default Value is 1"
                    },
                    "depth": {
                        "type": "integer",
                        "description": "depth\nThe depth of the sapling area\n   \nInteger\n\n    \n* Default Value is 1"
                    }
                }
            },
            {"type": "string"}
        ]}
    }
}
